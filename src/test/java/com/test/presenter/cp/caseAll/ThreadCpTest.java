package com.test.presenter.cp.caseAll;

import com.study.constants.ConstantKind;
import com.test.annotations.ExpectedConstantKind;
import com.test.annotations.GeneratedBy;
import com.test.presenter.cp.ConstantPoolPresenterTestBase;
import com.test.presenter.cp.ConstantPoolTestGenerator;
import org.junit.BeforeClass;
import org.junit.Test;

import java.io.IOException;
import java.util.List;

@GeneratedBy(ConstantPoolTestGenerator.class)
public class ThreadCpTest extends ConstantPoolPresenterTestBase {

    @BeforeClass
    public static void prepare() throws IOException, ClassNotFoundException {
        buildRealLines(Class.forName("java.lang.Thread"));
    }

    @ExpectedConstantKind(ConstantKind.CONSTANT_Class)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Fieldref)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Methodref)
    @ExpectedConstantKind(ConstantKind.CONSTANT_InterfaceMethodref)
    @ExpectedConstantKind(ConstantKind.CONSTANT_String)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Integer)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Long)
    @ExpectedConstantKind(ConstantKind.CONSTANT_NameAndType)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Utf8)
    @Test
    public void test() {
        expectedLines = List.of(
                "    #1 = Methodref          #2.#3         // java/lang/Thread.currentThread:()Ljava/lang/Thread;",
                "    #2 = Class              #4            // java/lang/Thread",
                "    #3 = NameAndType        #5:#6         // currentThread:()Ljava/lang/Thread;",
                "    #4 = Utf8               java/lang/Thread",
                "    #5 = Utf8               currentThread",
                "    #6 = Utf8               ()Ljava/lang/Thread;",
                "    #7 = Fieldref           #2.#8         // java/lang/Thread.scopedValueBindings:Ljava/lang/Object;",
                "    #8 = NameAndType        #9:#10        // scopedValueBindings:Ljava/lang/Object;",
                "    #9 = Utf8               scopedValueBindings",
                "   #10 = Utf8               Ljava/lang/Object;",
                "   #11 = Methodref          #12.#13       // jdk/internal/vm/ThreadContainer.owner:()Ljava/lang/Thread;",
                "   #12 = Class              #14           // jdk/internal/vm/ThreadContainer",
                "   #13 = NameAndType        #15:#6        // owner:()Ljava/lang/Thread;",
                "   #14 = Utf8               jdk/internal/vm/ThreadContainer",
                "   #15 = Utf8               owner",
                "   #16 = Methodref          #12.#17       // jdk/internal/vm/ThreadContainer.scopedValueBindings:()Ljdk/internal/vm/ScopedValueContainer$BindingsSnapshot;",
                "   #17 = NameAndType        #9:#18        // scopedValueBindings:()Ljdk/internal/vm/ScopedValueContainer$BindingsSnapshot;",
                "   #18 = Utf8               ()Ljdk/internal/vm/ScopedValueContainer$BindingsSnapshot;",
                "   #19 = Methodref          #20.#21       // jdk/internal/vm/ScopedValueContainer$BindingsSnapshot.scopedValueBindings:()Ljava/lang/Object;",
                "   #20 = Class              #22           // jdk/internal/vm/ScopedValueContainer$BindingsSnapshot",
                "   #21 = NameAndType        #9:#23        // scopedValueBindings:()Ljava/lang/Object;",
                "   #22 = Utf8               jdk/internal/vm/ScopedValueContainer$BindingsSnapshot",
                "   #23 = Utf8               ()Ljava/lang/Object;",
                "   #24 = Class              #25           // java/util/concurrent/StructureViolationException",
                "   #25 = Utf8               java/util/concurrent/StructureViolationException",
                "   #26 = String             #27           // Scoped value bindings have changed",
                "   #27 = Utf8               Scoped value bindings have changed",
                "   #28 = Methodref          #24.#29       // java/util/concurrent/StructureViolationException.\"<init>\":(Ljava/lang/String;)V",
                "   #29 = NameAndType        #30:#31       // \"<init>\":(Ljava/lang/String;)V",
                "   #30 = Utf8               <init>",
                "   #31 = Utf8               (Ljava/lang/String;)V",
                "   #32 = Fieldref           #2.#33        // java/lang/Thread.interruptLock:Ljava/lang/Object;",
                "   #33 = NameAndType        #34:#10       // interruptLock:Ljava/lang/Object;",
                "   #34 = Utf8               interruptLock",
                "   #35 = Fieldref           #2.#36        // java/lang/Thread.nioBlocker:Lsun/nio/ch/Interruptible;",
                "   #36 = NameAndType        #37:#38       // nioBlocker:Lsun/nio/ch/Interruptible;",
                "   #37 = Utf8               nioBlocker",
                "   #38 = Utf8               Lsun/nio/ch/Interruptible;",
                "   #39 = Fieldref           #2.#40        // java/lang/Thread.cont:Ljdk/internal/vm/Continuation;",
                "   #40 = NameAndType        #41:#42       // cont:Ljdk/internal/vm/Continuation;",
                "   #41 = Utf8               cont",
                "   #42 = Utf8               Ljdk/internal/vm/Continuation;",
                "   #43 = Class              #44           // java/lang/VirtualThread",
                "   #44 = Utf8               java/lang/VirtualThread",
                "   #45 = Methodref          #43.#46       // java/lang/VirtualThread.tryYield:()V",
                "   #46 = NameAndType        #47:#48       // tryYield:()V",
                "   #47 = Utf8               tryYield",
                "   #48 = Utf8               ()V",
                "   #49 = Methodref          #2.#50        // java/lang/Thread.yield0:()V",
                "   #50 = NameAndType        #51:#48       // yield0:()V",
                "   #51 = Utf8               yield0",
                "   #52 = Methodref          #53.#54       // jdk/internal/event/ThreadSleepEvent.isTurnedOn:()Z",
                "   #53 = Class              #55           // jdk/internal/event/ThreadSleepEvent",
                "   #54 = NameAndType        #56:#57       // isTurnedOn:()Z",
                "   #55 = Utf8               jdk/internal/event/ThreadSleepEvent",
                "   #56 = Utf8               isTurnedOn",
                "   #57 = Utf8               ()Z",
                "   #58 = Methodref          #53.#59       // jdk/internal/event/ThreadSleepEvent.\"<init>\":()V",
                "   #59 = NameAndType        #30:#48       // \"<init>\":()V",
                "   #60 = Fieldref           #53.#61       // jdk/internal/event/ThreadSleepEvent.time:J",
                "   #61 = NameAndType        #62:#63       // time:J",
                "   #62 = Utf8               time",
                "   #63 = Utf8               J",
                "   #64 = Methodref          #53.#65       // jdk/internal/event/ThreadSleepEvent.begin:()V",
                "   #65 = NameAndType        #66:#48       // begin:()V",
                "   #66 = Utf8               begin",
                "   #67 = Class              #68           // java/lang/OutOfMemoryError",
                "   #68 = Utf8               java/lang/OutOfMemoryError",
                "   #69 = Methodref          #53.#70       // jdk/internal/event/ThreadSleepEvent.commit:()V",
                "   #70 = NameAndType        #71:#48       // commit:()V",
                "   #71 = Utf8               commit",
                "   #72 = Class              #73           // java/lang/IllegalArgumentException",
                "   #73 = Utf8               java/lang/IllegalArgumentException",
                "   #74 = String             #75           // timeout value is negative",
                "   #75 = Utf8               timeout value is negative",
                "   #76 = Methodref          #72.#29       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V",
                "   #77 = Fieldref           #78.#79       // java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;",
                "   #78 = Class              #80           // java/util/concurrent/TimeUnit",
                "   #79 = NameAndType        #81:#82       // MILLISECONDS:Ljava/util/concurrent/TimeUnit;",
                "   #80 = Utf8               java/util/concurrent/TimeUnit",
                "   #81 = Utf8               MILLISECONDS",
                "   #82 = Utf8               Ljava/util/concurrent/TimeUnit;",
                "   #83 = Methodref          #78.#84       // java/util/concurrent/TimeUnit.toNanos:(J)J",
                "   #84 = NameAndType        #85:#86       // toNanos:(J)J",
                "   #85 = Utf8               toNanos",
                "   #86 = Utf8               (J)J",
                "   #87 = Methodref          #2.#88        // java/lang/Thread.beforeSleep:(J)Ljdk/internal/event/ThreadSleepEvent;",
                "   #88 = NameAndType        #89:#90       // beforeSleep:(J)Ljdk/internal/event/ThreadSleepEvent;",
                "   #89 = Utf8               beforeSleep",
                "   #90 = Utf8               (J)Ljdk/internal/event/ThreadSleepEvent;",
                "   #91 = Methodref          #43.#92       // java/lang/VirtualThread.sleepNanos:(J)V",
                "   #92 = NameAndType        #93:#94       // sleepNanos:(J)V",
                "   #93 = Utf8               sleepNanos",
                "   #94 = Utf8               (J)V",
                "   #95 = Methodref          #2.#96        // java/lang/Thread.sleep0:(J)V",
                "   #96 = NameAndType        #97:#94       // sleep0:(J)V",
                "   #97 = Utf8               sleep0",
                "   #98 = Methodref          #2.#99        // java/lang/Thread.afterSleep:(Ljdk/internal/event/ThreadSleepEvent;)V",
                "   #99 = NameAndType        #100:#101     // afterSleep:(Ljdk/internal/event/ThreadSleepEvent;)V",
                "  #100 = Utf8               afterSleep",
                "  #101 = Utf8               (Ljdk/internal/event/ThreadSleepEvent;)V",
                "  #102 = Integer            999999",
                "  #103 = String             #104          // nanosecond timeout value out of range",
                "  #104 = Utf8               nanosecond timeout value out of range",
                "  #105 = Class              #106          // java/lang/Long",
                "  #106 = Utf8               java/lang/Long",
                "  #107 = Long               9223372036854775807l",
                "  #109 = Methodref          #110.#111     // java/lang/Math.min:(JJ)J",
                "  #110 = Class              #112          // java/lang/Math",
                "  #111 = NameAndType        #113:#114     // min:(JJ)J",
                "  #112 = Utf8               java/lang/Math",
                "  #113 = Utf8               min",
                "  #114 = Utf8               (JJ)J",
                "  #115 = Fieldref           #78.#116      // java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;",
                "  #116 = NameAndType        #117:#82      // NANOSECONDS:Ljava/util/concurrent/TimeUnit;",
                "  #117 = Utf8               NANOSECONDS",
                "  #118 = Methodref          #78.#119      // java/util/concurrent/TimeUnit.convert:(Ljava/time/Duration;)J",
                "  #119 = NameAndType        #120:#121     // convert:(Ljava/time/Duration;)J",
                "  #120 = Utf8               convert",
                "  #121 = Utf8               (Ljava/time/Duration;)J",
                "  #122 = Methodref          #123.#124     // java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;",
                "  #123 = Class              #125          // java/lang/System",
                "  #124 = NameAndType        #126:#127     // getSecurityManager:()Ljava/lang/SecurityManager;",
                "  #125 = Utf8               java/lang/System",
                "  #126 = Utf8               getSecurityManager",
                "  #127 = Utf8               ()Ljava/lang/SecurityManager;",
                "  #128 = Methodref          #129.#130     // java/lang/Object.getClass:()Ljava/lang/Class;",
                "  #129 = Class              #131          // java/lang/Object",
                "  #130 = NameAndType        #132:#133     // getClass:()Ljava/lang/Class;",
                "  #131 = Utf8               java/lang/Object",
                "  #132 = Utf8               getClass",
                "  #133 = Utf8               ()Ljava/lang/Class;",
                "  #134 = Methodref          #2.#135       // java/lang/Thread.isCCLOverridden:(Ljava/lang/Class;)Z",
                "  #135 = NameAndType        #136:#137     // isCCLOverridden:(Ljava/lang/Class;)Z",
                "  #136 = Utf8               isCCLOverridden",
                "  #137 = Utf8               (Ljava/lang/Class;)Z",
                "  #138 = Methodref          #2.#139       // java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;",
                "  #139 = NameAndType        #140:#141     // getContextClassLoader:()Ljava/lang/ClassLoader;",
                "  #140 = Utf8               getContextClassLoader",
                "  #141 = Utf8               ()Ljava/lang/ClassLoader;",
                "  #142 = Fieldref           #2.#143       // java/lang/Thread.contextClassLoader:Ljava/lang/ClassLoader;",
                "  #143 = NameAndType        #144:#145     // contextClassLoader:Ljava/lang/ClassLoader;",
                "  #144 = Utf8               contextClassLoader",
                "  #145 = Utf8               Ljava/lang/ClassLoader;",
                "  #146 = Methodref          #129.#59      // java/lang/Object.\"<init>\":()V",
                "  #147 = Class              #148          // java/lang/InternalError",
                "  #148 = Utf8               java/lang/InternalError",
                "  #149 = String             #150          // group cannot be null when attaching",
                "  #150 = Utf8               group cannot be null when attaching",
                "  #151 = Methodref          #147.#29      // java/lang/InternalError.\"<init>\":(Ljava/lang/String;)V",
                "  #152 = Class              #153          // java/lang/Thread$FieldHolder",
                "  #153 = Utf8               java/lang/Thread$FieldHolder",
                "  #154 = Methodref          #152.#155     // java/lang/Thread$FieldHolder.\"<init>\":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;JIZ)V",
                "  #155 = NameAndType        #30:#156      // \"<init>\":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;JIZ)V",
                "  #156 = Utf8               (Ljava/lang/ThreadGroup;Ljava/lang/Runnable;JIZ)V",
                "  #157 = Fieldref           #2.#158       // java/lang/Thread.holder:Ljava/lang/Thread$FieldHolder;",
                "  #158 = NameAndType        #159:#160     // holder:Ljava/lang/Thread$FieldHolder;",
                "  #159 = Utf8               holder",
                "  #160 = Utf8               Ljava/lang/Thread$FieldHolder;",
                "  #161 = Methodref          #162.#163     // java/lang/SecurityManager.getThreadGroup:()Ljava/lang/ThreadGroup;",
                "  #162 = Class              #164          // java/lang/SecurityManager",
                "  #163 = NameAndType        #165:#166     // getThreadGroup:()Ljava/lang/ThreadGroup;",
                "  #164 = Utf8               java/lang/SecurityManager",
                "  #165 = Utf8               getThreadGroup",
                "  #166 = Utf8               ()Ljava/lang/ThreadGroup;",
                "  #167 = Methodref          #2.#163       // java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;",
                "  #168 = Methodref          #162.#169     // java/lang/SecurityManager.checkAccess:(Ljava/lang/ThreadGroup;)V",
                "  #169 = NameAndType        #170:#171     // checkAccess:(Ljava/lang/ThreadGroup;)V",
                "  #170 = Utf8               checkAccess",
                "  #171 = Utf8               (Ljava/lang/ThreadGroup;)V",
                "  #172 = Fieldref           #173.#174     // sun/security/util/SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION:Ljava/lang/RuntimePermission;",
                "  #173 = Class              #175          // sun/security/util/SecurityConstants",
                "  #174 = NameAndType        #176:#177     // SUBCLASS_IMPLEMENTATION_PERMISSION:Ljava/lang/RuntimePermission;",
                "  #175 = Utf8               sun/security/util/SecurityConstants",
                "  #176 = Utf8               SUBCLASS_IMPLEMENTATION_PERMISSION",
                "  #177 = Utf8               Ljava/lang/RuntimePermission;",
                "  #178 = Methodref          #162.#179     // java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V",
                "  #179 = NameAndType        #180:#181     // checkPermission:(Ljava/security/Permission;)V",
                "  #180 = Utf8               checkPermission",
                "  #181 = Utf8               (Ljava/security/Permission;)V",
                "  #182 = Methodref          #2.#183       // java/lang/Thread.getPriority:()I",
                "  #183 = NameAndType        #184:#185     // getPriority:()I",
                "  #184 = Utf8               getPriority",
                "  #185 = Utf8               ()I",
                "  #186 = Methodref          #187.#188     // java/lang/ThreadGroup.getMaxPriority:()I",
                "  #187 = Class              #189          // java/lang/ThreadGroup",
                "  #188 = NameAndType        #190:#185     // getMaxPriority:()I",
                "  #189 = Utf8               java/lang/ThreadGroup",
                "  #190 = Utf8               getMaxPriority",
                "  #191 = Methodref          #110.#192     // java/lang/Math.min:(II)I",
                "  #192 = NameAndType        #113:#193     // min:(II)I",
                "  #193 = Utf8               (II)I",
                "  #194 = Methodref          #2.#195       // java/lang/Thread.isDaemon:()Z",
                "  #195 = NameAndType        #196:#57      // isDaemon:()Z",
                "  #196 = Utf8               isDaemon",
                "  #197 = Methodref          #198.#199     // jdk/internal/misc/VM.initLevel:()I",
                "  #198 = Class              #200          // jdk/internal/misc/VM",
                "  #199 = NameAndType        #201:#185     // initLevel:()I",
                "  #200 = Utf8               jdk/internal/misc/VM",
                "  #201 = Utf8               initLevel",
                "  #202 = Fieldref           #2.#203       // java/lang/Thread.tid:J",
                "  #203 = NameAndType        #204:#63      // tid:J",
                "  #204 = Utf8               tid",
                "  #205 = Methodref          #206.#207     // java/lang/Thread$ThreadIdentifiers.next:()J",
                "  #206 = Class              #208          // java/lang/Thread$ThreadIdentifiers",
                "  #207 = NameAndType        #209:#210     // next:()J",
                "  #208 = Utf8               java/lang/Thread$ThreadIdentifiers",
                "  #209 = Utf8               next",
                "  #210 = Utf8               ()J",
                "  #211 = Methodref          #2.#212       // java/lang/Thread.genThreadName:()Ljava/lang/String;",
                "  #212 = NameAndType        #213:#214     // genThreadName:()Ljava/lang/String;",
                "  #213 = Utf8               genThreadName",
                "  #214 = Utf8               ()Ljava/lang/String;",
                "  #215 = Fieldref           #2.#216       // java/lang/Thread.name:Ljava/lang/String;",
                "  #216 = NameAndType        #217:#218     // name:Ljava/lang/String;",
                "  #217 = Utf8               name",
                "  #218 = Utf8               Ljava/lang/String;",
                "  #219 = Fieldref           #2.#220       // java/lang/Thread.inheritedAccessControlContext:Ljava/security/AccessControlContext;",
                "  #220 = NameAndType        #221:#222     // inheritedAccessControlContext:Ljava/security/AccessControlContext;",
                "  #221 = Utf8               inheritedAccessControlContext",
                "  #222 = Utf8               Ljava/security/AccessControlContext;",
                "  #223 = Methodref          #224.#225     // java/security/AccessController.getContext:()Ljava/security/AccessControlContext;",
                "  #224 = Class              #226          // java/security/AccessController",
                "  #225 = NameAndType        #227:#228     // getContext:()Ljava/security/AccessControlContext;",
                "  #226 = Utf8               java/security/AccessController",
                "  #227 = Utf8               getContext",
                "  #228 = Utf8               ()Ljava/security/AccessControlContext;",
                "  #229 = Fieldref           #2.#230       // java/lang/Thread.inheritableThreadLocals:Ljava/lang/ThreadLocal$ThreadLocalMap;",
                "  #230 = NameAndType        #231:#232     // inheritableThreadLocals:Ljava/lang/ThreadLocal$ThreadLocalMap;",
                "  #231 = Utf8               inheritableThreadLocals",
                "  #232 = Utf8               Ljava/lang/ThreadLocal$ThreadLocalMap;",
                "  #233 = Methodref          #234.#235     // java/lang/ThreadLocal$ThreadLocalMap.size:()I",
                "  #234 = Class              #236          // java/lang/ThreadLocal$ThreadLocalMap",
                "  #235 = NameAndType        #237:#185     // size:()I",
                "  #236 = Utf8               java/lang/ThreadLocal$ThreadLocalMap",
                "  #237 = Utf8               size",
                "  #238 = Methodref          #239.#240     // java/lang/ThreadLocal.createInheritedMap:(Ljava/lang/ThreadLocal$ThreadLocalMap;)Ljava/lang/ThreadLocal$ThreadLocalMap;",
                "  #239 = Class              #241          // java/lang/ThreadLocal",
                "  #240 = NameAndType        #242:#243     // createInheritedMap:(Ljava/lang/ThreadLocal$ThreadLocalMap;)Ljava/lang/ThreadLocal$ThreadLocalMap;",
                "  #241 = Utf8               java/lang/ThreadLocal",
                "  #242 = Utf8               createInheritedMap",
                "  #243 = Utf8               (Ljava/lang/ThreadLocal$ThreadLocalMap;)Ljava/lang/ThreadLocal$ThreadLocalMap;",
                "  #244 = Methodref          #198.#245     // jdk/internal/misc/VM.isBooted:()Z",
                "  #245 = NameAndType        #246:#57      // isBooted:()Z",
                "  #246 = Utf8               isBooted",
                "  #247 = Methodref          #2.#248       // java/lang/Thread.contextClassLoader:(Ljava/lang/Thread;)Ljava/lang/ClassLoader;",
                "  #248 = NameAndType        #144:#249     // contextClassLoader:(Ljava/lang/Thread;)Ljava/lang/ClassLoader;",
                "  #249 = Utf8               (Ljava/lang/Thread;)Ljava/lang/ClassLoader;",
                "  #250 = Methodref          #251.#252     // java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;",
                "  #251 = Class              #253          // java/lang/ClassLoader",
                "  #252 = NameAndType        #254:#141     // getSystemClassLoader:()Ljava/lang/ClassLoader;",
                "  #253 = Utf8               java/lang/ClassLoader",
                "  #254 = Utf8               getSystemClassLoader",
                "  #255 = Fieldref           #2.#256       // java/lang/Thread.NEW_THREAD_BINDINGS:Ljava/lang/Object;",
                "  #256 = NameAndType        #257:#10      // NEW_THREAD_BINDINGS:Ljava/lang/Object;",
                "  #257 = Utf8               NEW_THREAD_BINDINGS",
                "  #258 = String             #259          //",
                "  #259 = Utf8",
                "  #260 = Fieldref           #261.#262     // java/lang/Thread$Constants.NO_PERMISSIONS_ACC:Ljava/security/AccessControlContext;",
                "  #261 = Class              #263          // java/lang/Thread$Constants",
                "  #262 = NameAndType        #264:#222     // NO_PERMISSIONS_ACC:Ljava/security/AccessControlContext;",
                "  #263 = Utf8               java/lang/Thread$Constants",
                "  #264 = Utf8               NO_PERMISSIONS_ACC",
                "  #265 = Fieldref           #261.#266     // java/lang/Thread$Constants.VTHREAD_GROUP:Ljava/lang/ThreadGroup;",
                "  #266 = NameAndType        #267:#268     // VTHREAD_GROUP:Ljava/lang/ThreadGroup;",
                "  #267 = Utf8               VTHREAD_GROUP",
                "  #268 = Utf8               Ljava/lang/ThreadGroup;",
                "  #269 = Long               -1l",
                "  #271 = Class              #272          // java/lang/ThreadBuilders$PlatformThreadBuilder",
                "  #272 = Utf8               java/lang/ThreadBuilders$PlatformThreadBuilder",
                "  #273 = Methodref          #271.#59      // java/lang/ThreadBuilders$PlatformThreadBuilder.\"<init>\":()V",
                "  #274 = Class              #275          // java/lang/ThreadBuilders$VirtualThreadBuilder",
                "  #275 = Utf8               java/lang/ThreadBuilders$VirtualThreadBuilder",
                "  #276 = Methodref          #274.#59      // java/lang/ThreadBuilders$VirtualThreadBuilder.\"<init>\":()V",
                "  #277 = Class              #278          // java/lang/CloneNotSupportedException",
                "  #278 = Utf8               java/lang/CloneNotSupportedException",
                "  #279 = Methodref          #277.#59      // java/lang/CloneNotSupportedException.\"<init>\":()V",
                "  #280 = Class              #281          // java/lang/StringBuilder",
                "  #281 = Utf8               java/lang/StringBuilder",
                "  #282 = Methodref          #280.#59      // java/lang/StringBuilder.\"<init>\":()V",
                "  #283 = String             #284          // Thread-",
                "  #284 = Utf8               Thread-",
                "  #285 = Methodref          #280.#286     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "  #286 = NameAndType        #287:#288     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "  #287 = Utf8               append",
                "  #288 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "  #289 = Methodref          #290.#291     // java/lang/Thread$ThreadNumbering.next:()I",
                "  #290 = Class              #292          // java/lang/Thread$ThreadNumbering",
                "  #291 = NameAndType        #209:#185     // next:()I",
                "  #292 = Utf8               java/lang/Thread$ThreadNumbering",
                "  #293 = Methodref          #280.#294     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;",
                "  #294 = NameAndType        #287:#295     // append:(I)Ljava/lang/StringBuilder;",
                "  #295 = Utf8               (I)Ljava/lang/StringBuilder;",
                "  #296 = Methodref          #280.#297     // java/lang/StringBuilder.toString:()Ljava/lang/String;",
                "  #297 = NameAndType        #298:#214     // toString:()Ljava/lang/String;",
                "  #298 = Utf8               toString",
                "  #299 = Class              #300          // java/lang/NullPointerException",
                "  #300 = Utf8               java/lang/NullPointerException",
                "  #301 = String             #302          // \\'name\\' is null",
                "  #302 = Utf8               \\'name\\' is null",
                "  #303 = Methodref          #299.#29      // java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V",
                "  #304 = Methodref          #2.#305       // java/lang/Thread.\"<init>\":(Ljava/lang/ThreadGroup;Ljava/lang/String;ILjava/lang/Runnable;JLjava/security/AccessControlContext;)V",
                "  #305 = NameAndType        #30:#306      // \"<init>\":(Ljava/lang/ThreadGroup;Ljava/lang/String;ILjava/lang/Runnable;JLjava/security/AccessControlContext;)V",
                "  #306 = Utf8               (Ljava/lang/ThreadGroup;Ljava/lang/String;ILjava/lang/Runnable;JLjava/security/AccessControlContext;)V",
                "  #307 = Methodref          #2.#308       // java/lang/Thread.checkName:(Ljava/lang/String;)Ljava/lang/String;",
                "  #308 = NameAndType        #309:#310     // checkName:(Ljava/lang/String;)Ljava/lang/String;",
                "  #309 = Utf8               checkName",
                "  #310 = Utf8               (Ljava/lang/String;)Ljava/lang/String;",
                "  #311 = Methodref          #312.#313     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #312 = Class              #314          // java/util/Objects",
                "  #313 = NameAndType        #315:#316     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #314 = Utf8               java/util/Objects",
                "  #315 = Utf8               requireNonNull",
                "  #316 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;",
                "  #317 = Methodref          #318.#319     // java/lang/ThreadBuilders.newVirtualThread:(Ljava/util/concurrent/Executor;Ljava/lang/String;ILjava/lang/Runnable;)Ljava/lang/Thread;",
                "  #318 = Class              #320          // java/lang/ThreadBuilders",
                "  #319 = NameAndType        #321:#322     // newVirtualThread:(Ljava/util/concurrent/Executor;Ljava/lang/String;ILjava/lang/Runnable;)Ljava/lang/Thread;",
                "  #320 = Utf8               java/lang/ThreadBuilders",
                "  #321 = Utf8               newVirtualThread",
                "  #322 = Utf8               (Ljava/util/concurrent/Executor;Ljava/lang/String;ILjava/lang/Runnable;)Ljava/lang/Thread;",
                "  #323 = Methodref          #2.#324       // java/lang/Thread.start:()V",
                "  #324 = NameAndType        #325:#48      // start:()V",
                "  #325 = Utf8               start",
                "  #326 = Class              #327          // java/lang/BaseVirtualThread",
                "  #327 = Utf8               java/lang/BaseVirtualThread",
                "  #328 = Fieldref           #152.#329     // java/lang/Thread$FieldHolder.threadStatus:I",
                "  #329 = NameAndType        #330:#331     // threadStatus:I",
                "  #330 = Utf8               threadStatus",
                "  #331 = Utf8               I",
                "  #332 = Class              #333          // java/lang/IllegalThreadStateException",
                "  #333 = Utf8               java/lang/IllegalThreadStateException",
                "  #334 = Methodref          #332.#59      // java/lang/IllegalThreadStateException.\"<init>\":()V",
                "  #335 = Methodref          #2.#336       // java/lang/Thread.start0:()V",
                "  #336 = NameAndType        #337:#48      // start0:()V",
                "  #337 = Utf8               start0",
                "  #338 = Fieldref           #2.#339       // java/lang/Thread.container:Ljdk/internal/vm/ThreadContainer;",
                "  #339 = NameAndType        #340:#341     // container:Ljdk/internal/vm/ThreadContainer;",
                "  #340 = Utf8               container",
                "  #341 = Utf8               Ljdk/internal/vm/ThreadContainer;",
                "  #342 = Methodref          #2.#343       // java/lang/Thread.setThreadContainer:(Ljdk/internal/vm/ThreadContainer;)V",
                "  #343 = NameAndType        #344:#345     // setThreadContainer:(Ljdk/internal/vm/ThreadContainer;)V",
                "  #344 = Utf8               setThreadContainer",
                "  #345 = Utf8               (Ljdk/internal/vm/ThreadContainer;)V",
                "  #346 = Methodref          #12.#347      // jdk/internal/vm/ThreadContainer.onStart:(Ljava/lang/Thread;)V",
                "  #347 = NameAndType        #348:#349     // onStart:(Ljava/lang/Thread;)V",
                "  #348 = Utf8               onStart",
                "  #349 = Utf8               (Ljava/lang/Thread;)V",
                "  #350 = Methodref          #2.#351       // java/lang/Thread.inheritScopedValueBindings:(Ljdk/internal/vm/ThreadContainer;)V",
                "  #351 = NameAndType        #352:#345     // inheritScopedValueBindings:(Ljdk/internal/vm/ThreadContainer;)V",
                "  #352 = Utf8               inheritScopedValueBindings",
                "  #353 = Methodref          #12.#354      // jdk/internal/vm/ThreadContainer.onExit:(Ljava/lang/Thread;)V",
                "  #354 = NameAndType        #355:#349     // onExit:(Ljava/lang/Thread;)V",
                "  #355 = Utf8               onExit",
                "  #356 = Fieldref           #152.#357     // java/lang/Thread$FieldHolder.task:Ljava/lang/Runnable;",
                "  #357 = NameAndType        #358:#359     // task:Ljava/lang/Runnable;",
                "  #358 = Utf8               task",
                "  #359 = Utf8               Ljava/lang/Runnable;",
                "  #360 = Methodref          #2.#21        // java/lang/Thread.scopedValueBindings:()Ljava/lang/Object;",
                "  #361 = Methodref          #2.#362       // java/lang/Thread.runWith:(Ljava/lang/Object;Ljava/lang/Runnable;)V",
                "  #362 = NameAndType        #363:#364     // runWith:(Ljava/lang/Object;Ljava/lang/Runnable;)V",
                "  #363 = Utf8               runWith",
                "  #364 = Utf8               (Ljava/lang/Object;Ljava/lang/Runnable;)V",
                "  #365 = Methodref          #2.#366       // java/lang/Thread.ensureMaterializedForStackWalk:(Ljava/lang/Object;)V",
                "  #366 = NameAndType        #367:#368     // ensureMaterializedForStackWalk:(Ljava/lang/Object;)V",
                "  #367 = Utf8               ensureMaterializedForStackWalk",
                "  #368 = Utf8               (Ljava/lang/Object;)V",
                "  #369 = InterfaceMethodref #370.#371     // java/lang/Runnable.run:()V",
                "  #370 = Class              #372          // java/lang/Runnable",
                "  #371 = NameAndType        #373:#48      // run:()V",
                "  #372 = Utf8               java/lang/Runnable",
                "  #373 = Utf8               run",
                "  #374 = Methodref          #375.#376     // java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V",
                "  #375 = Class              #377          // java/lang/ref/Reference",
                "  #376 = NameAndType        #378:#368     // reachabilityFence:(Ljava/lang/Object;)V",
                "  #377 = Utf8               java/lang/ref/Reference",
                "  #378 = Utf8               reachabilityFence",
                "  #379 = Fieldref           #2.#380       // java/lang/Thread.threadLocals:Ljava/lang/ThreadLocal$ThreadLocalMap;",
                "  #380 = NameAndType        #381:#232     // threadLocals:Ljava/lang/ThreadLocal$ThreadLocalMap;",
                "  #381 = Utf8               threadLocals",
                "  #382 = Fieldref           #2.#383       // java/lang/Thread.uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;",
                "  #383 = NameAndType        #384:#385     // uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;",
                "  #384 = Utf8               uncaughtExceptionHandler",
                "  #385 = Utf8               Ljava/lang/Thread$UncaughtExceptionHandler;",
                "  #386 = Fieldref           #2.#387       // java/lang/Thread.headStackableScopes:Ljdk/internal/vm/StackableScope;",
                "  #387 = NameAndType        #388:#389     // headStackableScopes:Ljdk/internal/vm/StackableScope;",
                "  #388 = Utf8               headStackableScopes",
                "  #389 = Utf8               Ljdk/internal/vm/StackableScope;",
                "  #390 = Methodref          #391.#392     // jdk/internal/vm/StackableScope.popAll:()V",
                "  #391 = Class              #393          // jdk/internal/vm/StackableScope",
                "  #392 = NameAndType        #394:#48      // popAll:()V",
                "  #393 = Utf8               jdk/internal/vm/StackableScope",
                "  #394 = Utf8               popAll",
                "  #395 = Methodref          #2.#396       // java/lang/Thread.threadContainer:()Ljdk/internal/vm/ThreadContainer;",
                "  #396 = NameAndType        #397:#398     // threadContainer:()Ljdk/internal/vm/ThreadContainer;",
                "  #397 = Utf8               threadContainer",
                "  #398 = Utf8               ()Ljdk/internal/vm/ThreadContainer;",
                "  #399 = Fieldref           #400.#401     // jdk/internal/misc/TerminatingThreadLocal.REGISTRY:Ljdk/internal/misc/CarrierThreadLocal;",
                "  #400 = Class              #402          // jdk/internal/misc/TerminatingThreadLocal",
                "  #401 = NameAndType        #403:#404     // REGISTRY:Ljdk/internal/misc/CarrierThreadLocal;",
                "  #402 = Utf8               jdk/internal/misc/TerminatingThreadLocal",
                "  #403 = Utf8               REGISTRY",
                "  #404 = Utf8               Ljdk/internal/misc/CarrierThreadLocal;",
                "  #405 = Methodref          #406.#407     // jdk/internal/misc/CarrierThreadLocal.isPresent:()Z",
                "  #406 = Class              #408          // jdk/internal/misc/CarrierThreadLocal",
                "  #407 = NameAndType        #409:#57      // isPresent:()Z",
                "  #408 = Utf8               jdk/internal/misc/CarrierThreadLocal",
                "  #409 = Utf8               isPresent",
                "  #410 = Methodref          #400.#411     // jdk/internal/misc/TerminatingThreadLocal.threadTerminated:()V",
                "  #411 = NameAndType        #412:#48      // threadTerminated:()V",
                "  #412 = Utf8               threadTerminated",
                "  #413 = Methodref          #2.#414       // java/lang/Thread.clearReferences:()V",
                "  #414 = NameAndType        #415:#48      // clearReferences:()V",
                "  #415 = Utf8               clearReferences",
                "  #416 = Class              #417          // java/lang/UnsupportedOperationException",
                "  #417 = Utf8               java/lang/UnsupportedOperationException",
                "  #418 = Methodref          #416.#59      // java/lang/UnsupportedOperationException.\"<init>\":()V",
                "  #419 = Methodref          #2.#420       // java/lang/Thread.checkAccess:()V",
                "  #420 = NameAndType        #170:#48      // checkAccess:()V",
                "  #421 = Fieldref           #2.#422       // java/lang/Thread.interrupted:Z",
                "  #422 = NameAndType        #423:#424     // interrupted:Z",
                "  #423 = Utf8               interrupted",
                "  #424 = Utf8               Z",
                "  #425 = Methodref          #2.#426       // java/lang/Thread.interrupt0:()V",
                "  #426 = NameAndType        #427:#48      // interrupt0:()V",
                "  #427 = Utf8               interrupt0",
                "  #428 = InterfaceMethodref #429.#430     // sun/nio/ch/Interruptible.interrupt:(Ljava/lang/Thread;)V",
                "  #429 = Class              #431          // sun/nio/ch/Interruptible",
                "  #430 = NameAndType        #432:#349     // interrupt:(Ljava/lang/Thread;)V",
                "  #431 = Utf8               sun/nio/ch/Interruptible",
                "  #432 = Utf8               interrupt",
                "  #433 = Methodref          #2.#434       // java/lang/Thread.getAndClearInterrupt:()Z",
                "  #434 = NameAndType        #435:#57      // getAndClearInterrupt:()Z",
                "  #435 = Utf8               getAndClearInterrupt",
                "  #436 = Methodref          #2.#437       // java/lang/Thread.clearInterruptEvent:()V",
                "  #437 = NameAndType        #438:#48      // clearInterruptEvent:()V",
                "  #438 = Utf8               clearInterruptEvent",
                "  #439 = Methodref          #2.#440       // java/lang/Thread.alive:()Z",
                "  #440 = NameAndType        #441:#57      // alive:()Z",
                "  #441 = Utf8               alive",
                "  #442 = Fieldref           #2.#443       // java/lang/Thread.eetop:J",
                "  #443 = NameAndType        #444:#63      // eetop:J",
                "  #444 = Utf8               eetop",
                "  #445 = Methodref          #72.#59       // java/lang/IllegalArgumentException.\"<init>\":()V",
                "  #446 = Methodref          #2.#447       // java/lang/Thread.isVirtual:()Z",
                "  #447 = NameAndType        #448:#57      // isVirtual:()Z",
                "  #448 = Utf8               isVirtual",
                "  #449 = Methodref          #2.#450       // java/lang/Thread.priority:(I)V",
                "  #450 = NameAndType        #451:#452     // priority:(I)V",
                "  #451 = Utf8               priority",
                "  #452 = Utf8               (I)V",
                "  #453 = Fieldref           #152.#454     // java/lang/Thread$FieldHolder.group:Ljava/lang/ThreadGroup;",
                "  #454 = NameAndType        #455:#268     // group:Ljava/lang/ThreadGroup;",
                "  #455 = Utf8               group",
                "  #456 = Fieldref           #152.#457     // java/lang/Thread$FieldHolder.priority:I",
                "  #457 = NameAndType        #451:#331     // priority:I",
                "  #458 = Methodref          #2.#459       // java/lang/Thread.setPriority0:(I)V",
                "  #459 = NameAndType        #460:#452     // setPriority0:(I)V",
                "  #460 = Utf8               setPriority0",
                "  #461 = String             #462          // name cannot be null",
                "  #462 = Utf8               name cannot be null",
                "  #463 = Methodref          #2.#464       // java/lang/Thread.setNativeName:(Ljava/lang/String;)V",
                "  #464 = NameAndType        #465:#31      // setNativeName:(Ljava/lang/String;)V",
                "  #465 = Utf8               setNativeName",
                "  #466 = Methodref          #2.#467       // java/lang/Thread.isTerminated:()Z",
                "  #467 = NameAndType        #468:#57      // isTerminated:()Z",
                "  #468 = Utf8               isTerminated",
                "  #469 = Methodref          #2.#470       // java/lang/Thread.virtualThreadGroup:()Ljava/lang/ThreadGroup;",
                "  #470 = NameAndType        #471:#166     // virtualThreadGroup:()Ljava/lang/ThreadGroup;",
                "  #471 = Utf8               virtualThreadGroup",
                "  #472 = Methodref          #187.#473     // java/lang/ThreadGroup.activeCount:()I",
                "  #473 = NameAndType        #474:#185     // activeCount:()I",
                "  #474 = Utf8               activeCount",
                "  #475 = Methodref          #187.#476     // java/lang/ThreadGroup.enumerate:([Ljava/lang/Thread;)I",
                "  #476 = NameAndType        #477:#478     // enumerate:([Ljava/lang/Thread;)I",
                "  #477 = Utf8               enumerate",
                "  #478 = Utf8               ([Ljava/lang/Thread;)I",
                "  #479 = Methodref          #2.#480       // java/lang/Thread.isAlive:()Z",
                "  #480 = NameAndType        #481:#57      // isAlive:()Z",
                "  #481 = Utf8               isAlive",
                "  #482 = Methodref          #43.#483      // java/lang/VirtualThread.joinNanos:(J)Z",
                "  #483 = NameAndType        #484:#485     // joinNanos:(J)Z",
                "  #484 = Utf8               joinNanos",
                "  #485 = Utf8               (J)Z",
                "  #486 = Methodref          #123.#487     // java/lang/System.nanoTime:()J",
                "  #487 = NameAndType        #488:#210     // nanoTime:()J",
                "  #488 = Utf8               nanoTime",
                "  #489 = Methodref          #129.#490     // java/lang/Object.wait:(J)V",
                "  #490 = NameAndType        #491:#94      // wait:(J)V",
                "  #491 = Utf8               wait",
                "  #492 = Methodref          #78.#493      // java/util/concurrent/TimeUnit.toMillis:(J)J",
                "  #493 = NameAndType        #494:#86      // toMillis:(J)J",
                "  #494 = Utf8               toMillis",
                "  #495 = Methodref          #2.#496       // java/lang/Thread.join:(J)V",
                "  #496 = NameAndType        #497:#94      // join:(J)V",
                "  #497 = Utf8               join",
                "  #498 = Methodref          #2.#499       // java/lang/Thread.threadState:()Ljava/lang/Thread$State;",
                "  #499 = NameAndType        #500:#501     // threadState:()Ljava/lang/Thread$State;",
                "  #500 = Utf8               threadState",
                "  #501 = Utf8               ()Ljava/lang/Thread$State;",
                "  #502 = Fieldref           #503.#504     // java/lang/Thread$State.NEW:Ljava/lang/Thread$State;",
                "  #503 = Class              #505          // java/lang/Thread$State",
                "  #504 = NameAndType        #506:#507     // NEW:Ljava/lang/Thread$State;",
                "  #505 = Utf8               java/lang/Thread$State",
                "  #506 = Utf8               NEW",
                "  #507 = Utf8               Ljava/lang/Thread$State;",
                "  #508 = String             #509          // Thread not started",
                "  #509 = Utf8               Thread not started",
                "  #510 = Methodref          #332.#29      // java/lang/IllegalThreadStateException.\"<init>\":(Ljava/lang/String;)V",
                "  #511 = Fieldref           #503.#512     // java/lang/Thread$State.TERMINATED:Ljava/lang/Thread$State;",
                "  #512 = NameAndType        #513:#507     // TERMINATED:Ljava/lang/Thread$State;",
                "  #513 = Utf8               TERMINATED",
                "  #514 = Methodref          #78.#515      // java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J",
                "  #515 = NameAndType        #120:#516     // convert:(JLjava/util/concurrent/TimeUnit;)J",
                "  #516 = Utf8               (JLjava/util/concurrent/TimeUnit;)J",
                "  #517 = Class              #518          // java/lang/Exception",
                "  #518 = Utf8               java/lang/Exception",
                "  #519 = String             #520          // Stack trace",
                "  #520 = Utf8               Stack trace",
                "  #521 = Methodref          #517.#29      // java/lang/Exception.\"<init>\":(Ljava/lang/String;)V",
                "  #522 = Methodref          #517.#523     // java/lang/Exception.printStackTrace:()V",
                "  #523 = NameAndType        #524:#48      // printStackTrace:()V",
                "  #524 = Utf8               printStackTrace",
                "  #525 = String             #526          // \\'false\\' not legal for virtual threads",
                "  #526 = Utf8               \\'false\\' not legal for virtual threads",
                "  #527 = Methodref          #2.#528       // java/lang/Thread.daemon:(Z)V",
                "  #528 = NameAndType        #529:#530     // daemon:(Z)V",
                "  #529 = Utf8               daemon",
                "  #530 = Utf8               (Z)V",
                "  #531 = Fieldref           #152.#532     // java/lang/Thread$FieldHolder.daemon:Z",
                "  #532 = NameAndType        #529:#424     // daemon:Z",
                "  #533 = Methodref          #162.#534     // java/lang/SecurityManager.checkAccess:(Ljava/lang/Thread;)V",
                "  #534 = NameAndType        #170:#349     // checkAccess:(Ljava/lang/Thread;)V",
                "  #535 = String             #536          // Thread[#",
                "  #536 = Utf8               Thread[#",
                "  #537 = Methodref          #280.#29      // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V",
                "  #538 = Methodref          #2.#539       // java/lang/Thread.threadId:()J",
                "  #539 = NameAndType        #540:#210     // threadId:()J",
                "  #540 = Utf8               threadId",
                "  #541 = Methodref          #280.#542     // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;",
                "  #542 = NameAndType        #287:#543     // append:(J)Ljava/lang/StringBuilder;",
                "  #543 = Utf8               (J)Ljava/lang/StringBuilder;",
                "  #544 = String             #545          // ,",
                "  #545 = Utf8               ,",
                "  #546 = Methodref          #2.#547       // java/lang/Thread.getName:()Ljava/lang/String;",
                "  #547 = NameAndType        #548:#214     // getName:()Ljava/lang/String;",
                "  #548 = Utf8               getName",
                "  #549 = Methodref          #187.#547     // java/lang/ThreadGroup.getName:()Ljava/lang/String;",
                "  #550 = String             #551          // ]",
                "  #551 = Utf8               ]",
                "  #552 = Methodref          #553.#554     // jdk/internal/reflect/Reflection.getCallerClass:()Ljava/lang/Class;",
                "  #553 = Class              #555          // jdk/internal/reflect/Reflection",
                "  #554 = NameAndType        #556:#133     // getCallerClass:()Ljava/lang/Class;",
                "  #555 = Utf8               jdk/internal/reflect/Reflection",
                "  #556 = Utf8               getCallerClass",
                "  #557 = Methodref          #251.#558     // java/lang/ClassLoader.checkClassLoaderPermission:(Ljava/lang/ClassLoader;Ljava/lang/Class;)V",
                "  #558 = NameAndType        #559:#560     // checkClassLoaderPermission:(Ljava/lang/ClassLoader;Ljava/lang/Class;)V",
                "  #559 = Utf8               checkClassLoaderPermission",
                "  #560 = Utf8               (Ljava/lang/ClassLoader;Ljava/lang/Class;)V",
                "  #561 = Class              #562          // java/lang/RuntimePermission",
                "  #562 = Utf8               java/lang/RuntimePermission",
                "  #563 = String             #564          // setContextClassLoader",
                "  #564 = Utf8               setContextClassLoader",
                "  #565 = Methodref          #561.#29      // java/lang/RuntimePermission.\"<init>\":(Ljava/lang/String;)V",
                "  #566 = Fieldref           #173.#567     // sun/security/util/SecurityConstants.GET_STACK_TRACE_PERMISSION:Ljava/lang/RuntimePermission;",
                "  #567 = NameAndType        #568:#177     // GET_STACK_TRACE_PERMISSION:Ljava/lang/RuntimePermission;",
                "  #568 = Utf8               GET_STACK_TRACE_PERMISSION",
                "  #569 = Fieldref           #2.#570       // java/lang/Thread.EMPTY_STACK_TRACE:[Ljava/lang/StackTraceElement;",
                "  #570 = NameAndType        #571:#572     // EMPTY_STACK_TRACE:[Ljava/lang/StackTraceElement;",
                "  #571 = Utf8               EMPTY_STACK_TRACE",
                "  #572 = Utf8               [Ljava/lang/StackTraceElement;",
                "  #573 = Methodref          #2.#574       // java/lang/Thread.asyncGetStackTrace:()[Ljava/lang/StackTraceElement;",
                "  #574 = NameAndType        #575:#576     // asyncGetStackTrace:()[Ljava/lang/StackTraceElement;",
                "  #575 = Utf8               asyncGetStackTrace",
                "  #576 = Utf8               ()[Ljava/lang/StackTraceElement;",
                "  #577 = Methodref          #517.#59      // java/lang/Exception.\"<init>\":()V",
                "  #578 = Methodref          #517.#579     // java/lang/Exception.getStackTrace:()[Ljava/lang/StackTraceElement;",
                "  #579 = NameAndType        #580:#576     // getStackTrace:()[Ljava/lang/StackTraceElement;",
                "  #580 = Utf8               getStackTrace",
                "  #581 = Methodref          #2.#582       // java/lang/Thread.getStackTrace0:()Ljava/lang/Object;",
                "  #582 = NameAndType        #583:#23      // getStackTrace0:()Ljava/lang/Object;",
                "  #583 = Utf8               getStackTrace0",
                "  #584 = Class              #572          // \"[Ljava/lang/StackTraceElement;\"",
                "  #585 = Methodref          #586.#587     // java/lang/StackTraceElement.of:([Ljava/lang/StackTraceElement;)[Ljava/lang/StackTraceElement;",
                "  #586 = Class              #588          // java/lang/StackTraceElement",
                "  #587 = NameAndType        #589:#590     // of:([Ljava/lang/StackTraceElement;)[Ljava/lang/StackTraceElement;",
                "  #588 = Utf8               java/lang/StackTraceElement",
                "  #589 = Utf8               of",
                "  #590 = Utf8               ([Ljava/lang/StackTraceElement;)[Ljava/lang/StackTraceElement;",
                "  #591 = Fieldref           #173.#592     // sun/security/util/SecurityConstants.MODIFY_THREADGROUP_PERMISSION:Ljava/lang/RuntimePermission;",
                "  #592 = NameAndType        #593:#177     // MODIFY_THREADGROUP_PERMISSION:Ljava/lang/RuntimePermission;",
                "  #593 = Utf8               MODIFY_THREADGROUP_PERMISSION",
                "  #594 = Methodref          #2.#595       // java/lang/Thread.getThreads:()[Ljava/lang/Thread;",
                "  #595 = NameAndType        #596:#597     // getThreads:()[Ljava/lang/Thread;",
                "  #596 = Utf8               getThreads",
                "  #597 = Utf8               ()[Ljava/lang/Thread;",
                "  #598 = Methodref          #2.#599       // java/lang/Thread.dumpThreads:([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;",
                "  #599 = NameAndType        #600:#601     // dumpThreads:([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;",
                "  #600 = Utf8               dumpThreads",
                "  #601 = Utf8               ([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;",
                "  #602 = Methodref          #603.#604     // java/util/HashMap.newHashMap:(I)Ljava/util/HashMap;",
                "  #603 = Class              #605          // java/util/HashMap",
                "  #604 = NameAndType        #606:#607     // newHashMap:(I)Ljava/util/HashMap;",
                "  #605 = Utf8               java/util/HashMap",
                "  #606 = Utf8               newHashMap",
                "  #607 = Utf8               (I)Ljava/util/HashMap;",
                "  #608 = InterfaceMethodref #609.#610     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;",
                "  #609 = Class              #611          // java/util/Map",
                "  #610 = NameAndType        #612:#613     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;",
                "  #611 = Utf8               java/util/Map",
                "  #612 = Utf8               put",
                "  #613 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;",
                "  #614 = Fieldref           #615.#616     // java/lang/Thread$Caches.subclassAudits:Ljava/lang/ClassValue;",
                "  #615 = Class              #617          // java/lang/Thread$Caches",
                "  #616 = NameAndType        #618:#619     // subclassAudits:Ljava/lang/ClassValue;",
                "  #617 = Utf8               java/lang/Thread$Caches",
                "  #618 = Utf8               subclassAudits",
                "  #619 = Utf8               Ljava/lang/ClassValue;",
                "  #620 = Methodref          #621.#622     // java/lang/ClassValue.get:(Ljava/lang/Class;)Ljava/lang/Object;",
                "  #621 = Class              #623          // java/lang/ClassValue",
                "  #622 = NameAndType        #624:#625     // get:(Ljava/lang/Class;)Ljava/lang/Object;",
                "  #623 = Utf8               java/lang/ClassValue",
                "  #624 = Utf8               get",
                "  #625 = Utf8               (Ljava/lang/Class;)Ljava/lang/Object;",
                "  #626 = Class              #627          // java/lang/Boolean",
                "  #627 = Utf8               java/lang/Boolean",
                "  #628 = Methodref          #626.#629     // java/lang/Boolean.booleanValue:()Z",
                "  #629 = NameAndType        #630:#57      // booleanValue:()Z",
                "  #630 = Utf8               booleanValue",
                "  #631 = Class              #632          // java/lang/Thread$1",
                "  #632 = Utf8               java/lang/Thread$1",
                "  #633 = Methodref          #631.#634     // java/lang/Thread$1.\"<init>\":(Ljava/lang/Class;)V",
                "  #634 = NameAndType        #30:#635      // \"<init>\":(Ljava/lang/Class;)V",
                "  #635 = Utf8               (Ljava/lang/Class;)V",
                "  #636 = Methodref          #224.#637     // java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;",
                "  #637 = NameAndType        #638:#639     // doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;",
                "  #638 = Utf8               doPrivileged",
                "  #639 = Utf8               (Ljava/security/PrivilegedAction;)Ljava/lang/Object;",
                "  #640 = Methodref          #198.#641     // jdk/internal/misc/VM.toThreadState:(I)Ljava/lang/Thread$State;",
                "  #641 = NameAndType        #642:#643     // toThreadState:(I)Ljava/lang/Thread$State;",
                "  #642 = Utf8               toThreadState",
                "  #643 = Utf8               (I)Ljava/lang/Thread$State;",
                "  #644 = String             #645          // setDefaultUncaughtExceptionHandler",
                "  #645 = Utf8               setDefaultUncaughtExceptionHandler",
                "  #646 = Fieldref           #2.#647       // java/lang/Thread.defaultUncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;",
                "  #647 = NameAndType        #648:#385     // defaultUncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;",
                "  #648 = Utf8               defaultUncaughtExceptionHandler",
                "  #649 = Methodref          #2.#650       // java/lang/Thread.uncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V",
                "  #650 = NameAndType        #384:#651     // uncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V",
                "  #651 = Utf8               (Ljava/lang/Thread$UncaughtExceptionHandler;)V",
                "  #652 = Methodref          #2.#653       // java/lang/Thread.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;",
                "  #653 = NameAndType        #654:#655     // getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;",
                "  #654 = Utf8               getUncaughtExceptionHandler",
                "  #655 = Utf8               ()Ljava/lang/Thread$UncaughtExceptionHandler;",
                "  #656 = InterfaceMethodref #657.#658     // java/lang/Thread$UncaughtExceptionHandler.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V",
                "  #657 = Class              #659          // java/lang/Thread$UncaughtExceptionHandler",
                "  #658 = NameAndType        #660:#661     // uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V",
                "  #659 = Utf8               java/lang/Thread$UncaughtExceptionHandler",
                "  #660 = Utf8               uncaughtException",
                "  #661 = Utf8               (Ljava/lang/Thread;Ljava/lang/Throwable;)V",
                "  #662 = Methodref          #2.#663       // java/lang/Thread.registerNatives:()V",
                "  #663 = NameAndType        #664:#48      // registerNatives:()V",
                "  #664 = Utf8               registerNatives",
                "  #665 = Utf8               parkBlocker",
                "  #666 = Utf8               MIN_PRIORITY",
                "  #667 = Utf8               ConstantValue",
                "  #668 = Integer            1",
                "  #669 = Utf8               NORM_PRIORITY",
                "  #670 = Integer            5",
                "  #671 = Utf8               MAX_PRIORITY",
                "  #672 = Integer            10",
                "  #673 = Utf8               NO_INHERIT_THREAD_LOCALS",
                "  #674 = Integer            4",
                "  #675 = Utf8               threadLocalRandomSeed",
                "  #676 = Utf8               threadLocalRandomProbe",
                "  #677 = Utf8               threadLocalRandomSecondarySeed",
                "  #678 = Utf8               RuntimeVisibleAnnotations",
                "  #679 = Utf8               Ljdk/internal/vm/annotation/Stable;",
                "  #680 = Utf8               Code",
                "  #681 = Utf8               LineNumberTable",
                "  #682 = Utf8               setScopedValueBindings",
                "  #683 = Utf8               LocalVariableTable",
                "  #684 = Utf8               bindings",
                "  #685 = Utf8               findScopedValueBindings",
                "  #686 = Utf8               Ljdk/internal/vm/annotation/IntrinsicCandidate;",
                "  #687 = Utf8               snapshot",
                "  #688 = Utf8               Ljdk/internal/vm/ScopedValueContainer$BindingsSnapshot;",
                "  #689 = Utf8               this",
                "  #690 = Utf8               Ljava/lang/Thread;",
                "  #691 = Utf8               StackMapTable",
                "  #692 = Utf8               blockedOn",
                "  #693 = Utf8               (Lsun/nio/ch/Interruptible;)V",
                "  #694 = Utf8               b",
                "  #695 = Utf8               me",
                "  #696 = Class              #697          // java/lang/Throwable",
                "  #697 = Utf8               java/lang/Throwable",
                "  #698 = Utf8               getContinuation",
                "  #699 = Utf8               ()Ljdk/internal/vm/Continuation;",
                "  #700 = Utf8               setContinuation",
                "  #701 = Utf8               (Ljdk/internal/vm/Continuation;)V",
                "  #702 = Utf8               currentCarrierThread",
                "  #703 = Utf8               setCurrentThread",
                "  #704 = Utf8               scopedValueCache",
                "  #705 = Utf8               ()[Ljava/lang/Object;",
                "  #706 = Utf8               setScopedValueCache",
                "  #707 = Utf8               ([Ljava/lang/Object;)V",
                "  #708 = Utf8               yield",
                "  #709 = Utf8               vthread",
                "  #710 = Utf8               Ljava/lang/VirtualThread;",
                "  #711 = Utf8               e",
                "  #712 = Utf8               Ljava/lang/OutOfMemoryError;",
                "  #713 = Utf8               nanos",
                "  #714 = Utf8               event",
                "  #715 = Utf8               Ljdk/internal/event/ThreadSleepEvent;",
                "  #716 = Utf8               sleep",
                "  #717 = Utf8               millis",
                "  #718 = Utf8               Exceptions",
                "  #719 = Class              #720          // java/lang/InterruptedException",
                "  #720 = Utf8               java/lang/InterruptedException",
                "  #721 = Utf8               (JI)V",
                "  #722 = Utf8               totalNanos",
                "  #723 = Utf8               (Ljava/time/Duration;)V",
                "  #724 = Utf8               duration",
                "  #725 = Utf8               Ljava/time/Duration;",
                "  #726 = Utf8               onSpinWait",
                "  #727 = Utf8               parent",
                "  #728 = Utf8               sm",
                "  #729 = Utf8               Ljava/lang/SecurityManager;",
                "  #730 = Utf8               parentMap",
                "  #731 = Utf8               g",
                "  #732 = Utf8               characteristics",
                "  #733 = Utf8               stackSize",
                "  #734 = Utf8               acc",
                "  #735 = Utf8               attached",
                "  #736 = Class              #737          // java/lang/String",
                "  #737 = Utf8               java/lang/String",
                "  #738 = Class              #739          // java/security/AccessControlContext",
                "  #739 = Utf8               java/security/AccessControlContext",
                "  #740 = Utf8               (Ljava/lang/String;IZ)V",
                "  #741 = Utf8               pri",
                "  #742 = Utf8               bound",
                "  #743 = Utf8               ofPlatform",
                "  #744 = Utf8               ()Ljava/lang/Thread$Builder$OfPlatform;",
                "  #745 = Utf8               ofVirtual",
                "  #746 = Utf8               ()Ljava/lang/Thread$Builder$OfVirtual;",
                "  #747 = Utf8               clone",
                "  #748 = Utf8               (Ljava/lang/Runnable;)V",
                "  #749 = Utf8               (Ljava/lang/Runnable;Ljava/security/AccessControlContext;)V",
                "  #750 = Utf8               (Ljava/lang/ThreadGroup;Ljava/lang/Runnable;)V",
                "  #751 = Utf8               (Ljava/lang/ThreadGroup;Ljava/lang/String;)V",
                "  #752 = Utf8               (Ljava/lang/Runnable;Ljava/lang/String;)V",
                "  #753 = Utf8               (Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;)V",
                "  #754 = Utf8               (Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V",
                "  #755 = Utf8               (Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;JZ)V",
                "  #756 = Utf8               inheritInheritableThreadLocals",
                "  #757 = Utf8               startVirtualThread",
                "  #758 = Utf8               (Ljava/lang/Runnable;)Ljava/lang/Thread;",
                "  #759 = Utf8               thread",
                "  #760 = Utf8               started",
                "  #761 = Utf8               op",
                "  #762 = Utf8               Ljdk/internal/vm/annotation/Hidden;",
                "  #763 = Utf8               Ljdk/internal/vm/annotation/ForceInline;",
                "  #764 = Utf8               exit",
                "  #765 = Utf8               stop",
                "  #766 = Utf8               Deprecated",
                "  #767 = Utf8               Ljava/lang/Deprecated;",
                "  #768 = Utf8               since",
                "  #769 = Utf8               1.2",
                "  #770 = Utf8               forRemoval",
                "  #771 = Utf8               isInterrupted",
                "  #772 = Utf8               setInterrupt",
                "  #773 = Utf8               clearInterrupt",
                "  #774 = Utf8               oldValue",
                "  #775 = Utf8               suspend",
                "  #776 = Utf8               resume",
                "  #777 = Utf8               setPriority",
                "  #778 = Utf8               newPriority",
                "  #779 = Utf8               maxPriority",
                "  #780 = Utf8               setName",
                "  #781 = Utf8               tarray",
                "  #782 = Utf8               [Ljava/lang/Thread;",
                "  #783 = Utf8               countStackFrames",
                "  #784 = Utf8               startTime",
                "  #785 = Utf8               delay",
                "  #786 = Utf8               (Ljava/time/Duration;)Z",
                "  #787 = Utf8               state",
                "  #788 = Utf8               dumpStack",
                "  #789 = Utf8               setDaemon",
                "  #790 = Utf8               on",
                "  #791 = Utf8               security",
                "  #792 = Utf8               17",
                "  #793 = Utf8               sb",
                "  #794 = Utf8               Ljava/lang/StringBuilder;",
                "  #795 = Utf8               caller",
                "  #796 = Utf8               Ljava/lang/Class;",
                "  #797 = Utf8               cl",
                "  #798 = Utf8               LocalVariableTypeTable",
                "  #799 = Utf8               Ljava/lang/Class<*>;",
                "  #800 = Utf8               Ljdk/internal/reflect/CallerSensitive;",
                "  #801 = Utf8               (Ljava/lang/ClassLoader;)V",
                "  #802 = Utf8               holdsLock",
                "  #803 = Utf8               (Ljava/lang/Object;)Z",
                "  #804 = Utf8               stackTrace",
                "  #805 = Utf8               stes",
                "  #806 = Utf8               getAllStackTraces",
                "  #807 = Utf8               ()Ljava/util/Map;",
                "  #808 = Utf8               i",
                "  #809 = Utf8               threads",
                "  #810 = Utf8               traces",
                "  #811 = Utf8               [[Ljava/lang/StackTraceElement;",
                "  #812 = Utf8               m",
                "  #813 = Utf8               Ljava/util/Map;",
                "  #814 = Utf8               Ljava/util/Map<Ljava/lang/Thread;[Ljava/lang/StackTraceElement;>;",
                "  #815 = Class              #782          // \"[Ljava/lang/Thread;\"",
                "  #816 = Class              #811          // \"[[Ljava/lang/StackTraceElement;\"",
                "  #817 = Utf8               Signature",
                "  #818 = Utf8               ()Ljava/util/Map<Ljava/lang/Thread;[Ljava/lang/StackTraceElement;>;",
                "  #819 = Utf8               (Ljava/lang/Class<*>;)Z",
                "  #820 = Utf8               auditSubclass",
                "  #821 = Utf8               subcl",
                "  #822 = Utf8               result",
                "  #823 = Utf8               Ljava/lang/Boolean;",
                "  #824 = Utf8               getAllThreads",
                "  #825 = Utf8               getId",
                "  #826 = Utf8               19",
                "  #827 = Utf8               getState",
                "  #828 = Utf8               ueh",
                "  #829 = Utf8               getDefaultUncaughtExceptionHandler",
                "  #830 = Utf8               setUncaughtExceptionHandler",
                "  #831 = Utf8               dispatchUncaughtException",
                "  #832 = Utf8               (Ljava/lang/Throwable;)V",
                "  #833 = Utf8               Ljava/lang/Throwable;",
                "  #834 = Utf8               ()Ljdk/internal/vm/StackableScope;",
                "  #835 = Utf8               setHeadStackableScope",
                "  #836 = Utf8               (Ljdk/internal/vm/StackableScope;)V",
                "  #837 = Utf8               scope",
                "  #838 = Utf8               getNextThreadIdOffset",
                "  #839 = Utf8               <clinit>",
                "  #840 = Utf8               SourceFile",
                "  #841 = Utf8               Thread.java",
                "  #842 = Utf8               NestMembers",
                "  #843 = Class              #844          // java/lang/Thread$Constants$1",
                "  #844 = Utf8               java/lang/Thread$Constants$1",
                "  #845 = Class              #846          // java/lang/Thread$Caches$1",
                "  #846 = Utf8               java/lang/Thread$Caches$1",
                "  #847 = Class              #848          // java/lang/Thread$Builder",
                "  #848 = Utf8               java/lang/Thread$Builder",
                "  #849 = Class              #850          // java/lang/Thread$Builder$OfVirtual",
                "  #850 = Utf8               java/lang/Thread$Builder$OfVirtual",
                "  #851 = Class              #852          // java/lang/Thread$Builder$OfPlatform",
                "  #852 = Utf8               java/lang/Thread$Builder$OfPlatform",
                "  #853 = Utf8               InnerClasses",
                "  #854 = Class              #855          // jdk/internal/vm/ScopedValueContainer",
                "  #855 = Utf8               jdk/internal/vm/ScopedValueContainer",
                "  #856 = Utf8               BindingsSnapshot",
                "  #857 = Utf8               FieldHolder",
                "  #858 = Utf8               ThreadIdentifiers",
                "  #859 = Utf8               ThreadLocalMap",
                "  #860 = Utf8               Constants",
                "  #861 = Utf8               PlatformThreadBuilder",
                "  #862 = Utf8               VirtualThreadBuilder",
                "  #863 = Utf8               ThreadNumbering",
                "  #864 = Utf8               UncaughtExceptionHandler",
                "  #865 = Utf8               State",
                "  #866 = Utf8               Caches",
                "  #867 = Utf8               Builder",
                "  #868 = Utf8               OfPlatform",
                "  #869 = Utf8               OfVirtual"
        );
    }
}
