package com.test.presenter.cp.caseAll;

import com.study.constants.ConstantKind;
import com.test.annotations.ExpectedConstantKind;
import com.test.annotations.GeneratedBy;
import com.test.presenter.cp.ConstantPoolPresenterTestBase;
import com.test.presenter.cp.ConstantPoolTestGenerator;
import org.junit.BeforeClass;
import org.junit.Test;

import java.io.IOException;
import java.util.List;

@GeneratedBy(ConstantPoolTestGenerator.class)
public class CallSiteCpTest extends ConstantPoolPresenterTestBase {

    @BeforeClass
    public static void prepare() throws IOException, ClassNotFoundException {
        buildRealLines(Class.forName("java.lang.invoke.CallSite"));
    }

    @ExpectedConstantKind(ConstantKind.CONSTANT_Class)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Fieldref)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Methodref)
    @ExpectedConstantKind(ConstantKind.CONSTANT_String)
    @ExpectedConstantKind(ConstantKind.CONSTANT_NameAndType)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Utf8)
    @Test
    public void test() {
        expectedLines = List.of(
                "    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V",
                "    #2 = Class              #4            // java/lang/Object",
                "    #3 = NameAndType        #5:#6         // \"<init>\":()V",
                "    #4 = Utf8               java/lang/Object",
                "    #5 = Utf8               <init>",
                "    #6 = Utf8               ()V",
                "    #7 = Methodref          #8.#9         // java/lang/invoke/MethodHandleNatives$CallSiteContext.make:(Ljava/lang/invoke/CallSite;)Ljava/lang/invoke/MethodHandleNatives$CallSiteContext;",
                "    #8 = Class              #10           // java/lang/invoke/MethodHandleNatives$CallSiteContext",
                "    #9 = NameAndType        #11:#12       // make:(Ljava/lang/invoke/CallSite;)Ljava/lang/invoke/MethodHandleNatives$CallSiteContext;",
                "   #10 = Utf8               java/lang/invoke/MethodHandleNatives$CallSiteContext",
                "   #11 = Utf8               make",
                "   #12 = Utf8               (Ljava/lang/invoke/CallSite;)Ljava/lang/invoke/MethodHandleNatives$CallSiteContext;",
                "   #13 = Fieldref           #14.#15       // java/lang/invoke/CallSite.context:Ljava/lang/invoke/MethodHandleNatives$CallSiteContext;",
                "   #14 = Class              #16           // java/lang/invoke/CallSite",
                "   #15 = NameAndType        #17:#18       // context:Ljava/lang/invoke/MethodHandleNatives$CallSiteContext;",
                "   #16 = Utf8               java/lang/invoke/CallSite",
                "   #17 = Utf8               context",
                "   #18 = Utf8               Ljava/lang/invoke/MethodHandleNatives$CallSiteContext;",
                "   #19 = Methodref          #14.#20       // java/lang/invoke/CallSite.makeUninitializedCallSite:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "   #20 = NameAndType        #21:#22       // makeUninitializedCallSite:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "   #21 = Utf8               makeUninitializedCallSite",
                "   #22 = Utf8               (Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "   #23 = Fieldref           #14.#24       // java/lang/invoke/CallSite.target:Ljava/lang/invoke/MethodHandle;",
                "   #24 = NameAndType        #25:#26       // target:Ljava/lang/invoke/MethodHandle;",
                "   #25 = Utf8               target",
                "   #26 = Utf8               Ljava/lang/invoke/MethodHandle;",
                "   #27 = Methodref          #28.#29       // java/lang/invoke/MethodHandle.type:()Ljava/lang/invoke/MethodType;",
                "   #28 = Class              #30           // java/lang/invoke/MethodHandle",
                "   #29 = NameAndType        #31:#32       // type:()Ljava/lang/invoke/MethodType;",
                "   #30 = Utf8               java/lang/invoke/MethodHandle",
                "   #31 = Utf8               type",
                "   #32 = Utf8               ()Ljava/lang/invoke/MethodType;",
                "   #33 = Methodref          #14.#34       // java/lang/invoke/CallSite.\"<init>\":(Ljava/lang/invoke/MethodType;)V",
                "   #34 = NameAndType        #5:#35        // \"<init>\":(Ljava/lang/invoke/MethodType;)V",
                "   #35 = Utf8               (Ljava/lang/invoke/MethodType;)V",
                "   #36 = Class              #37           // java/lang/invoke/ConstantCallSite",
                "   #37 = Utf8               java/lang/invoke/ConstantCallSite",
                "   #38 = Methodref          #28.#39       // java/lang/invoke/MethodHandle.invokeWithArguments:([Ljava/lang/Object;)Ljava/lang/Object;",
                "   #39 = NameAndType        #40:#41       // invokeWithArguments:([Ljava/lang/Object;)Ljava/lang/Object;",
                "   #40 = Utf8               invokeWithArguments",
                "   #41 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;",
                "   #42 = Methodref          #14.#43       // java/lang/invoke/CallSite.setTargetNormal:(Ljava/lang/invoke/MethodHandle;)V",
                "   #43 = NameAndType        #44:#45       // setTargetNormal:(Ljava/lang/invoke/MethodHandle;)V",
                "   #44 = Utf8               setTargetNormal",
                "   #45 = Utf8               (Ljava/lang/invoke/MethodHandle;)V",
                "   #46 = Fieldref           #47.#48       // java/lang/invoke/MethodHandleStatics.UNSAFE:Ljdk/internal/misc/Unsafe;",
                "   #47 = Class              #49           // java/lang/invoke/MethodHandleStatics",
                "   #48 = NameAndType        #50:#51       // UNSAFE:Ljdk/internal/misc/Unsafe;",
                "   #49 = Utf8               java/lang/invoke/MethodHandleStatics",
                "   #50 = Utf8               UNSAFE",
                "   #51 = Utf8               Ljdk/internal/misc/Unsafe;",
                "   #52 = Methodref          #53.#54       // jdk/internal/misc/Unsafe.storeStoreFence:()V",
                "   #53 = Class              #55           // jdk/internal/misc/Unsafe",
                "   #54 = NameAndType        #56:#6        // storeStoreFence:()V",
                "   #55 = Utf8               jdk/internal/misc/Unsafe",
                "   #56 = Utf8               storeStoreFence",
                "   #57 = Methodref          #14.#58       // java/lang/invoke/CallSite.wrongTargetType:(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/WrongMethodTypeException;",
                "   #58 = NameAndType        #59:#60       // wrongTargetType:(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/WrongMethodTypeException;",
                "   #59 = Utf8               wrongTargetType",
                "   #60 = Utf8               (Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/WrongMethodTypeException;",
                "   #61 = Class              #62           // java/lang/invoke/WrongMethodTypeException",
                "   #62 = Utf8               java/lang/invoke/WrongMethodTypeException",
                "   #63 = Class              #64           // java/lang/StringBuilder",
                "   #64 = Utf8               java/lang/StringBuilder",
                "   #65 = Methodref          #63.#3        // java/lang/StringBuilder.\"<init>\":()V",
                "   #66 = Methodref          #67.#68       // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;",
                "   #67 = Class              #69           // java/lang/String",
                "   #68 = NameAndType        #70:#71       // valueOf:(Ljava/lang/Object;)Ljava/lang/String;",
                "   #69 = Utf8               java/lang/String",
                "   #70 = Utf8               valueOf",
                "   #71 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;",
                "   #72 = Methodref          #63.#73       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "   #73 = NameAndType        #74:#75       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "   #74 = Utf8               append",
                "   #75 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "   #76 = String             #77           //  should be of type",
                "   #77 = Utf8                should be of type",
                "   #78 = Methodref          #63.#79       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;",
                "   #79 = NameAndType        #74:#80       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;",
                "   #80 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;",
                "   #81 = Methodref          #63.#82       // java/lang/StringBuilder.toString:()Ljava/lang/String;",
                "   #82 = NameAndType        #83:#84       // toString:()Ljava/lang/String;",
                "   #83 = Utf8               toString",
                "   #84 = Utf8               ()Ljava/lang/String;",
                "   #85 = Methodref          #61.#86       // java/lang/invoke/WrongMethodTypeException.\"<init>\":(Ljava/lang/String;)V",
                "   #86 = NameAndType        #5:#87        // \"<init>\":(Ljava/lang/String;)V",
                "   #87 = Utf8               (Ljava/lang/String;)V",
                "   #88 = Methodref          #14.#89       // java/lang/invoke/CallSite.getTargetHandle:()Ljava/lang/invoke/MethodHandle;",
                "   #89 = NameAndType        #90:#91       // getTargetHandle:()Ljava/lang/invoke/MethodHandle;",
                "   #90 = Utf8               getTargetHandle",
                "   #91 = Utf8               ()Ljava/lang/invoke/MethodHandle;",
                "   #92 = Methodref          #28.#93       // java/lang/invoke/MethodHandle.bindArgumentL:(ILjava/lang/Object;)Ljava/lang/invoke/BoundMethodHandle;",
                "   #93 = NameAndType        #94:#95       // bindArgumentL:(ILjava/lang/Object;)Ljava/lang/invoke/BoundMethodHandle;",
                "   #94 = Utf8               bindArgumentL",
                "   #95 = Utf8               (ILjava/lang/Object;)Ljava/lang/invoke/BoundMethodHandle;",
                "   #96 = Methodref          #14.#29       // java/lang/invoke/CallSite.type:()Ljava/lang/invoke/MethodType;",
                "   #97 = Methodref          #98.#99       // java/lang/invoke/MethodHandles.exactInvoker:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "   #98 = Class              #100          // java/lang/invoke/MethodHandles",
                "   #99 = NameAndType        #101:#22      // exactInvoker:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "  #100 = Utf8               java/lang/invoke/MethodHandles",
                "  #101 = Utf8               exactInvoker",
                "  #102 = Methodref          #98.#103      // java/lang/invoke/MethodHandles.foldArguments:(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;",
                "  #103 = NameAndType        #104:#105     // foldArguments:(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;",
                "  #104 = Utf8               foldArguments",
                "  #105 = Utf8               (Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;",
                "  #106 = Fieldref           #14.#107      // java/lang/invoke/CallSite.GET_TARGET:Ljava/lang/invoke/MethodHandle;",
                "  #107 = NameAndType        #108:#26      // GET_TARGET:Ljava/lang/invoke/MethodHandle;",
                "  #108 = Utf8               GET_TARGET",
                "  #109 = Fieldref           #110.#111     // java/lang/invoke/MethodHandles$Lookup.IMPL_LOOKUP:Ljava/lang/invoke/MethodHandles$Lookup;",
                "  #110 = Class              #112          // java/lang/invoke/MethodHandles$Lookup",
                "  #111 = NameAndType        #113:#114     // IMPL_LOOKUP:Ljava/lang/invoke/MethodHandles$Lookup;",
                "  #112 = Utf8               java/lang/invoke/MethodHandles$Lookup",
                "  #113 = Utf8               IMPL_LOOKUP",
                "  #114 = Utf8               Ljava/lang/invoke/MethodHandles$Lookup;",
                "  #115 = String             #116          // getTarget",
                "  #116 = Utf8               getTarget",
                "  #117 = Methodref          #118.#119     // java/lang/invoke/MethodType.methodType:(Ljava/lang/Class;)Ljava/lang/invoke/MethodType;",
                "  #118 = Class              #120          // java/lang/invoke/MethodType",
                "  #119 = NameAndType        #121:#122     // methodType:(Ljava/lang/Class;)Ljava/lang/invoke/MethodType;",
                "  #120 = Utf8               java/lang/invoke/MethodType",
                "  #121 = Utf8               methodType",
                "  #122 = Utf8               (Ljava/lang/Class;)Ljava/lang/invoke/MethodType;",
                "  #123 = Methodref          #110.#124     // java/lang/invoke/MethodHandles$Lookup.findVirtual:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "  #124 = NameAndType        #125:#126     // findVirtual:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "  #125 = Utf8               findVirtual",
                "  #126 = Utf8               (Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "  #127 = Class              #128          // java/lang/ReflectiveOperationException",
                "  #128 = Utf8               java/lang/ReflectiveOperationException",
                "  #129 = Methodref          #47.#130      // java/lang/invoke/MethodHandleStatics.newInternalError:(Ljava/lang/Exception;)Ljava/lang/InternalError;",
                "  #130 = NameAndType        #131:#132     // newInternalError:(Ljava/lang/Exception;)Ljava/lang/InternalError;",
                "  #131 = Utf8               newInternalError",
                "  #132 = Utf8               (Ljava/lang/Exception;)Ljava/lang/InternalError;",
                "  #133 = Fieldref           #14.#134      // java/lang/invoke/CallSite.THROW_UCS:Ljava/lang/invoke/MethodHandle;",
                "  #134 = NameAndType        #135:#26      // THROW_UCS:Ljava/lang/invoke/MethodHandle;",
                "  #135 = Utf8               THROW_UCS",
                "  #136 = String             #137          // uninitializedCallSite",
                "  #137 = Utf8               uninitializedCallSite",
                "  #138 = Class              #139          // \"[Ljava/lang/Object;\"",
                "  #139 = Utf8               [Ljava/lang/Object;",
                "  #140 = Methodref          #118.#141     // java/lang/invoke/MethodType.methodType:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;",
                "  #141 = NameAndType        #121:#142     // methodType:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;",
                "  #142 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;",
                "  #143 = Methodref          #110.#144     // java/lang/invoke/MethodHandles$Lookup.findStatic:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "  #144 = NameAndType        #145:#126     // findStatic:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "  #145 = Utf8               findStatic",
                "  #146 = Class              #147          // java/lang/IllegalStateException",
                "  #147 = Utf8               java/lang/IllegalStateException",
                "  #148 = String             #149          // uninitialized call site",
                "  #149 = Utf8               uninitialized call site",
                "  #150 = Methodref          #146.#86      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V",
                "  #151 = Methodref          #118.#152     // java/lang/invoke/MethodType.basicType:()Ljava/lang/invoke/MethodType;",
                "  #152 = NameAndType        #153:#32      // basicType:()Ljava/lang/invoke/MethodType;",
                "  #153 = Utf8               basicType",
                "  #154 = Methodref          #118.#155     // java/lang/invoke/MethodType.form:()Ljava/lang/invoke/MethodTypeForm;",
                "  #155 = NameAndType        #156:#157     // form:()Ljava/lang/invoke/MethodTypeForm;",
                "  #156 = Utf8               form",
                "  #157 = Utf8               ()Ljava/lang/invoke/MethodTypeForm;",
                "  #158 = Class              #159          // java/lang/invoke/MethodTypeForm",
                "  #159 = Utf8               java/lang/invoke/MethodTypeForm",
                "  #160 = Methodref          #158.#161     // java/lang/invoke/MethodTypeForm.cachedMethodHandle:(I)Ljava/lang/invoke/MethodHandle;",
                "  #161 = NameAndType        #162:#163     // cachedMethodHandle:(I)Ljava/lang/invoke/MethodHandle;",
                "  #162 = Utf8               cachedMethodHandle",
                "  #163 = Utf8               (I)Ljava/lang/invoke/MethodHandle;",
                "  #164 = Methodref          #14.#165      // java/lang/invoke/CallSite.uninitializedCallSiteHandle:()Ljava/lang/invoke/MethodHandle;",
                "  #165 = NameAndType        #166:#91      // uninitializedCallSiteHandle:()Ljava/lang/invoke/MethodHandle;",
                "  #166 = Utf8               uninitializedCallSiteHandle",
                "  #167 = Methodref          #28.#168      // java/lang/invoke/MethodHandle.asType:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "  #168 = NameAndType        #169:#22      // asType:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "  #169 = Utf8               asType",
                "  #170 = Methodref          #158.#171     // java/lang/invoke/MethodTypeForm.setCachedMethodHandle:(ILjava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;",
                "  #171 = NameAndType        #172:#173     // setCachedMethodHandle:(ILjava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;",
                "  #172 = Utf8               setCachedMethodHandle",
                "  #173 = Utf8               (ILjava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;",
                "  #174 = Methodref          #28.#175      // java/lang/invoke/MethodHandle.viewAsType:(Ljava/lang/invoke/MethodType;Z)Ljava/lang/invoke/MethodHandle;",
                "  #175 = NameAndType        #176:#177     // viewAsType:(Ljava/lang/invoke/MethodType;Z)Ljava/lang/invoke/MethodHandle;",
                "  #176 = Utf8               viewAsType",
                "  #177 = Utf8               (Ljava/lang/invoke/MethodType;Z)Ljava/lang/invoke/MethodHandle;",
                "  #178 = Fieldref           #14.#179      // java/lang/invoke/CallSite.TARGET_OFFSET:J",
                "  #179 = NameAndType        #180:#181     // TARGET_OFFSET:J",
                "  #180 = Utf8               TARGET_OFFSET",
                "  #181 = Utf8               J",
                "  #182 = String             #25           // target",
                "  #183 = Methodref          #53.#184      // jdk/internal/misc/Unsafe.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J",
                "  #184 = NameAndType        #185:#186     // objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J",
                "  #185 = Utf8               objectFieldOffset",
                "  #186 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)J",
                "  #187 = Fieldref           #14.#188      // java/lang/invoke/CallSite.$assertionsDisabled:Z",
                "  #188 = NameAndType        #189:#190     // $assertionsDisabled:Z",
                "  #189 = Utf8               $assertionsDisabled",
                "  #190 = Utf8               Z",
                "  #191 = Class              #192          // java/lang/AssertionError",
                "  #192 = Utf8               java/lang/AssertionError",
                "  #193 = Methodref          #191.#3       // java/lang/AssertionError.\"<init>\":()V",
                "  #194 = Methodref          #14.#195      // java/lang/invoke/CallSite.checkTargetChange:(Ljava/lang/invoke/MethodHandle;)V",
                "  #195 = NameAndType        #196:#45      // checkTargetChange:(Ljava/lang/invoke/MethodHandle;)V",
                "  #196 = Utf8               checkTargetChange",
                "  #197 = Methodref          #198.#199     // java/lang/invoke/MethodHandleNatives.setCallSiteTargetNormal:(Ljava/lang/invoke/CallSite;Ljava/lang/invoke/MethodHandle;)V",
                "  #198 = Class              #200          // java/lang/invoke/MethodHandleNatives",
                "  #199 = NameAndType        #201:#202     // setCallSiteTargetNormal:(Ljava/lang/invoke/CallSite;Ljava/lang/invoke/MethodHandle;)V",
                "  #200 = Utf8               java/lang/invoke/MethodHandleNatives",
                "  #201 = Utf8               setCallSiteTargetNormal",
                "  #202 = Utf8               (Ljava/lang/invoke/CallSite;Ljava/lang/invoke/MethodHandle;)V",
                "  #203 = Methodref          #14.#204      // java/lang/invoke/CallSite.getTargetOffset:()J",
                "  #204 = NameAndType        #205:#206     // getTargetOffset:()J",
                "  #205 = Utf8               getTargetOffset",
                "  #206 = Utf8               ()J",
                "  #207 = Methodref          #53.#208      // jdk/internal/misc/Unsafe.getReferenceVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;",
                "  #208 = NameAndType        #209:#210     // getReferenceVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;",
                "  #209 = Utf8               getReferenceVolatile",
                "  #210 = Utf8               (Ljava/lang/Object;J)Ljava/lang/Object;",
                "  #211 = Methodref          #198.#212     // java/lang/invoke/MethodHandleNatives.setCallSiteTargetVolatile:(Ljava/lang/invoke/CallSite;Ljava/lang/invoke/MethodHandle;)V",
                "  #212 = NameAndType        #213:#202     // setCallSiteTargetVolatile:(Ljava/lang/invoke/CallSite;Ljava/lang/invoke/MethodHandle;)V",
                "  #213 = Utf8               setCallSiteTargetVolatile",
                "  #214 = Methodref          #215.#216     // java/lang/invoke/BootstrapMethodInvoker.invoke:(Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;",
                "  #215 = Class              #217          // java/lang/invoke/BootstrapMethodInvoker",
                "  #216 = NameAndType        #218:#219     // invoke:(Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;",
                "  #217 = Utf8               java/lang/invoke/BootstrapMethodInvoker",
                "  #218 = Utf8               invoke",
                "  #219 = Utf8               (Ljava/lang/Class;Ljava/lang/invoke/MethodHandle;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;",
                "  #220 = Class              #221          // java/lang/ClassCastException",
                "  #221 = Utf8               java/lang/ClassCastException",
                "  #222 = String             #223          // CallSite bootstrap method failed to produce an instance of CallSite",
                "  #223 = Utf8               CallSite bootstrap method failed to produce an instance of CallSite",
                "  #224 = Methodref          #220.#86      // java/lang/ClassCastException.\"<init>\":(Ljava/lang/String;)V",
                "  #225 = Methodref          #14.#226      // java/lang/invoke/CallSite.getTarget:()Ljava/lang/invoke/MethodHandle;",
                "  #226 = NameAndType        #116:#91      // getTarget:()Ljava/lang/invoke/MethodHandle;",
                "  #227 = Methodref          #118.#228     // java/lang/invoke/MethodType.equals:(Ljava/lang/Object;)Z",
                "  #228 = NameAndType        #229:#230     // equals:(Ljava/lang/Object;)Z",
                "  #229 = Utf8               equals",
                "  #230 = Utf8               (Ljava/lang/Object;)Z",
                "  #231 = Class              #232          // java/lang/Error",
                "  #232 = Utf8               java/lang/Error",
                "  #233 = Class              #234          // java/lang/Throwable",
                "  #234 = Utf8               java/lang/Throwable",
                "  #235 = Class              #236          // java/lang/BootstrapMethodError",
                "  #236 = Utf8               java/lang/BootstrapMethodError",
                "  #237 = String             #238          // CallSite bootstrap method initialization exception",
                "  #238 = Utf8               CallSite bootstrap method initialization exception",
                "  #239 = Methodref          #235.#240     // java/lang/BootstrapMethodError.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V",
                "  #240 = NameAndType        #5:#241       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V",
                "  #241 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V",
                "  #242 = Methodref          #243.#244     // java/lang/Class.desiredAssertionStatus:()Z",
                "  #243 = Class              #245          // java/lang/Class",
                "  #244 = NameAndType        #246:#247     // desiredAssertionStatus:()Z",
                "  #245 = Utf8               java/lang/Class",
                "  #246 = Utf8               desiredAssertionStatus",
                "  #247 = Utf8               ()Z",
                "  #248 = Utf8               RuntimeVisibleAnnotations",
                "  #249 = Utf8               Ljdk/internal/vm/annotation/Stable;",
                "  #250 = Utf8               Code",
                "  #251 = Utf8               LineNumberTable",
                "  #252 = Utf8               LocalVariableTable",
                "  #253 = Utf8               this",
                "  #254 = Utf8               Ljava/lang/invoke/CallSite;",
                "  #255 = Utf8               Ljava/lang/invoke/MethodType;",
                "  #256 = Utf8               (Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;)V",
                "  #257 = Utf8               targetType",
                "  #258 = Utf8               createTargetHook",
                "  #259 = Utf8               selfCCS",
                "  #260 = Utf8               Ljava/lang/invoke/ConstantCallSite;",
                "  #261 = Utf8               boundTarget",
                "  #262 = Utf8               Exceptions",
                "  #263 = Utf8               setTarget",
                "  #264 = Utf8               newTarget",
                "  #265 = Utf8               oldType",
                "  #266 = Utf8               newType",
                "  #267 = Utf8               StackMapTable",
                "  #268 = Utf8               dynamicInvoker",
                "  #269 = Utf8               makeDynamicInvoker",
                "  #270 = Utf8               invoker",
                "  #271 = Utf8               e",
                "  #272 = Utf8               Ljava/lang/ReflectiveOperationException;",
                "  #273 = Utf8               handle",
                "  #274 = Utf8               ignore",
                "  #275 = Utf8               offset",
                "  #276 = Utf8               getTargetVolatile",
                "  #277 = Utf8               setTargetVolatile",
                "  #278 = Utf8               makeSite",
                "  #279 = Utf8               (Ljava/lang/invoke/MethodHandle;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/invoke/CallSite;",
                "  #280 = Utf8               site",
                "  #281 = Utf8               binding",
                "  #282 = Utf8               Ljava/lang/Object;",
                "  #283 = Utf8               Ljava/lang/Error;",
                "  #284 = Utf8               ex",
                "  #285 = Utf8               Ljava/lang/Throwable;",
                "  #286 = Utf8               bootstrapMethod",
                "  #287 = Utf8               name",
                "  #288 = Utf8               Ljava/lang/String;",
                "  #289 = Utf8               info",
                "  #290 = Utf8               callerClass",
                "  #291 = Utf8               Ljava/lang/Class;",
                "  #292 = Utf8               LocalVariableTypeTable",
                "  #293 = Utf8               Ljava/lang/Class<*>;",
                "  #294 = Utf8               Signature",
                "  #295 = Utf8               (Ljava/lang/invoke/MethodHandle;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/Object;Ljava/lang/Class<*>;)Ljava/lang/invoke/CallSite;",
                "  #296 = Utf8               <clinit>",
                "  #297 = Utf8               SourceFile",
                "  #298 = Utf8               CallSite.java",
                "  #299 = Utf8               PermittedSubclasses",
                "  #300 = Class              #301          // java/lang/invoke/MutableCallSite",
                "  #301 = Utf8               java/lang/invoke/MutableCallSite",
                "  #302 = Class              #303          // java/lang/invoke/VolatileCallSite",
                "  #303 = Utf8               java/lang/invoke/VolatileCallSite",
                "  #304 = Utf8               InnerClasses",
                "  #305 = Utf8               CallSiteContext",
                "  #306 = Utf8               Lookup"
        );
    }
}
