package com.test.presenter.cp.caseAll;

import com.study.constants.ConstantKind;
import com.test.annotations.ExpectedConstantKind;
import com.test.annotations.GeneratedBy;
import com.test.presenter.cp.ConstantPoolPresenterTestBase;
import com.test.presenter.cp.ConstantPoolTestGenerator;
import org.junit.BeforeClass;
import org.junit.Test;

import java.io.IOException;
import java.util.List;

@GeneratedBy(ConstantPoolTestGenerator.class)
public class ArrayListCpTest extends ConstantPoolPresenterTestBase {

    @BeforeClass
    public static void prepare() throws IOException, ClassNotFoundException {
        buildRealLines(Class.forName("java.util.ArrayList"));
    }

    @ExpectedConstantKind(ConstantKind.CONSTANT_Class)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Fieldref)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Methodref)
    @ExpectedConstantKind(ConstantKind.CONSTANT_InterfaceMethodref)
    @ExpectedConstantKind(ConstantKind.CONSTANT_String)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Integer)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Long)
    @ExpectedConstantKind(ConstantKind.CONSTANT_NameAndType)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Utf8)
    @Test
    public void test() {
        expectedLines = List.of(
                "    #1 = Methodref          #2.#3         // java/util/AbstractList.\"<init>\":()V",
                "    #2 = Class              #4            // java/util/AbstractList",
                "    #3 = NameAndType        #5:#6         // \"<init>\":()V",
                "    #4 = Utf8               java/util/AbstractList",
                "    #5 = Utf8               <init>",
                "    #6 = Utf8               ()V",
                "    #7 = Class              #8            // java/lang/Object",
                "    #8 = Utf8               java/lang/Object",
                "    #9 = Fieldref           #10.#11       // java/util/ArrayList.elementData:[Ljava/lang/Object;",
                "   #10 = Class              #12           // java/util/ArrayList",
                "   #11 = NameAndType        #13:#14       // elementData:[Ljava/lang/Object;",
                "   #12 = Utf8               java/util/ArrayList",
                "   #13 = Utf8               elementData",
                "   #14 = Utf8               [Ljava/lang/Object;",
                "   #15 = Fieldref           #10.#16       // java/util/ArrayList.EMPTY_ELEMENTDATA:[Ljava/lang/Object;",
                "   #16 = NameAndType        #17:#14       // EMPTY_ELEMENTDATA:[Ljava/lang/Object;",
                "   #17 = Utf8               EMPTY_ELEMENTDATA",
                "   #18 = Class              #19           // java/lang/IllegalArgumentException",
                "   #19 = Utf8               java/lang/IllegalArgumentException",
                "   #20 = Class              #21           // java/lang/StringBuilder",
                "   #21 = Utf8               java/lang/StringBuilder",
                "   #22 = Methodref          #20.#3        // java/lang/StringBuilder.\"<init>\":()V",
                "   #23 = String             #24           // Illegal Capacity:",
                "   #24 = Utf8               Illegal Capacity:",
                "   #25 = Methodref          #20.#26       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "   #26 = NameAndType        #27:#28       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "   #27 = Utf8               append",
                "   #28 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "   #29 = Methodref          #20.#30       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;",
                "   #30 = NameAndType        #27:#31       // append:(I)Ljava/lang/StringBuilder;",
                "   #31 = Utf8               (I)Ljava/lang/StringBuilder;",
                "   #32 = Methodref          #20.#33       // java/lang/StringBuilder.toString:()Ljava/lang/String;",
                "   #33 = NameAndType        #34:#35       // toString:()Ljava/lang/String;",
                "   #34 = Utf8               toString",
                "   #35 = Utf8               ()Ljava/lang/String;",
                "   #36 = Methodref          #18.#37       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V",
                "   #37 = NameAndType        #5:#38        // \"<init>\":(Ljava/lang/String;)V",
                "   #38 = Utf8               (Ljava/lang/String;)V",
                "   #39 = Fieldref           #10.#40       // java/util/ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA:[Ljava/lang/Object;",
                "   #40 = NameAndType        #41:#14       // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:[Ljava/lang/Object;",
                "   #41 = Utf8               DEFAULTCAPACITY_EMPTY_ELEMENTDATA",
                "   #42 = InterfaceMethodref #43.#44       // java/util/Collection.toArray:()[Ljava/lang/Object;",
                "   #43 = Class              #45           // java/util/Collection",
                "   #44 = NameAndType        #46:#47       // toArray:()[Ljava/lang/Object;",
                "   #45 = Utf8               java/util/Collection",
                "   #46 = Utf8               toArray",
                "   #47 = Utf8               ()[Ljava/lang/Object;",
                "   #48 = Fieldref           #10.#49       // java/util/ArrayList.size:I",
                "   #49 = NameAndType        #50:#51       // size:I",
                "   #50 = Utf8               size",
                "   #51 = Utf8               I",
                "   #52 = InterfaceMethodref #43.#53       // java/util/Collection.getClass:()Ljava/lang/Class;",
                "   #53 = NameAndType        #54:#55       // getClass:()Ljava/lang/Class;",
                "   #54 = Utf8               getClass",
                "   #55 = Utf8               ()Ljava/lang/Class;",
                "   #56 = Class              #14           // \"[Ljava/lang/Object;\"",
                "   #57 = Methodref          #58.#59       // java/util/Arrays.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;",
                "   #58 = Class              #60           // java/util/Arrays",
                "   #59 = NameAndType        #61:#62       // copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;",
                "   #60 = Utf8               java/util/Arrays",
                "   #61 = Utf8               copyOf",
                "   #62 = Utf8               ([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;",
                "   #63 = Fieldref           #10.#64       // java/util/ArrayList.modCount:I",
                "   #64 = NameAndType        #65:#51       // modCount:I",
                "   #65 = Utf8               modCount",
                "   #66 = Methodref          #58.#67       // java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;",
                "   #67 = NameAndType        #61:#68       // copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;",
                "   #68 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;",
                "   #69 = Methodref          #10.#70       // java/util/ArrayList.grow:(I)[Ljava/lang/Object;",
                "   #70 = NameAndType        #71:#72       // grow:(I)[Ljava/lang/Object;",
                "   #71 = Utf8               grow",
                "   #72 = Utf8               (I)[Ljava/lang/Object;",
                "   #73 = Methodref          #74.#75       // jdk/internal/util/ArraysSupport.newLength:(III)I",
                "   #74 = Class              #76           // jdk/internal/util/ArraysSupport",
                "   #75 = NameAndType        #77:#78       // newLength:(III)I",
                "   #76 = Utf8               jdk/internal/util/ArraysSupport",
                "   #77 = Utf8               newLength",
                "   #78 = Utf8               (III)I",
                "   #79 = Methodref          #80.#81       // java/lang/Math.max:(II)I",
                "   #80 = Class              #82           // java/lang/Math",
                "   #81 = NameAndType        #83:#84       // max:(II)I",
                "   #82 = Utf8               java/lang/Math",
                "   #83 = Utf8               max",
                "   #84 = Utf8               (II)I",
                "   #85 = Methodref          #10.#86       // java/util/ArrayList.indexOf:(Ljava/lang/Object;)I",
                "   #86 = NameAndType        #87:#88       // indexOf:(Ljava/lang/Object;)I",
                "   #87 = Utf8               indexOf",
                "   #88 = Utf8               (Ljava/lang/Object;)I",
                "   #89 = Methodref          #10.#90       // java/util/ArrayList.indexOfRange:(Ljava/lang/Object;II)I",
                "   #90 = NameAndType        #91:#92       // indexOfRange:(Ljava/lang/Object;II)I",
                "   #91 = Utf8               indexOfRange",
                "   #92 = Utf8               (Ljava/lang/Object;II)I",
                "   #93 = Methodref          #7.#94        // java/lang/Object.equals:(Ljava/lang/Object;)Z",
                "   #94 = NameAndType        #95:#96       // equals:(Ljava/lang/Object;)Z",
                "   #95 = Utf8               equals",
                "   #96 = Utf8               (Ljava/lang/Object;)Z",
                "   #97 = Methodref          #10.#98       // java/util/ArrayList.lastIndexOfRange:(Ljava/lang/Object;II)I",
                "   #98 = NameAndType        #99:#92       // lastIndexOfRange:(Ljava/lang/Object;II)I",
                "   #99 = Utf8               lastIndexOfRange",
                "  #100 = Methodref          #7.#101       // java/lang/Object.clone:()Ljava/lang/Object;",
                "  #101 = NameAndType        #102:#103     // clone:()Ljava/lang/Object;",
                "  #102 = Utf8               clone",
                "  #103 = Utf8               ()Ljava/lang/Object;",
                "  #104 = Class              #105          // java/lang/CloneNotSupportedException",
                "  #105 = Utf8               java/lang/CloneNotSupportedException",
                "  #106 = Class              #107          // java/lang/InternalError",
                "  #107 = Utf8               java/lang/InternalError",
                "  #108 = Methodref          #106.#109     // java/lang/InternalError.\"<init>\":(Ljava/lang/Throwable;)V",
                "  #109 = NameAndType        #5:#110       // \"<init>\":(Ljava/lang/Throwable;)V",
                "  #110 = Utf8               (Ljava/lang/Throwable;)V",
                "  #111 = Methodref          #7.#53        // java/lang/Object.getClass:()Ljava/lang/Class;",
                "  #112 = Methodref          #113.#114     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V",
                "  #113 = Class              #115          // java/lang/System",
                "  #114 = NameAndType        #116:#117     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V",
                "  #115 = Utf8               java/lang/System",
                "  #116 = Utf8               arraycopy",
                "  #117 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V",
                "  #118 = Methodref          #119.#120     // java/util/Objects.checkIndex:(II)I",
                "  #119 = Class              #121          // java/util/Objects",
                "  #120 = NameAndType        #122:#84      // checkIndex:(II)I",
                "  #121 = Utf8               java/util/Objects",
                "  #122 = Utf8               checkIndex",
                "  #123 = Methodref          #10.#124      // java/util/ArrayList.elementData:(I)Ljava/lang/Object;",
                "  #124 = NameAndType        #13:#125      // elementData:(I)Ljava/lang/Object;",
                "  #125 = Utf8               (I)Ljava/lang/Object;",
                "  #126 = Class              #127          // java/util/NoSuchElementException",
                "  #127 = Utf8               java/util/NoSuchElementException",
                "  #128 = Methodref          #126.#3       // java/util/NoSuchElementException.\"<init>\":()V",
                "  #129 = Methodref          #10.#130      // java/util/ArrayList.grow:()[Ljava/lang/Object;",
                "  #130 = NameAndType        #71:#47       // grow:()[Ljava/lang/Object;",
                "  #131 = Methodref          #10.#132      // java/util/ArrayList.add:(Ljava/lang/Object;[Ljava/lang/Object;I)V",
                "  #132 = NameAndType        #133:#134     // add:(Ljava/lang/Object;[Ljava/lang/Object;I)V",
                "  #133 = Utf8               add",
                "  #134 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;I)V",
                "  #135 = Methodref          #10.#136      // java/util/ArrayList.rangeCheckForAdd:(I)V",
                "  #136 = NameAndType        #137:#138     // rangeCheckForAdd:(I)V",
                "  #137 = Utf8               rangeCheckForAdd",
                "  #138 = Utf8               (I)V",
                "  #139 = Methodref          #10.#140      // java/util/ArrayList.add:(ILjava/lang/Object;)V",
                "  #140 = NameAndType        #133:#141     // add:(ILjava/lang/Object;)V",
                "  #141 = Utf8               (ILjava/lang/Object;)V",
                "  #142 = Methodref          #10.#143      // java/util/ArrayList.add:(Ljava/lang/Object;)Z",
                "  #143 = NameAndType        #133:#96      // add:(Ljava/lang/Object;)Z",
                "  #144 = Methodref          #10.#145      // java/util/ArrayList.fastRemove:([Ljava/lang/Object;I)V",
                "  #145 = NameAndType        #146:#147     // fastRemove:([Ljava/lang/Object;I)V",
                "  #146 = Utf8               fastRemove",
                "  #147 = Utf8               ([Ljava/lang/Object;I)V",
                "  #148 = Class              #149          // java/util/List",
                "  #149 = Utf8               java/util/List",
                "  #150 = Methodref          #10.#151      // java/util/ArrayList.equalsArrayList:(Ljava/util/ArrayList;)Z",
                "  #151 = NameAndType        #152:#153     // equalsArrayList:(Ljava/util/ArrayList;)Z",
                "  #152 = Utf8               equalsArrayList",
                "  #153 = Utf8               (Ljava/util/ArrayList;)Z",
                "  #154 = Methodref          #10.#155      // java/util/ArrayList.equalsRange:(Ljava/util/List;II)Z",
                "  #155 = NameAndType        #156:#157     // equalsRange:(Ljava/util/List;II)Z",
                "  #156 = Utf8               equalsRange",
                "  #157 = Utf8               (Ljava/util/List;II)Z",
                "  #158 = Methodref          #10.#159      // java/util/ArrayList.checkForComodification:(I)V",
                "  #159 = NameAndType        #160:#138     // checkForComodification:(I)V",
                "  #160 = Utf8               checkForComodification",
                "  #161 = Class              #162          // java/util/ConcurrentModificationException",
                "  #162 = Utf8               java/util/ConcurrentModificationException",
                "  #163 = Methodref          #161.#3       // java/util/ConcurrentModificationException.\"<init>\":()V",
                "  #164 = InterfaceMethodref #148.#165     // java/util/List.iterator:()Ljava/util/Iterator;",
                "  #165 = NameAndType        #166:#167     // iterator:()Ljava/util/Iterator;",
                "  #166 = Utf8               iterator",
                "  #167 = Utf8               ()Ljava/util/Iterator;",
                "  #168 = InterfaceMethodref #169.#170     // java/util/Iterator.hasNext:()Z",
                "  #169 = Class              #171          // java/util/Iterator",
                "  #170 = NameAndType        #172:#173     // hasNext:()Z",
                "  #171 = Utf8               java/util/Iterator",
                "  #172 = Utf8               hasNext",
                "  #173 = Utf8               ()Z",
                "  #174 = InterfaceMethodref #169.#175     // java/util/Iterator.next:()Ljava/lang/Object;",
                "  #175 = NameAndType        #176:#103     // next:()Ljava/lang/Object;",
                "  #176 = Utf8               next",
                "  #177 = Methodref          #119.#178     // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z",
                "  #178 = NameAndType        #95:#179      // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z",
                "  #179 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z",
                "  #180 = Methodref          #10.#181      // java/util/ArrayList.hashCodeRange:(II)I",
                "  #181 = NameAndType        #182:#84      // hashCodeRange:(II)I",
                "  #182 = Utf8               hashCodeRange",
                "  #183 = Methodref          #7.#184       // java/lang/Object.hashCode:()I",
                "  #184 = NameAndType        #185:#186     // hashCode:()I",
                "  #185 = Utf8               hashCode",
                "  #186 = Utf8               ()I",
                "  #187 = Class              #188          // java/lang/IndexOutOfBoundsException",
                "  #188 = Utf8               java/lang/IndexOutOfBoundsException",
                "  #189 = Methodref          #10.#190      // java/util/ArrayList.outOfBoundsMsg:(II)Ljava/lang/String;",
                "  #190 = NameAndType        #191:#192     // outOfBoundsMsg:(II)Ljava/lang/String;",
                "  #191 = Utf8               outOfBoundsMsg",
                "  #192 = Utf8               (II)Ljava/lang/String;",
                "  #193 = Methodref          #187.#37      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V",
                "  #194 = Methodref          #10.#195      // java/util/ArrayList.shiftTailOverGap:([Ljava/lang/Object;II)V",
                "  #195 = NameAndType        #196:#197     // shiftTailOverGap:([Ljava/lang/Object;II)V",
                "  #196 = Utf8               shiftTailOverGap",
                "  #197 = Utf8               ([Ljava/lang/Object;II)V",
                "  #198 = Methodref          #10.#199      // java/util/ArrayList.outOfBoundsMsg:(I)Ljava/lang/String;",
                "  #199 = NameAndType        #191:#200     // outOfBoundsMsg:(I)Ljava/lang/String;",
                "  #200 = Utf8               (I)Ljava/lang/String;",
                "  #201 = String             #202          // Index:",
                "  #202 = Utf8               Index:",
                "  #203 = String             #204          // , Size:",
                "  #204 = Utf8               , Size:",
                "  #205 = String             #206          // From Index:",
                "  #206 = Utf8               From Index:",
                "  #207 = String             #208          //  > To Index:",
                "  #208 = Utf8                > To Index:",
                "  #209 = Methodref          #10.#210      // java/util/ArrayList.batchRemove:(Ljava/util/Collection;ZII)Z",
                "  #210 = NameAndType        #211:#212     // batchRemove:(Ljava/util/Collection;ZII)Z",
                "  #211 = Utf8               batchRemove",
                "  #212 = Utf8               (Ljava/util/Collection;ZII)Z",
                "  #213 = Methodref          #119.#214     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #214 = NameAndType        #215:#216     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #215 = Utf8               requireNonNull",
                "  #216 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;",
                "  #217 = InterfaceMethodref #43.#218      // java/util/Collection.contains:(Ljava/lang/Object;)Z",
                "  #218 = NameAndType        #219:#96      // contains:(Ljava/lang/Object;)Z",
                "  #219 = Utf8               contains",
                "  #220 = Class              #221          // java/lang/Throwable",
                "  #221 = Utf8               java/lang/Throwable",
                "  #222 = Methodref          #223.#224     // java/io/ObjectOutputStream.defaultWriteObject:()V",
                "  #223 = Class              #225          // java/io/ObjectOutputStream",
                "  #224 = NameAndType        #226:#6       // defaultWriteObject:()V",
                "  #225 = Utf8               java/io/ObjectOutputStream",
                "  #226 = Utf8               defaultWriteObject",
                "  #227 = Methodref          #223.#228     // java/io/ObjectOutputStream.writeInt:(I)V",
                "  #228 = NameAndType        #229:#138     // writeInt:(I)V",
                "  #229 = Utf8               writeInt",
                "  #230 = Methodref          #223.#231     // java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V",
                "  #231 = NameAndType        #232:#233     // writeObject:(Ljava/lang/Object;)V",
                "  #232 = Utf8               writeObject",
                "  #233 = Utf8               (Ljava/lang/Object;)V",
                "  #234 = Methodref          #235.#236     // java/io/ObjectInputStream.defaultReadObject:()V",
                "  #235 = Class              #237          // java/io/ObjectInputStream",
                "  #236 = NameAndType        #238:#6       // defaultReadObject:()V",
                "  #237 = Utf8               java/io/ObjectInputStream",
                "  #238 = Utf8               defaultReadObject",
                "  #239 = Methodref          #235.#240     // java/io/ObjectInputStream.readInt:()I",
                "  #240 = NameAndType        #241:#186     // readInt:()I",
                "  #241 = Utf8               readInt",
                "  #242 = Methodref          #243.#244     // jdk/internal/access/SharedSecrets.getJavaObjectInputStreamAccess:()Ljdk/internal/access/JavaObjectInputStreamAccess;",
                "  #243 = Class              #245          // jdk/internal/access/SharedSecrets",
                "  #244 = NameAndType        #246:#247     // getJavaObjectInputStreamAccess:()Ljdk/internal/access/JavaObjectInputStreamAccess;",
                "  #245 = Utf8               jdk/internal/access/SharedSecrets",
                "  #246 = Utf8               getJavaObjectInputStreamAccess",
                "  #247 = Utf8               ()Ljdk/internal/access/JavaObjectInputStreamAccess;",
                "  #248 = InterfaceMethodref #249.#250     // jdk/internal/access/JavaObjectInputStreamAccess.checkArray:(Ljava/io/ObjectInputStream;Ljava/lang/Class;I)V",
                "  #249 = Class              #251          // jdk/internal/access/JavaObjectInputStreamAccess",
                "  #250 = NameAndType        #252:#253     // checkArray:(Ljava/io/ObjectInputStream;Ljava/lang/Class;I)V",
                "  #251 = Utf8               jdk/internal/access/JavaObjectInputStreamAccess",
                "  #252 = Utf8               checkArray",
                "  #253 = Utf8               (Ljava/io/ObjectInputStream;Ljava/lang/Class;I)V",
                "  #254 = Methodref          #235.#255     // java/io/ObjectInputStream.readObject:()Ljava/lang/Object;",
                "  #255 = NameAndType        #256:#103     // readObject:()Ljava/lang/Object;",
                "  #256 = Utf8               readObject",
                "  #257 = Class              #258          // java/io/InvalidObjectException",
                "  #258 = Utf8               java/io/InvalidObjectException",
                "  #259 = String             #260          // Invalid size:",
                "  #260 = Utf8               Invalid size:",
                "  #261 = Methodref          #257.#37      // java/io/InvalidObjectException.\"<init>\":(Ljava/lang/String;)V",
                "  #262 = Class              #263          // java/util/ArrayList$ListItr",
                "  #263 = Utf8               java/util/ArrayList$ListItr",
                "  #264 = Methodref          #262.#265     // java/util/ArrayList$ListItr.\"<init>\":(Ljava/util/ArrayList;I)V",
                "  #265 = NameAndType        #5:#266       // \"<init>\":(Ljava/util/ArrayList;I)V",
                "  #266 = Utf8               (Ljava/util/ArrayList;I)V",
                "  #267 = Class              #268          // java/util/ArrayList$Itr",
                "  #268 = Utf8               java/util/ArrayList$Itr",
                "  #269 = Methodref          #267.#270     // java/util/ArrayList$Itr.\"<init>\":(Ljava/util/ArrayList;)V",
                "  #270 = NameAndType        #5:#271       // \"<init>\":(Ljava/util/ArrayList;)V",
                "  #271 = Utf8               (Ljava/util/ArrayList;)V",
                "  #272 = Methodref          #10.#273      // java/util/ArrayList.subListRangeCheck:(III)V",
                "  #273 = NameAndType        #274:#275     // subListRangeCheck:(III)V",
                "  #274 = Utf8               subListRangeCheck",
                "  #275 = Utf8               (III)V",
                "  #276 = Class              #277          // java/util/ArrayList$SubList",
                "  #277 = Utf8               java/util/ArrayList$SubList",
                "  #278 = Methodref          #276.#279     // java/util/ArrayList$SubList.\"<init>\":(Ljava/util/ArrayList;II)V",
                "  #279 = NameAndType        #5:#280       // \"<init>\":(Ljava/util/ArrayList;II)V",
                "  #280 = Utf8               (Ljava/util/ArrayList;II)V",
                "  #281 = Methodref          #10.#282      // java/util/ArrayList.elementAt:([Ljava/lang/Object;I)Ljava/lang/Object;",
                "  #282 = NameAndType        #283:#284     // elementAt:([Ljava/lang/Object;I)Ljava/lang/Object;",
                "  #283 = Utf8               elementAt",
                "  #284 = Utf8               ([Ljava/lang/Object;I)Ljava/lang/Object;",
                "  #285 = InterfaceMethodref #286.#287     // java/util/function/Consumer.accept:(Ljava/lang/Object;)V",
                "  #286 = Class              #288          // java/util/function/Consumer",
                "  #287 = NameAndType        #289:#233     // accept:(Ljava/lang/Object;)V",
                "  #288 = Utf8               java/util/function/Consumer",
                "  #289 = Utf8               accept",
                "  #290 = Class              #291          // java/util/ArrayList$ArrayListSpliterator",
                "  #291 = Utf8               java/util/ArrayList$ArrayListSpliterator",
                "  #292 = Methodref          #290.#293     // java/util/ArrayList$ArrayListSpliterator.\"<init>\":(Ljava/util/ArrayList;III)V",
                "  #293 = NameAndType        #5:#294       // \"<init>\":(Ljava/util/ArrayList;III)V",
                "  #294 = Utf8               (Ljava/util/ArrayList;III)V",
                "  #295 = Methodref          #10.#296      // java/util/ArrayList.removeIf:(Ljava/util/function/Predicate;II)Z",
                "  #296 = NameAndType        #297:#298     // removeIf:(Ljava/util/function/Predicate;II)Z",
                "  #297 = Utf8               removeIf",
                "  #298 = Utf8               (Ljava/util/function/Predicate;II)Z",
                "  #299 = InterfaceMethodref #300.#301     // java/util/function/Predicate.test:(Ljava/lang/Object;)Z",
                "  #300 = Class              #302          // java/util/function/Predicate",
                "  #301 = NameAndType        #303:#96      // test:(Ljava/lang/Object;)Z",
                "  #302 = Utf8               java/util/function/Predicate",
                "  #303 = Utf8               test",
                "  #304 = Methodref          #10.#305      // java/util/ArrayList.nBits:(I)[J",
                "  #305 = NameAndType        #306:#307     // nBits:(I)[J",
                "  #306 = Utf8               nBits",
                "  #307 = Utf8               (I)[J",
                "  #308 = Methodref          #10.#309      // java/util/ArrayList.setBit:([JI)V",
                "  #309 = NameAndType        #310:#311     // setBit:([JI)V",
                "  #310 = Utf8               setBit",
                "  #311 = Utf8               ([JI)V",
                "  #312 = Methodref          #10.#313      // java/util/ArrayList.isClear:([JI)Z",
                "  #313 = NameAndType        #314:#315     // isClear:([JI)Z",
                "  #314 = Utf8               isClear",
                "  #315 = Utf8               ([JI)Z",
                "  #316 = Methodref          #10.#317      // java/util/ArrayList.replaceAllRange:(Ljava/util/function/UnaryOperator;II)V",
                "  #317 = NameAndType        #318:#319     // replaceAllRange:(Ljava/util/function/UnaryOperator;II)V",
                "  #318 = Utf8               replaceAllRange",
                "  #319 = Utf8               (Ljava/util/function/UnaryOperator;II)V",
                "  #320 = InterfaceMethodref #321.#322     // java/util/function/UnaryOperator.apply:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #321 = Class              #323          // java/util/function/UnaryOperator",
                "  #322 = NameAndType        #324:#216     // apply:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #323 = Utf8               java/util/function/UnaryOperator",
                "  #324 = Utf8               apply",
                "  #325 = Methodref          #58.#326      // java/util/Arrays.sort:([Ljava/lang/Object;IILjava/util/Comparator;)V",
                "  #326 = NameAndType        #327:#328     // sort:([Ljava/lang/Object;IILjava/util/Comparator;)V",
                "  #327 = Utf8               sort",
                "  #328 = Utf8               ([Ljava/lang/Object;IILjava/util/Comparator;)V",
                "  #329 = Class              #330          // java/util/RandomAccess",
                "  #330 = Utf8               java/util/RandomAccess",
                "  #331 = Class              #332          // java/lang/Cloneable",
                "  #332 = Utf8               java/lang/Cloneable",
                "  #333 = Class              #334          // java/io/Serializable",
                "  #334 = Utf8               java/io/Serializable",
                "  #335 = Utf8               serialVersionUID",
                "  #336 = Utf8               J",
                "  #337 = Utf8               ConstantValue",
                "  #338 = Long               8683452581122892189l",
                "  #340 = Utf8               DEFAULT_CAPACITY",
                "  #341 = Integer            10",
                "  #342 = Utf8               Code",
                "  #343 = Utf8               LineNumberTable",
                "  #344 = Utf8               LocalVariableTable",
                "  #345 = Utf8               this",
                "  #346 = Utf8               Ljava/util/ArrayList;",
                "  #347 = Utf8               initialCapacity",
                "  #348 = Utf8               LocalVariableTypeTable",
                "  #349 = Utf8               Ljava/util/ArrayList<TE;>;",
                "  #350 = Utf8               StackMapTable",
                "  #351 = Utf8               (Ljava/util/Collection;)V",
                "  #352 = Utf8               c",
                "  #353 = Utf8               Ljava/util/Collection;",
                "  #354 = Utf8               a",
                "  #355 = Utf8               Ljava/util/Collection<+TE;>;",
                "  #356 = Utf8               Signature",
                "  #357 = Utf8               (Ljava/util/Collection<+TE;>;)V",
                "  #358 = Utf8               trimToSize",
                "  #359 = Utf8               ensureCapacity",
                "  #360 = Utf8               minCapacity",
                "  #361 = Utf8               newCapacity",
                "  #362 = Utf8               oldCapacity",
                "  #363 = Utf8               isEmpty",
                "  #364 = Utf8               o",
                "  #365 = Utf8               Ljava/lang/Object;",
                "  #366 = Utf8               i",
                "  #367 = Utf8               start",
                "  #368 = Utf8               end",
                "  #369 = Utf8               es",
                "  #370 = Utf8               lastIndexOf",
                "  #371 = Utf8               v",
                "  #372 = Utf8               e",
                "  #373 = Utf8               Ljava/lang/CloneNotSupportedException;",
                "  #374 = Utf8               Ljava/util/ArrayList<*>;",
                "  #375 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;",
                "  #376 = Utf8               [TT;",
                "  #377 = Utf8               <T:Ljava/lang/Object;>([TT;)[TT;",
                "  #378 = Utf8               index",
                "  #379 = Utf8               (I)TE;",
                "  #380 = Utf8               <E:Ljava/lang/Object;>([Ljava/lang/Object;I)TE;",
                "  #381 = Utf8               get",
                "  #382 = Utf8               getFirst",
                "  #383 = Utf8               ()TE;",
                "  #384 = Utf8               getLast",
                "  #385 = Utf8               last",
                "  #386 = Utf8               set",
                "  #387 = Utf8               (ILjava/lang/Object;)Ljava/lang/Object;",
                "  #388 = Utf8               element",
                "  #389 = Utf8               oldValue",
                "  #390 = Utf8               TE;",
                "  #391 = Utf8               (ITE;)TE;",
                "  #392 = Utf8               s",
                "  #393 = Utf8               (TE;[Ljava/lang/Object;I)V",
                "  #394 = Utf8               (TE;)Z",
                "  #395 = Utf8               (ITE;)V",
                "  #396 = Utf8               addFirst",
                "  #397 = Utf8               (TE;)V",
                "  #398 = Utf8               addLast",
                "  #399 = Utf8               remove",
                "  #400 = Utf8               removeFirst",
                "  #401 = Utf8               removeLast",
                "  #402 = Utf8               expectedModCount",
                "  #403 = Utf8               equal",
                "  #404 = Utf8               Z",
                "  #405 = Utf8               other",
                "  #406 = Utf8               Ljava/util/List;",
                "  #407 = Utf8               from",
                "  #408 = Utf8               to",
                "  #409 = Utf8               oit",
                "  #410 = Utf8               Ljava/util/Iterator;",
                "  #411 = Utf8               Ljava/util/List<*>;",
                "  #412 = Utf8               Ljava/util/Iterator<*>;",
                "  #413 = Utf8               (Ljava/util/List<*>;II)Z",
                "  #414 = Utf8               otherEs",
                "  #415 = Utf8               otherModCount",
                "  #416 = Utf8               (Ljava/util/ArrayList<*>;)Z",
                "  #417 = Utf8               hash",
                "  #418 = Utf8               newSize",
                "  #419 = Utf8               clear",
                "  #420 = Utf8               addAll",
                "  #421 = Utf8               (Ljava/util/Collection;)Z",
                "  #422 = Utf8               numNew",
                "  #423 = Utf8               (Ljava/util/Collection<+TE;>;)Z",
                "  #424 = Utf8               (ILjava/util/Collection;)Z",
                "  #425 = Utf8               numMoved",
                "  #426 = Utf8               (ILjava/util/Collection<+TE;>;)Z",
                "  #427 = Utf8               removeRange",
                "  #428 = Utf8               (II)V",
                "  #429 = Utf8               fromIndex",
                "  #430 = Utf8               toIndex",
                "  #431 = Utf8               lo",
                "  #432 = Utf8               hi",
                "  #433 = Utf8               removeAll",
                "  #434 = Utf8               Ljava/util/Collection<*>;",
                "  #435 = Utf8               (Ljava/util/Collection<*>;)Z",
                "  #436 = Utf8               retainAll",
                "  #437 = Utf8               ex",
                "  #438 = Utf8               Ljava/lang/Throwable;",
                "  #439 = Utf8               complement",
                "  #440 = Utf8               r",
                "  #441 = Utf8               w",
                "  #442 = Utf8               (Ljava/util/Collection<*>;ZII)Z",
                "  #443 = Utf8               (Ljava/io/ObjectOutputStream;)V",
                "  #444 = Utf8               Ljava/io/ObjectOutputStream;",
                "  #445 = Utf8               Exceptions",
                "  #446 = Class              #447          // java/io/IOException",
                "  #447 = Utf8               java/io/IOException",
                "  #448 = Utf8               (Ljava/io/ObjectInputStream;)V",
                "  #449 = Utf8               elements",
                "  #450 = Utf8               Ljava/io/ObjectInputStream;",
                "  #451 = Class              #452          // java/lang/ClassNotFoundException",
                "  #452 = Utf8               java/lang/ClassNotFoundException",
                "  #453 = Utf8               listIterator",
                "  #454 = Utf8               (I)Ljava/util/ListIterator;",
                "  #455 = Utf8               (I)Ljava/util/ListIterator<TE;>;",
                "  #456 = Utf8               ()Ljava/util/ListIterator;",
                "  #457 = Utf8               ()Ljava/util/ListIterator<TE;>;",
                "  #458 = Utf8               ()Ljava/util/Iterator<TE;>;",
                "  #459 = Utf8               subList",
                "  #460 = Utf8               (II)Ljava/util/List;",
                "  #461 = Utf8               (II)Ljava/util/List<TE;>;",
                "  #462 = Utf8               forEach",
                "  #463 = Utf8               (Ljava/util/function/Consumer;)V",
                "  #464 = Utf8               action",
                "  #465 = Utf8               Ljava/util/function/Consumer;",
                "  #466 = Utf8               Ljava/util/function/Consumer<-TE;>;",
                "  #467 = Utf8               (Ljava/util/function/Consumer<-TE;>;)V",
                "  #468 = Utf8               spliterator",
                "  #469 = Utf8               ()Ljava/util/Spliterator;",
                "  #470 = Utf8               ()Ljava/util/Spliterator<TE;>;",
                "  #471 = Utf8               n",
                "  #472 = Utf8               bits",
                "  #473 = Utf8               [J",
                "  #474 = Utf8               (Ljava/util/function/Predicate;)Z",
                "  #475 = Utf8               filter",
                "  #476 = Utf8               Ljava/util/function/Predicate;",
                "  #477 = Utf8               Ljava/util/function/Predicate<-TE;>;",
                "  #478 = Utf8               (Ljava/util/function/Predicate<-TE;>;)Z",
                "  #479 = Utf8               beg",
                "  #480 = Utf8               deathRow",
                "  #481 = Class              #473          // \"[J\"",
                "  #482 = Utf8               (Ljava/util/function/Predicate<-TE;>;II)Z",
                "  #483 = Utf8               replaceAll",
                "  #484 = Utf8               (Ljava/util/function/UnaryOperator;)V",
                "  #485 = Utf8               operator",
                "  #486 = Utf8               Ljava/util/function/UnaryOperator;",
                "  #487 = Utf8               Ljava/util/function/UnaryOperator<TE;>;",
                "  #488 = Utf8               (Ljava/util/function/UnaryOperator<TE;>;)V",
                "  #489 = Utf8               (Ljava/util/function/UnaryOperator<TE;>;II)V",
                "  #490 = Utf8               (Ljava/util/Comparator;)V",
                "  #491 = Utf8               Ljava/util/Comparator;",
                "  #492 = Utf8               Ljava/util/Comparator<-TE;>;",
                "  #493 = Utf8               (Ljava/util/Comparator<-TE;>;)V",
                "  #494 = Utf8               checkInvariants",
                "  #495 = Utf8               <clinit>",
                "  #496 = Utf8               <E:Ljava/lang/Object;>Ljava/util/AbstractList<TE;>;Ljava/util/List<TE;>;Ljava/util/RandomAccess;Ljava/lang/Cloneable;Ljava/io/Serializable;",
                "  #497 = Utf8               SourceFile",
                "  #498 = Utf8               ArrayList.java",
                "  #499 = Utf8               NestMembers",
                "  #500 = Class              #501          // java/util/ArrayList$SubList$2",
                "  #501 = Utf8               java/util/ArrayList$SubList$2",
                "  #502 = Class              #503          // java/util/ArrayList$SubList$1",
                "  #503 = Utf8               java/util/ArrayList$SubList$1",
                "  #504 = Utf8               InnerClasses",
                "  #505 = Utf8               ListItr",
                "  #506 = Utf8               Itr",
                "  #507 = Utf8               SubList",
                "  #508 = Utf8               ArrayListSpliterator"
        );
    }
}
