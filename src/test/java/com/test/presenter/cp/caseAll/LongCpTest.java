package com.test.presenter.cp.caseAll;

import com.study.constants.ConstantKind;
import com.test.annotations.ExpectedConstantKind;
import com.test.annotations.GeneratedBy;
import com.test.presenter.cp.ConstantPoolPresenterTestBase;
import com.test.presenter.cp.ConstantPoolTestGenerator;
import org.junit.BeforeClass;
import org.junit.Test;

import java.io.IOException;
import java.util.List;

@GeneratedBy(ConstantPoolTestGenerator.class)
public class LongCpTest extends ConstantPoolPresenterTestBase {

    @BeforeClass
    public static void prepare() throws IOException, ClassNotFoundException {
        buildRealLines(Class.forName("java.lang.Long"));
    }

    @ExpectedConstantKind(ConstantKind.CONSTANT_Class)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Fieldref)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Methodref)
    @ExpectedConstantKind(ConstantKind.CONSTANT_InterfaceMethodref)
    @ExpectedConstantKind(ConstantKind.CONSTANT_String)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Integer)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Long)
    @ExpectedConstantKind(ConstantKind.CONSTANT_NameAndType)
    @ExpectedConstantKind(ConstantKind.CONSTANT_Utf8)
    @Test
    public void test() {
        expectedLines = List.of(
                "    #1 = Class              #2            // java/lang/Long",
                "    #2 = Utf8               java/lang/Long",
                "    #3 = Class              #4            // java/lang/Byte",
                "    #4 = Utf8               java/lang/Byte",
                "    #5 = Class              #6            // java/lang/String",
                "    #6 = Utf8               java/lang/String",
                "    #7 = Class              #8            // java/lang/Character",
                "    #8 = Utf8               java/lang/Character",
                "    #9 = Methodref          #1.#10        // java/lang/Long.toString:(J)Ljava/lang/String;",
                "   #10 = NameAndType        #11:#12       // toString:(J)Ljava/lang/String;",
                "   #11 = Utf8               toString",
                "   #12 = Utf8               (J)Ljava/lang/String;",
                "   #13 = Fieldref           #5.#14        // java/lang/String.COMPACT_STRINGS:Z",
                "   #14 = NameAndType        #15:#16       // COMPACT_STRINGS:Z",
                "   #15 = Utf8               COMPACT_STRINGS",
                "   #16 = Utf8               Z",
                "   #17 = Fieldref           #18.#19       // java/lang/Integer.digits:[C",
                "   #18 = Class              #20           // java/lang/Integer",
                "   #19 = NameAndType        #21:#22       // digits:[C",
                "   #20 = Utf8               java/lang/Integer",
                "   #21 = Utf8               digits",
                "   #22 = Utf8               [C",
                "   #23 = Methodref          #24.#25       // java/lang/StringLatin1.newString:([BII)Ljava/lang/String;",
                "   #24 = Class              #26           // java/lang/StringLatin1",
                "   #25 = NameAndType        #27:#28       // newString:([BII)Ljava/lang/String;",
                "   #26 = Utf8               java/lang/StringLatin1",
                "   #27 = Utf8               newString",
                "   #28 = Utf8               ([BII)Ljava/lang/String;",
                "   #29 = Methodref          #1.#30        // java/lang/Long.toStringUTF16:(JI)Ljava/lang/String;",
                "   #30 = NameAndType        #31:#32       // toStringUTF16:(JI)Ljava/lang/String;",
                "   #31 = Utf8               toStringUTF16",
                "   #32 = Utf8               (JI)Ljava/lang/String;",
                "   #33 = Methodref          #34.#35       // java/lang/StringUTF16.putChar:([BII)V",
                "   #34 = Class              #36           // java/lang/StringUTF16",
                "   #35 = NameAndType        #37:#38       // putChar:([BII)V",
                "   #36 = Utf8               java/lang/StringUTF16",
                "   #37 = Utf8               putChar",
                "   #38 = Utf8               ([BII)V",
                "   #39 = Methodref          #34.#25       // java/lang/StringUTF16.newString:([BII)Ljava/lang/String;",
                "   #40 = Methodref          #1.#41        // java/lang/Long.toString:(JI)Ljava/lang/String;",
                "   #41 = NameAndType        #11:#32       // toString:(JI)Ljava/lang/String;",
                "   #42 = Methodref          #1.#43        // java/lang/Long.toBinaryString:(J)Ljava/lang/String;",
                "   #43 = NameAndType        #44:#12       // toBinaryString:(J)Ljava/lang/String;",
                "   #44 = Utf8               toBinaryString",
                "   #45 = Methodref          #1.#46        // java/lang/Long.toUnsignedString0:(JI)Ljava/lang/String;",
                "   #46 = NameAndType        #47:#32       // toUnsignedString0:(JI)Ljava/lang/String;",
                "   #47 = Utf8               toUnsignedString0",
                "   #48 = Methodref          #1.#49        // java/lang/Long.toOctalString:(J)Ljava/lang/String;",
                "   #49 = NameAndType        #50:#12       // toOctalString:(J)Ljava/lang/String;",
                "   #50 = Utf8               toOctalString",
                "   #51 = Long               5l",
                "   #53 = Long               10l",
                "   #55 = Class              #56           // java/lang/StringBuilder",
                "   #56 = Utf8               java/lang/StringBuilder",
                "   #57 = Methodref          #55.#58       // java/lang/StringBuilder.\"<init>\":()V",
                "   #58 = NameAndType        #59:#60       // \"<init>\":()V",
                "   #59 = Utf8               <init>",
                "   #60 = Utf8               ()V",
                "   #61 = Methodref          #55.#62       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "   #62 = NameAndType        #63:#64       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "   #63 = Utf8               append",
                "   #64 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "   #65 = Methodref          #55.#66       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;",
                "   #66 = NameAndType        #63:#67       // append:(J)Ljava/lang/StringBuilder;",
                "   #67 = Utf8               (J)Ljava/lang/StringBuilder;",
                "   #68 = Methodref          #55.#69       // java/lang/StringBuilder.toString:()Ljava/lang/String;",
                "   #69 = NameAndType        #11:#70       // toString:()Ljava/lang/String;",
                "   #70 = Utf8               ()Ljava/lang/String;",
                "   #71 = Methodref          #1.#72        // java/lang/Long.toHexString:(J)Ljava/lang/String;",
                "   #72 = NameAndType        #73:#12       // toHexString:(J)Ljava/lang/String;",
                "   #73 = Utf8               toHexString",
                "   #74 = Methodref          #1.#75        // java/lang/Long.toUnsignedBigInteger:(J)Ljava/math/BigInteger;",
                "   #75 = NameAndType        #76:#77       // toUnsignedBigInteger:(J)Ljava/math/BigInteger;",
                "   #76 = Utf8               toUnsignedBigInteger",
                "   #77 = Utf8               (J)Ljava/math/BigInteger;",
                "   #78 = Methodref          #79.#80       // java/math/BigInteger.toString:(I)Ljava/lang/String;",
                "   #79 = Class              #81           // java/math/BigInteger",
                "   #80 = NameAndType        #11:#82       // toString:(I)Ljava/lang/String;",
                "   #81 = Utf8               java/math/BigInteger",
                "   #82 = Utf8               (I)Ljava/lang/String;",
                "   #83 = Methodref          #79.#84       // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;",
                "   #84 = NameAndType        #85:#77       // valueOf:(J)Ljava/math/BigInteger;",
                "   #85 = Utf8               valueOf",
                "   #86 = Methodref          #18.#87       // java/lang/Integer.toUnsignedLong:(I)J",
                "   #87 = NameAndType        #88:#89       // toUnsignedLong:(I)J",
                "   #88 = Utf8               toUnsignedLong",
                "   #89 = Utf8               (I)J",
                "   #90 = Methodref          #79.#91       // java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;",
                "   #91 = NameAndType        #92:#93       // shiftLeft:(I)Ljava/math/BigInteger;",
                "   #92 = Utf8               shiftLeft",
                "   #93 = Utf8               (I)Ljava/math/BigInteger;",
                "   #94 = Methodref          #79.#95       // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;",
                "   #95 = NameAndType        #96:#97       // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;",
                "   #96 = Utf8               add",
                "   #97 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;",
                "   #98 = Methodref          #1.#99        // java/lang/Long.numberOfLeadingZeros:(J)I",
                "   #99 = NameAndType        #100:#101     // numberOfLeadingZeros:(J)I",
                "  #100 = Utf8               numberOfLeadingZeros",
                "  #101 = Utf8               (J)I",
                "  #102 = Methodref          #103.#104     // java/lang/Math.max:(II)I",
                "  #103 = Class              #105          // java/lang/Math",
                "  #104 = NameAndType        #106:#107     // max:(II)I",
                "  #105 = Utf8               java/lang/Math",
                "  #106 = Utf8               max",
                "  #107 = Utf8               (II)I",
                "  #108 = Methodref          #1.#109       // java/lang/Long.formatUnsignedLong0:(JI[BII)V",
                "  #109 = NameAndType        #110:#111     // formatUnsignedLong0:(JI[BII)V",
                "  #110 = Utf8               formatUnsignedLong0",
                "  #111 = Utf8               (JI[BII)V",
                "  #112 = Methodref          #5.#113       // java/lang/String.\"<init>\":([BB)V",
                "  #113 = NameAndType        #59:#114      // \"<init>\":([BB)V",
                "  #114 = Utf8               ([BB)V",
                "  #115 = Methodref          #1.#116       // java/lang/Long.formatUnsignedLong0UTF16:(JI[BII)V",
                "  #116 = NameAndType        #117:#111     // formatUnsignedLong0UTF16:(JI[BII)V",
                "  #117 = Utf8               formatUnsignedLong0UTF16",
                "  #118 = Methodref          #1.#119       // java/lang/Long.stringSize:(J)I",
                "  #119 = NameAndType        #120:#101     // stringSize:(J)I",
                "  #120 = Utf8               stringSize",
                "  #121 = Methodref          #1.#122       // java/lang/Long.getChars:(JI[B)I",
                "  #122 = NameAndType        #123:#124     // getChars:(JI[B)I",
                "  #123 = Utf8               getChars",
                "  #124 = Utf8               (JI[B)I",
                "  #125 = Methodref          #34.#122      // java/lang/StringUTF16.getChars:(JI[B)I",
                "  #126 = Methodref          #1.#127       // java/lang/Long.toUnsignedString:(JI)Ljava/lang/String;",
                "  #127 = NameAndType        #128:#32      // toUnsignedString:(JI)Ljava/lang/String;",
                "  #128 = Utf8               toUnsignedString",
                "  #129 = Long               -2147483648l",
                "  #131 = Long               100l",
                "  #133 = Fieldref           #18.#134      // java/lang/Integer.DigitOnes:[B",
                "  #134 = NameAndType        #135:#136     // DigitOnes:[B",
                "  #135 = Utf8               DigitOnes",
                "  #136 = Utf8               [B",
                "  #137 = Fieldref           #18.#138      // java/lang/Integer.DigitTens:[B",
                "  #138 = NameAndType        #139:#136     // DigitTens:[B",
                "  #139 = Utf8               DigitTens",
                "  #140 = Long               -10l",
                "  #142 = Class              #143          // java/lang/NumberFormatException",
                "  #143 = Utf8               java/lang/NumberFormatException",
                "  #144 = String             #145          // Cannot parse null string",
                "  #145 = Utf8               Cannot parse null string",
                "  #146 = Methodref          #142.#147     // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V",
                "  #147 = NameAndType        #59:#148      // \"<init>\":(Ljava/lang/String;)V",
                "  #148 = Utf8               (Ljava/lang/String;)V",
                "  #149 = String             #150          // radix",
                "  #150 = Utf8               radix",
                "  #151 = Methodref          #55.#152      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;",
                "  #152 = NameAndType        #63:#153      // append:(I)Ljava/lang/StringBuilder;",
                "  #153 = Utf8               (I)Ljava/lang/StringBuilder;",
                "  #154 = String             #155          //  less than Character.MIN_RADIX",
                "  #155 = Utf8                less than Character.MIN_RADIX",
                "  #156 = String             #157          //  greater than Character.MAX_RADIX",
                "  #157 = Utf8                greater than Character.MAX_RADIX",
                "  #158 = Methodref          #5.#159       // java/lang/String.length:()I",
                "  #159 = NameAndType        #160:#161     // length:()I",
                "  #160 = Utf8               length",
                "  #161 = Utf8               ()I",
                "  #162 = Long               -9223372036854775807l",
                "  #164 = Methodref          #5.#165       // java/lang/String.charAt:(I)C",
                "  #165 = NameAndType        #166:#167     // charAt:(I)C",
                "  #166 = Utf8               charAt",
                "  #167 = Utf8               (I)C",
                "  #168 = Long               -9223372036854775808l",
                "  #170 = Methodref          #142.#171     // java/lang/NumberFormatException.forInputString:(Ljava/lang/String;I)Ljava/lang/NumberFormatException;",
                "  #171 = NameAndType        #172:#173     // forInputString:(Ljava/lang/String;I)Ljava/lang/NumberFormatException;",
                "  #172 = Utf8               forInputString",
                "  #173 = Utf8               (Ljava/lang/String;I)Ljava/lang/NumberFormatException;",
                "  #174 = Methodref          #7.#175       // java/lang/Character.digit:(CI)I",
                "  #175 = NameAndType        #176:#177     // digit:(CI)I",
                "  #176 = Utf8               digit",
                "  #177 = Utf8               (CI)I",
                "  #178 = Methodref          #179.#180     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #179 = Class              #181          // java/util/Objects",
                "  #180 = NameAndType        #182:#183     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #181 = Utf8               java/util/Objects",
                "  #182 = Utf8               requireNonNull",
                "  #183 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;",
                "  #184 = InterfaceMethodref #185.#159     // java/lang/CharSequence.length:()I",
                "  #185 = Class              #186          // java/lang/CharSequence",
                "  #186 = Utf8               java/lang/CharSequence",
                "  #187 = Methodref          #179.#188     // java/util/Objects.checkFromToIndex:(III)I",
                "  #188 = NameAndType        #189:#190     // checkFromToIndex:(III)I",
                "  #189 = Utf8               checkFromToIndex",
                "  #190 = Utf8               (III)I",
                "  #191 = InterfaceMethodref #185.#165     // java/lang/CharSequence.charAt:(I)C",
                "  #192 = Methodref          #142.#193     // java/lang/NumberFormatException.forCharSequence:(Ljava/lang/CharSequence;III)Ljava/lang/NumberFormatException;",
                "  #193 = NameAndType        #194:#195     // forCharSequence:(Ljava/lang/CharSequence;III)Ljava/lang/NumberFormatException;",
                "  #194 = Utf8               forCharSequence",
                "  #195 = Utf8               (Ljava/lang/CharSequence;III)Ljava/lang/NumberFormatException;",
                "  #196 = String             #197          //",
                "  #197 = Utf8",
                "  #198 = Methodref          #1.#199       // java/lang/Long.parseLong:(Ljava/lang/String;I)J",
                "  #199 = NameAndType        #200:#201     // parseLong:(Ljava/lang/String;I)J",
                "  #200 = Utf8               parseLong",
                "  #201 = Utf8               (Ljava/lang/String;I)J",
                "  #202 = String             #203          // Illegal leading minus sign on unsigned string %s.",
                "  #203 = Utf8               Illegal leading minus sign on unsigned string %s.",
                "  #204 = Class              #205          // java/lang/Object",
                "  #205 = Utf8               java/lang/Object",
                "  #206 = Methodref          #5.#207       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;",
                "  #207 = NameAndType        #208:#209     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;",
                "  #208 = Utf8               format",
                "  #209 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;",
                "  #210 = Methodref          #1.#211       // java/lang/Long.parseLong:(Ljava/lang/CharSequence;III)J",
                "  #211 = NameAndType        #200:#212     // parseLong:(Ljava/lang/CharSequence;III)J",
                "  #212 = Utf8               (Ljava/lang/CharSequence;III)J",
                "  #213 = String             #214          // Bad digit at end of",
                "  #214 = Utf8               Bad digit at end of",
                "  #215 = String             #216          // String value %s exceeds range of unsigned long.",
                "  #216 = Utf8               String value %s exceeds range of unsigned long.",
                "  #217 = InterfaceMethodref #185.#218     // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;",
                "  #218 = NameAndType        #219:#220     // subSequence:(II)Ljava/lang/CharSequence;",
                "  #219 = Utf8               subSequence",
                "  #220 = Utf8               (II)Ljava/lang/CharSequence;",
                "  #221 = Methodref          #55.#222      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;",
                "  #222 = NameAndType        #63:#223      // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;",
                "  #223 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;",
                "  #224 = Methodref          #1.#225       // java/lang/Long.parseUnsignedLong:(Ljava/lang/String;I)J",
                "  #225 = NameAndType        #226:#201     // parseUnsignedLong:(Ljava/lang/String;I)J",
                "  #226 = Utf8               parseUnsignedLong",
                "  #227 = Methodref          #1.#228       // java/lang/Long.valueOf:(J)Ljava/lang/Long;",
                "  #228 = NameAndType        #85:#229      // valueOf:(J)Ljava/lang/Long;",
                "  #229 = Utf8               (J)Ljava/lang/Long;",
                "  #230 = Long               -128l",
                "  #232 = Long               127l",
                "  #234 = Fieldref           #235.#236     // java/lang/Long$LongCache.cache:[Ljava/lang/Long;",
                "  #235 = Class              #237          // java/lang/Long$LongCache",
                "  #236 = NameAndType        #238:#239     // cache:[Ljava/lang/Long;",
                "  #237 = Utf8               java/lang/Long$LongCache",
                "  #238 = Utf8               cache",
                "  #239 = Utf8               [Ljava/lang/Long;",
                "  #240 = Methodref          #1.#241       // java/lang/Long.\"<init>\":(J)V",
                "  #241 = NameAndType        #59:#242      // \"<init>\":(J)V",
                "  #242 = Utf8               (J)V",
                "  #243 = Methodref          #5.#244       // java/lang/String.isEmpty:()Z",
                "  #244 = NameAndType        #245:#246     // isEmpty:()Z",
                "  #245 = Utf8               isEmpty",
                "  #246 = Utf8               ()Z",
                "  #247 = String             #248          // Zero length string",
                "  #248 = Utf8               Zero length string",
                "  #249 = String             #250          // 0x",
                "  #250 = Utf8               0x",
                "  #251 = Methodref          #5.#252       // java/lang/String.startsWith:(Ljava/lang/String;I)Z",
                "  #252 = NameAndType        #253:#254     // startsWith:(Ljava/lang/String;I)Z",
                "  #253 = Utf8               startsWith",
                "  #254 = Utf8               (Ljava/lang/String;I)Z",
                "  #255 = String             #256          // 0X",
                "  #256 = Utf8               0X",
                "  #257 = String             #258          // #",
                "  #258 = Utf8               #",
                "  #259 = String             #260          // 0",
                "  #260 = Utf8               0",
                "  #261 = String             #262          // -",
                "  #262 = Utf8               -",
                "  #263 = String             #264          // +",
                "  #264 = Utf8               +",
                "  #265 = String             #266          // Sign character in wrong position",
                "  #266 = Utf8               Sign character in wrong position",
                "  #267 = Methodref          #5.#268       // java/lang/String.substring:(I)Ljava/lang/String;",
                "  #268 = NameAndType        #269:#82      // substring:(I)Ljava/lang/String;",
                "  #269 = Utf8               substring",
                "  #270 = Methodref          #271.#58      // java/lang/Number.\"<init>\":()V",
                "  #271 = Class              #272          // java/lang/Number",
                "  #272 = Utf8               java/lang/Number",
                "  #273 = Fieldref           #1.#274       // java/lang/Long.value:J",
                "  #274 = NameAndType        #275:#276     // value:J",
                "  #275 = Utf8               value",
                "  #276 = Utf8               J",
                "  #277 = Methodref          #1.#278       // java/lang/Long.hashCode:(J)I",
                "  #278 = NameAndType        #279:#101     // hashCode:(J)I",
                "  #279 = Utf8               hashCode",
                "  #280 = Methodref          #1.#281       // java/lang/Long.longValue:()J",
                "  #281 = NameAndType        #282:#283     // longValue:()J",
                "  #282 = Utf8               longValue",
                "  #283 = Utf8               ()J",
                "  #284 = Methodref          #1.#285       // java/lang/Long.getLong:(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;",
                "  #285 = NameAndType        #286:#287     // getLong:(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;",
                "  #286 = Utf8               getLong",
                "  #287 = Utf8               (Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;",
                "  #288 = Methodref          #289.#290     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;",
                "  #289 = Class              #291          // java/lang/System",
                "  #290 = NameAndType        #292:#293     // getProperty:(Ljava/lang/String;)Ljava/lang/String;",
                "  #291 = Utf8               java/lang/System",
                "  #292 = Utf8               getProperty",
                "  #293 = Utf8               (Ljava/lang/String;)Ljava/lang/String;",
                "  #294 = Class              #295          // java/lang/IllegalArgumentException",
                "  #295 = Utf8               java/lang/IllegalArgumentException",
                "  #296 = Class              #297          // java/lang/NullPointerException",
                "  #297 = Utf8               java/lang/NullPointerException",
                "  #298 = Methodref          #1.#299       // java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;",
                "  #299 = NameAndType        #300:#301     // decode:(Ljava/lang/String;)Ljava/lang/Long;",
                "  #300 = Utf8               decode",
                "  #301 = Utf8               (Ljava/lang/String;)Ljava/lang/Long;",
                "  #302 = Methodref          #1.#303       // java/lang/Long.compare:(JJ)I",
                "  #303 = NameAndType        #304:#305     // compare:(JJ)I",
                "  #304 = Utf8               compare",
                "  #305 = Utf8               (JJ)I",
                "  #306 = Long               -1l",
                "  #308 = Methodref          #18.#309      // java/lang/Integer.numberOfLeadingZeros:(I)I",
                "  #309 = NameAndType        #100:#310     // numberOfLeadingZeros:(I)I",
                "  #310 = Utf8               (I)I",
                "  #311 = Methodref          #18.#312      // java/lang/Integer.numberOfTrailingZeros:(I)I",
                "  #312 = NameAndType        #313:#310     // numberOfTrailingZeros:(I)I",
                "  #313 = Utf8               numberOfTrailingZeros",
                "  #314 = Long               6148914691236517205l",
                "  #316 = Long               3689348814741910323l",
                "  #318 = Long               1085102592571150095l",
                "  #320 = Methodref          #1.#321       // java/lang/Long.reverseBytes:(J)J",
                "  #321 = NameAndType        #322:#323     // reverseBytes:(J)J",
                "  #322 = Utf8               reverseBytes",
                "  #323 = Utf8               (J)J",
                "  #324 = Methodref          #1.#325       // java/lang/Long.parallelSuffix:(J)J",
                "  #325 = NameAndType        #326:#323     // parallelSuffix:(J)J",
                "  #326 = Utf8               parallelSuffix",
                "  #327 = Long               71777214294589695l",
                "  #329 = Long               4294901760l",
                "  #331 = Methodref          #103.#332     // java/lang/Math.max:(JJ)J",
                "  #332 = NameAndType        #106:#333     // max:(JJ)J",
                "  #333 = Utf8               (JJ)J",
                "  #334 = Methodref          #103.#335     // java/lang/Math.min:(JJ)J",
                "  #335 = NameAndType        #336:#333     // min:(JJ)J",
                "  #336 = Utf8               min",
                "  #337 = Methodref          #338.#339     // java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;",
                "  #338 = Class              #340          // java/util/Optional",
                "  #339 = NameAndType        #341:#342     // of:(Ljava/lang/Object;)Ljava/util/Optional;",
                "  #340 = Utf8               java/util/Optional",
                "  #341 = Utf8               of",
                "  #342 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;",
                "  #343 = Methodref          #1.#344       // java/lang/Long.compareTo:(Ljava/lang/Long;)I",
                "  #344 = NameAndType        #345:#346     // compareTo:(Ljava/lang/Long;)I",
                "  #345 = Utf8               compareTo",
                "  #346 = Utf8               (Ljava/lang/Long;)I",
                "  #347 = Methodref          #1.#348       // java/lang/Long.resolveConstantDesc:(Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Long;",
                "  #348 = NameAndType        #349:#350     // resolveConstantDesc:(Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Long;",
                "  #349 = Utf8               resolveConstantDesc",
                "  #350 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Long;",
                "  #351 = String             #352          // long",
                "  #352 = Utf8               long",
                "  #353 = Methodref          #354.#355     // java/lang/Class.getPrimitiveClass:(Ljava/lang/String;)Ljava/lang/Class;",
                "  #354 = Class              #356          // java/lang/Class",
                "  #355 = NameAndType        #357:#358     // getPrimitiveClass:(Ljava/lang/String;)Ljava/lang/Class;",
                "  #356 = Utf8               java/lang/Class",
                "  #357 = Utf8               getPrimitiveClass",
                "  #358 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;",
                "  #359 = Fieldref           #1.#360       // java/lang/Long.TYPE:Ljava/lang/Class;",
                "  #360 = NameAndType        #361:#362     // TYPE:Ljava/lang/Class;",
                "  #361 = Utf8               TYPE",
                "  #362 = Utf8               Ljava/lang/Class;",
                "  #363 = Class              #364          // java/lang/Comparable",
                "  #364 = Utf8               java/lang/Comparable",
                "  #365 = Class              #366          // java/lang/constant/Constable",
                "  #366 = Utf8               java/lang/constant/Constable",
                "  #367 = Class              #368          // java/lang/constant/ConstantDesc",
                "  #368 = Utf8               java/lang/constant/ConstantDesc",
                "  #369 = Utf8               MIN_VALUE",
                "  #370 = Utf8               ConstantValue",
                "  #371 = Utf8               MAX_VALUE",
                "  #372 = Long               9223372036854775807l",
                "  #374 = Utf8               Signature",
                "  #375 = Utf8               Ljava/lang/Class<Ljava/lang/Long;>;",
                "  #376 = Utf8               SIZE",
                "  #377 = Utf8               I",
                "  #378 = Integer            64",
                "  #379 = Utf8               BYTES",
                "  #380 = Integer            8",
                "  #381 = Utf8               serialVersionUID",
                "  #382 = Long               4290774380558885855l",
                "  #384 = Utf8               Code",
                "  #385 = Utf8               LineNumberTable",
                "  #386 = Utf8               LocalVariableTable",
                "  #387 = Utf8               buf",
                "  #388 = Utf8               charPos",
                "  #389 = Utf8               negative",
                "  #390 = Utf8               i",
                "  #391 = Utf8               radix",
                "  #392 = Utf8               StackMapTable",
                "  #393 = Class              #136          // \"[B\"",
                "  #394 = Utf8               quot",
                "  #395 = Utf8               rem",
                "  #396 = Utf8               upper",
                "  #397 = Utf8               lower",
                "  #398 = Utf8               val",
                "  #399 = Utf8               shift",
                "  #400 = Utf8               mag",
                "  #401 = Utf8               chars",
                "  #402 = Utf8               offset",
                "  #403 = Utf8               len",
                "  #404 = Utf8               mask",
                "  #405 = Utf8               fastUUID",
                "  #406 = Utf8               (JJ)Ljava/lang/String;",
                "  #407 = Utf8               lsb",
                "  #408 = Utf8               msb",
                "  #409 = Utf8               size",
                "  #410 = Utf8               q",
                "  #411 = Utf8               r",
                "  #412 = Utf8               q2",
                "  #413 = Utf8               index",
                "  #414 = Utf8               i2",
                "  #415 = Utf8               x",
                "  #416 = Utf8               d",
                "  #417 = Utf8               p",
                "  #418 = Utf8               firstChar",
                "  #419 = Utf8               C",
                "  #420 = Utf8               multmin",
                "  #421 = Utf8               result",
                "  #422 = Utf8               s",
                "  #423 = Utf8               Ljava/lang/String;",
                "  #424 = Utf8               limit",
                "  #425 = Utf8               Exceptions",
                "  #426 = Utf8               Ljava/lang/CharSequence;",
                "  #427 = Utf8               beginIndex",
                "  #428 = Utf8               endIndex",
                "  #429 = Utf8               (Ljava/lang/String;)J",
                "  #430 = Utf8               first",
                "  #431 = Utf8               second",
                "  #432 = Utf8               guard",
                "  #433 = Utf8               start",
                "  #434 = Utf8               (Ljava/lang/String;I)Ljava/lang/Long;",
                "  #435 = Utf8               l",
                "  #436 = Utf8               RuntimeVisibleAnnotations",
                "  #437 = Utf8               Ljdk/internal/vm/annotation/IntrinsicCandidate;",
                "  #438 = Utf8               constant",
                "  #439 = Utf8               e",
                "  #440 = Utf8               Ljava/lang/NumberFormatException;",
                "  #441 = Utf8               nm",
                "  #442 = Utf8               this",
                "  #443 = Utf8               Ljava/lang/Long;",
                "  #444 = Utf8               Deprecated",
                "  #445 = Utf8               Ljava/lang/Deprecated;",
                "  #446 = Utf8               since",
                "  #447 = Utf8               9",
                "  #448 = Utf8               forRemoval",
                "  #449 = Integer            1",
                "  #450 = Utf8               byteValue",
                "  #451 = Utf8               ()B",
                "  #452 = Utf8               shortValue",
                "  #453 = Utf8               ()S",
                "  #454 = Utf8               intValue",
                "  #455 = Utf8               floatValue",
                "  #456 = Utf8               ()F",
                "  #457 = Utf8               doubleValue",
                "  #458 = Utf8               ()D",
                "  #459 = Utf8               equals",
                "  #460 = Utf8               (Ljava/lang/Object;)Z",
                "  #461 = Utf8               obj",
                "  #462 = Utf8               Ljava/lang/Object;",
                "  #463 = Utf8               (Ljava/lang/String;J)Ljava/lang/Long;",
                "  #464 = Utf8               v",
                "  #465 = Class              #466          // java/lang/RuntimeException",
                "  #466 = Utf8               java/lang/RuntimeException",
                "  #467 = Utf8               anotherLong",
                "  #468 = Utf8               y",
                "  #469 = Utf8               compareUnsigned",
                "  #470 = Utf8               divideUnsigned",
                "  #471 = Utf8               dividend",
                "  #472 = Utf8               divisor",
                "  #473 = Utf8               remainderUnsigned",
                "  #474 = Utf8               highestOneBit",
                "  #475 = Utf8               lowestOneBit",
                "  #476 = Utf8               bitCount",
                "  #477 = Utf8               rotateLeft",
                "  #478 = Utf8               (JI)J",
                "  #479 = Utf8               distance",
                "  #480 = Utf8               rotateRight",
                "  #481 = Utf8               reverse",
                "  #482 = Utf8               compress",
                "  #483 = Utf8               maskPrefix",
                "  #484 = Utf8               maskMove",
                "  #485 = Utf8               t",
                "  #486 = Utf8               j",
                "  #487 = Utf8               maskCount",
                "  #488 = Utf8               expand",
                "  #489 = Utf8               originalMask",
                "  #490 = Utf8               maskMove1",
                "  #491 = Utf8               maskMove2",
                "  #492 = Utf8               maskMove3",
                "  #493 = Utf8               maskMove4",
                "  #494 = Utf8               maskMove5",
                "  #495 = Utf8               maskMove6",
                "  #496 = Utf8               Ljdk/internal/vm/annotation/ForceInline;",
                "  #497 = Utf8               signum",
                "  #498 = Utf8               sum",
                "  #499 = Utf8               a",
                "  #500 = Utf8               b",
                "  #501 = Utf8               describeConstable",
                "  #502 = Utf8               ()Ljava/util/Optional;",
                "  #503 = Utf8               ()Ljava/util/Optional<Ljava/lang/Long;>;",
                "  #504 = Utf8               lookup",
                "  #505 = Utf8               Ljava/lang/invoke/MethodHandles$Lookup;",
                "  #506 = Utf8               (Ljava/lang/Object;)I",
                "  #507 = Utf8               MethodParameters",
                "  #508 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Object;",
                "  #509 = Class              #510          // java/lang/ReflectiveOperationException",
                "  #510 = Utf8               java/lang/ReflectiveOperationException",
                "  #511 = Utf8               <clinit>",
                "  #512 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Ljava/lang/Long;>;Ljava/lang/constant/Constable;Ljava/lang/constant/ConstantDesc;",
                "  #513 = Utf8               SourceFile",
                "  #514 = Utf8               Long.java",
                "  #515 = Utf8               Ljdk/internal/ValueBased;",
                "  #516 = Utf8               NestMembers",
                "  #517 = Utf8               InnerClasses",
                "  #518 = Utf8               LongCache",
                "  #519 = Class              #520          // java/lang/invoke/MethodHandles$Lookup",
                "  #520 = Utf8               java/lang/invoke/MethodHandles$Lookup",
                "  #521 = Class              #522          // java/lang/invoke/MethodHandles",
                "  #522 = Utf8               java/lang/invoke/MethodHandles",
                "  #523 = Utf8               Lookup"
        );
    }
}
