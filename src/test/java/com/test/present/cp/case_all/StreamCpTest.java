package com.test.present.cp.case_all;

import com.test.present.cp.ConstantPoolPresenterTestBase;
import org.junit.Before;
import org.junit.Test;

import java.io.IOException;
import java.util.stream.Stream;
import java.util.List;

public class StreamCpTest extends ConstantPoolPresenterTestBase {

    @Before
    public void prepare() throws IOException {
        buildRealLines(Stream.class);
    }

    @Test
    public void test() {
        expectedLines = List.of(
                "    #1 = Methodref          #2.#3         // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;",
                "    #2 = Class              #4            // java/util/Objects",
                "    #3 = NameAndType        #5:#6         // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;",
                "    #4 = Utf8               java/util/Objects",
                "    #5 = Utf8               requireNonNull",
                "    #6 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;",
                "    #7 = InvokeDynamic      #0:#8         // #0:apply:(Ljava/util/function/BiConsumer;)Ljava/util/function/Function;",
                "    #8 = NameAndType        #9:#10        // apply:(Ljava/util/function/BiConsumer;)Ljava/util/function/Function;",
                "    #9 = Utf8               apply",
                "   #10 = Utf8               (Ljava/util/function/BiConsumer;)Ljava/util/function/Function;",
                "   #11 = InterfaceMethodref #12.#13       // java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;",
                "   #12 = Class              #14           // java/util/stream/Stream",
                "   #13 = NameAndType        #15:#16       // flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;",
                "   #14 = Utf8               java/util/stream/Stream",
                "   #15 = Utf8               flatMap",
                "   #16 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/Stream;",
                "   #17 = InvokeDynamic      #1:#8         // #1:apply:(Ljava/util/function/BiConsumer;)Ljava/util/function/Function;",
                "   #18 = InterfaceMethodref #12.#19       // java/util/stream/Stream.flatMapToInt:(Ljava/util/function/Function;)Ljava/util/stream/IntStream;",
                "   #19 = NameAndType        #20:#21       // flatMapToInt:(Ljava/util/function/Function;)Ljava/util/stream/IntStream;",
                "   #20 = Utf8               flatMapToInt",
                "   #21 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/IntStream;",
                "   #22 = InvokeDynamic      #2:#8         // #2:apply:(Ljava/util/function/BiConsumer;)Ljava/util/function/Function;",
                "   #23 = InterfaceMethodref #12.#24       // java/util/stream/Stream.flatMapToLong:(Ljava/util/function/Function;)Ljava/util/stream/LongStream;",
                "   #24 = NameAndType        #25:#26       // flatMapToLong:(Ljava/util/function/Function;)Ljava/util/stream/LongStream;",
                "   #25 = Utf8               flatMapToLong",
                "   #26 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/LongStream;",
                "   #27 = InvokeDynamic      #3:#8         // #3:apply:(Ljava/util/function/BiConsumer;)Ljava/util/function/Function;",
                "   #28 = InterfaceMethodref #12.#29       // java/util/stream/Stream.flatMapToDouble:(Ljava/util/function/Function;)Ljava/util/stream/DoubleStream;",
                "   #29 = NameAndType        #30:#31       // flatMapToDouble:(Ljava/util/function/Function;)Ljava/util/stream/DoubleStream;",
                "   #30 = Utf8               flatMapToDouble",
                "   #31 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/DoubleStream;",
                "   #32 = Class              #33           // java/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef$Taking",
                "   #33 = Utf8               java/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef$Taking",
                "   #34 = InterfaceMethodref #12.#35       // java/util/stream/Stream.spliterator:()Ljava/util/Spliterator;",
                "   #35 = NameAndType        #36:#37       // spliterator:()Ljava/util/Spliterator;",
                "   #36 = Utf8               spliterator",
                "   #37 = Utf8               ()Ljava/util/Spliterator;",
                "   #38 = Methodref          #32.#39       // java/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef$Taking.\"<init>\":(Ljava/util/Spliterator;ZLjava/util/function/Predicate;)V",
                "   #39 = NameAndType        #40:#41       // \"<init>\":(Ljava/util/Spliterator;ZLjava/util/function/Predicate;)V",
                "   #40 = Utf8               <init>",
                "   #41 = Utf8               (Ljava/util/Spliterator;ZLjava/util/function/Predicate;)V",
                "   #42 = InterfaceMethodref #12.#43       // java/util/stream/Stream.isParallel:()Z",
                "   #43 = NameAndType        #44:#45       // isParallel:()Z",
                "   #44 = Utf8               isParallel",
                "   #45 = Utf8               ()Z",
                "   #46 = Methodref          #47.#48       // java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;",
                "   #47 = Class              #49           // java/util/stream/StreamSupport",
                "   #48 = NameAndType        #50:#51       // stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;",
                "   #49 = Utf8               java/util/stream/StreamSupport",
                "   #50 = Utf8               stream",
                "   #51 = Utf8               (Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;",
                "   #52 = InvokeDynamic      #4:#53        // #4:run:(Ljava/util/stream/Stream;)Ljava/lang/Runnable;",
                "   #53 = NameAndType        #54:#55       // run:(Ljava/util/stream/Stream;)Ljava/lang/Runnable;",
                "   #54 = Utf8               run",
                "   #55 = Utf8               (Ljava/util/stream/Stream;)Ljava/lang/Runnable;",
                "   #56 = InterfaceMethodref #12.#57       // java/util/stream/Stream.onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;",
                "   #57 = NameAndType        #58:#59       // onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;",
                "   #58 = Utf8               onClose",
                "   #59 = Utf8               (Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;",
                "   #60 = Class              #61           // java/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef$Dropping",
                "   #61 = Utf8               java/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef$Dropping",
                "   #62 = Methodref          #60.#39       // java/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef$Dropping.\"<init>\":(Ljava/util/Spliterator;ZLjava/util/function/Predicate;)V",
                "   #63 = Class              #64           // java/util/ArrayList",
                "   #64 = Utf8               java/util/ArrayList",
                "   #65 = InterfaceMethodref #12.#66       // java/util/stream/Stream.toArray:()[Ljava/lang/Object;",
                "   #66 = NameAndType        #67:#68       // toArray:()[Ljava/lang/Object;",
                "   #67 = Utf8               toArray",
                "   #68 = Utf8               ()[Ljava/lang/Object;",
                "   #69 = Methodref          #70.#71       // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;",
                "   #70 = Class              #72           // java/util/Arrays",
                "   #71 = NameAndType        #73:#74       // asList:([Ljava/lang/Object;)Ljava/util/List;",
                "   #72 = Utf8               java/util/Arrays",
                "   #73 = Utf8               asList",
                "   #74 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;",
                "   #75 = Methodref          #63.#76       // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V",
                "   #76 = NameAndType        #40:#77       // \"<init>\":(Ljava/util/Collection;)V",
                "   #77 = Utf8               (Ljava/util/Collection;)V",
                "   #78 = Methodref          #79.#80       // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;",
                "   #79 = Class              #81           // java/util/Collections",
                "   #80 = NameAndType        #82:#83       // unmodifiableList:(Ljava/util/List;)Ljava/util/List;",
                "   #81 = Utf8               java/util/Collections",
                "   #82 = Utf8               unmodifiableList",
                "   #83 = Utf8               (Ljava/util/List;)Ljava/util/List;",
                "   #84 = Class              #85           // java/util/stream/Streams$StreamBuilderImpl",
                "   #85 = Utf8               java/util/stream/Streams$StreamBuilderImpl",
                "   #86 = Methodref          #84.#87       // java/util/stream/Streams$StreamBuilderImpl.\"<init>\":()V",
                "   #87 = NameAndType        #40:#88       // \"<init>\":()V",
                "   #88 = Utf8               ()V",
                "   #89 = Methodref          #90.#91       // java/util/Spliterators.emptySpliterator:()Ljava/util/Spliterator;",
                "   #90 = Class              #92           // java/util/Spliterators",
                "   #91 = NameAndType        #93:#37       // emptySpliterator:()Ljava/util/Spliterator;",
                "   #92 = Utf8               java/util/Spliterators",
                "   #93 = Utf8               emptySpliterator",
                "   #94 = Methodref          #84.#95       // java/util/stream/Streams$StreamBuilderImpl.\"<init>\":(Ljava/lang/Object;)V",
                "   #95 = NameAndType        #40:#96       // \"<init>\":(Ljava/lang/Object;)V",
                "   #96 = Utf8               (Ljava/lang/Object;)V",
                "   #97 = InterfaceMethodref #12.#98       // java/util/stream/Stream.empty:()Ljava/util/stream/Stream;",
                "   #98 = NameAndType        #99:#100      // empty:()Ljava/util/stream/Stream;",
                "   #99 = Utf8               empty",
                "  #100 = Utf8               ()Ljava/util/stream/Stream;",
                "  #101 = Methodref          #70.#102      // java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;",
                "  #102 = NameAndType        #50:#103      // stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;",
                "  #103 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;",
                "  #104 = Class              #105          // java/util/stream/Stream$1",
                "  #105 = Utf8               java/util/stream/Stream$1",
                "  #106 = Class              #107          // java/lang/Long",
                "  #107 = Utf8               java/lang/Long",
                "  #108 = Long               9223372036854775807l",
                "  #110 = Class              #111          // java/util/Spliterator",
                "  #111 = Utf8               java/util/Spliterator",
                "  #112 = Methodref          #104.#113     // java/util/stream/Stream$1.\"<init>\":(JILjava/util/function/UnaryOperator;Ljava/lang/Object;)V",
                "  #113 = NameAndType        #40:#114      // \"<init>\":(JILjava/util/function/UnaryOperator;Ljava/lang/Object;)V",
                "  #114 = Utf8               (JILjava/util/function/UnaryOperator;Ljava/lang/Object;)V",
                "  #115 = Class              #116          // java/util/stream/Stream$2",
                "  #116 = Utf8               java/util/stream/Stream$2",
                "  #117 = Methodref          #115.#118     // java/util/stream/Stream$2.\"<init>\":(JILjava/util/function/UnaryOperator;Ljava/lang/Object;Ljava/util/function/Predicate;)V",
                "  #118 = NameAndType        #40:#119      // \"<init>\":(JILjava/util/function/UnaryOperator;Ljava/lang/Object;Ljava/util/function/Predicate;)V",
                "  #119 = Utf8               (JILjava/util/function/UnaryOperator;Ljava/lang/Object;Ljava/util/function/Predicate;)V",
                "  #120 = Class              #121          // java/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfRef",
                "  #121 = Utf8               java/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfRef",
                "  #122 = Methodref          #120.#123     // java/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfRef.\"<init>\":(JLjava/util/function/Supplier;)V",
                "  #123 = NameAndType        #40:#124      // \"<init>\":(JLjava/util/function/Supplier;)V",
                "  #124 = Utf8               (JLjava/util/function/Supplier;)V",
                "  #125 = Class              #126          // java/util/stream/Streams$ConcatSpliterator$OfRef",
                "  #126 = Utf8               java/util/stream/Streams$ConcatSpliterator$OfRef",
                "  #127 = Methodref          #125.#128     // java/util/stream/Streams$ConcatSpliterator$OfRef.\"<init>\":(Ljava/util/Spliterator;Ljava/util/Spliterator;)V",
                "  #128 = NameAndType        #40:#129      // \"<init>\":(Ljava/util/Spliterator;Ljava/util/Spliterator;)V",
                "  #129 = Utf8               (Ljava/util/Spliterator;Ljava/util/Spliterator;)V",
                "  #130 = Methodref          #131.#132     // java/util/stream/Streams.composedClose:(Ljava/util/stream/BaseStream;Ljava/util/stream/BaseStream;)Ljava/lang/Runnable;",
                "  #131 = Class              #133          // java/util/stream/Streams",
                "  #132 = NameAndType        #134:#135     // composedClose:(Ljava/util/stream/BaseStream;Ljava/util/stream/BaseStream;)Ljava/lang/Runnable;",
                "  #133 = Utf8               java/util/stream/Streams",
                "  #134 = Utf8               composedClose",
                "  #135 = Utf8               (Ljava/util/stream/BaseStream;Ljava/util/stream/BaseStream;)Ljava/lang/Runnable;",
                "  #136 = Class              #137          // java/util/stream/SpinedBuffer$OfDouble",
                "  #137 = Utf8               java/util/stream/SpinedBuffer$OfDouble",
                "  #138 = Methodref          #136.#87      // java/util/stream/SpinedBuffer$OfDouble.\"<init>\":()V",
                "  #139 = InterfaceMethodref #140.#141     // java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V",
                "  #140 = Class              #142          // java/util/function/BiConsumer",
                "  #141 = NameAndType        #143:#144     // accept:(Ljava/lang/Object;Ljava/lang/Object;)V",
                "  #142 = Utf8               java/util/function/BiConsumer",
                "  #143 = Utf8               accept",
                "  #144 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V",
                "  #145 = Methodref          #136.#146     // java/util/stream/SpinedBuffer$OfDouble.spliterator:()Ljava/util/Spliterator$OfDouble;",
                "  #146 = NameAndType        #36:#147      // spliterator:()Ljava/util/Spliterator$OfDouble;",
                "  #147 = Utf8               ()Ljava/util/Spliterator$OfDouble;",
                "  #148 = Methodref          #47.#149      // java/util/stream/StreamSupport.doubleStream:(Ljava/util/Spliterator$OfDouble;Z)Ljava/util/stream/DoubleStream;",
                "  #149 = NameAndType        #150:#151     // doubleStream:(Ljava/util/Spliterator$OfDouble;Z)Ljava/util/stream/DoubleStream;",
                "  #150 = Utf8               doubleStream",
                "  #151 = Utf8               (Ljava/util/Spliterator$OfDouble;Z)Ljava/util/stream/DoubleStream;",
                "  #152 = Class              #153          // java/util/stream/SpinedBuffer$OfLong",
                "  #153 = Utf8               java/util/stream/SpinedBuffer$OfLong",
                "  #154 = Methodref          #152.#87      // java/util/stream/SpinedBuffer$OfLong.\"<init>\":()V",
                "  #155 = Methodref          #152.#156     // java/util/stream/SpinedBuffer$OfLong.spliterator:()Ljava/util/Spliterator$OfLong;",
                "  #156 = NameAndType        #36:#157      // spliterator:()Ljava/util/Spliterator$OfLong;",
                "  #157 = Utf8               ()Ljava/util/Spliterator$OfLong;",
                "  #158 = Methodref          #47.#159      // java/util/stream/StreamSupport.longStream:(Ljava/util/Spliterator$OfLong;Z)Ljava/util/stream/LongStream;",
                "  #159 = NameAndType        #160:#161     // longStream:(Ljava/util/Spliterator$OfLong;Z)Ljava/util/stream/LongStream;",
                "  #160 = Utf8               longStream",
                "  #161 = Utf8               (Ljava/util/Spliterator$OfLong;Z)Ljava/util/stream/LongStream;",
                "  #162 = Class              #163          // java/util/stream/SpinedBuffer$OfInt",
                "  #163 = Utf8               java/util/stream/SpinedBuffer$OfInt",
                "  #164 = Methodref          #162.#87      // java/util/stream/SpinedBuffer$OfInt.\"<init>\":()V",
                "  #165 = Methodref          #162.#166     // java/util/stream/SpinedBuffer$OfInt.spliterator:()Ljava/util/Spliterator$OfInt;",
                "  #166 = NameAndType        #36:#167      // spliterator:()Ljava/util/Spliterator$OfInt;",
                "  #167 = Utf8               ()Ljava/util/Spliterator$OfInt;",
                "  #168 = Methodref          #47.#169      // java/util/stream/StreamSupport.intStream:(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;",
                "  #169 = NameAndType        #170:#171     // intStream:(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;",
                "  #170 = Utf8               intStream",
                "  #171 = Utf8               (Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;",
                "  #172 = Class              #173          // java/util/stream/SpinedBuffer",
                "  #173 = Utf8               java/util/stream/SpinedBuffer",
                "  #174 = Methodref          #172.#87      // java/util/stream/SpinedBuffer.\"<init>\":()V",
                "  #175 = Methodref          #172.#35      // java/util/stream/SpinedBuffer.spliterator:()Ljava/util/Spliterator;",
                "  #176 = Class              #177          // java/lang/Object",
                "  #177 = Utf8               java/lang/Object",
                "  #178 = Class              #179          // java/util/stream/BaseStream",
                "  #179 = Utf8               java/util/stream/BaseStream",
                "  #180 = Utf8               filter",
                "  #181 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;",
                "  #182 = Utf8               Signature",
                "  #183 = Utf8               (Ljava/util/function/Predicate<-TT;>;)Ljava/util/stream/Stream<TT;>;",
                "  #184 = Utf8               map",
                "  #185 = Utf8               <R:Ljava/lang/Object;>(Ljava/util/function/Function<-TT;+TR;>;)Ljava/util/stream/Stream<TR;>;",
                "  #186 = Utf8               mapToInt",
                "  #187 = Utf8               (Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;",
                "  #188 = Utf8               (Ljava/util/function/ToIntFunction<-TT;>;)Ljava/util/stream/IntStream;",
                "  #189 = Utf8               mapToLong",
                "  #190 = Utf8               (Ljava/util/function/ToLongFunction;)Ljava/util/stream/LongStream;",
                "  #191 = Utf8               (Ljava/util/function/ToLongFunction<-TT;>;)Ljava/util/stream/LongStream;",
                "  #192 = Utf8               mapToDouble",
                "  #193 = Utf8               (Ljava/util/function/ToDoubleFunction;)Ljava/util/stream/DoubleStream;",
                "  #194 = Utf8               (Ljava/util/function/ToDoubleFunction<-TT;>;)Ljava/util/stream/DoubleStream;",
                "  #195 = Utf8               <R:Ljava/lang/Object;>(Ljava/util/function/Function<-TT;+Ljava/util/stream/Stream<+TR;>;>;)Ljava/util/stream/Stream<TR;>;",
                "  #196 = Utf8               (Ljava/util/function/Function<-TT;+Ljava/util/stream/IntStream;>;)Ljava/util/stream/IntStream;",
                "  #197 = Utf8               (Ljava/util/function/Function<-TT;+Ljava/util/stream/LongStream;>;)Ljava/util/stream/LongStream;",
                "  #198 = Utf8               (Ljava/util/function/Function<-TT;+Ljava/util/stream/DoubleStream;>;)Ljava/util/stream/DoubleStream;",
                "  #199 = Utf8               mapMulti",
                "  #200 = Utf8               (Ljava/util/function/BiConsumer;)Ljava/util/stream/Stream;",
                "  #201 = Utf8               Code",
                "  #202 = Utf8               LineNumberTable",
                "  #203 = Utf8               LocalVariableTable",
                "  #204 = Utf8               this",
                "  #205 = Utf8               Ljava/util/stream/Stream;",
                "  #206 = Utf8               mapper",
                "  #207 = Utf8               Ljava/util/function/BiConsumer;",
                "  #208 = Utf8               LocalVariableTypeTable",
                "  #209 = Utf8               Ljava/util/stream/Stream<TT;>;",
                "  #210 = Utf8               Ljava/util/function/BiConsumer<-TT;-Ljava/util/function/Consumer<TR;>;>;",
                "  #211 = Utf8               <R:Ljava/lang/Object;>(Ljava/util/function/BiConsumer<-TT;-Ljava/util/function/Consumer<TR;>;>;)Ljava/util/stream/Stream<TR;>;",
                "  #212 = Utf8               mapMultiToInt",
                "  #213 = Utf8               (Ljava/util/function/BiConsumer;)Ljava/util/stream/IntStream;",
                "  #214 = Utf8               Ljava/util/function/BiConsumer<-TT;-Ljava/util/function/IntConsumer;>;",
                "  #215 = Utf8               (Ljava/util/function/BiConsumer<-TT;-Ljava/util/function/IntConsumer;>;)Ljava/util/stream/IntStream;",
                "  #216 = Utf8               mapMultiToLong",
                "  #217 = Utf8               (Ljava/util/function/BiConsumer;)Ljava/util/stream/LongStream;",
                "  #218 = Utf8               Ljava/util/function/BiConsumer<-TT;-Ljava/util/function/LongConsumer;>;",
                "  #219 = Utf8               (Ljava/util/function/BiConsumer<-TT;-Ljava/util/function/LongConsumer;>;)Ljava/util/stream/LongStream;",
                "  #220 = Utf8               mapMultiToDouble",
                "  #221 = Utf8               (Ljava/util/function/BiConsumer;)Ljava/util/stream/DoubleStream;",
                "  #222 = Utf8               Ljava/util/function/BiConsumer<-TT;-Ljava/util/function/DoubleConsumer;>;",
                "  #223 = Utf8               (Ljava/util/function/BiConsumer<-TT;-Ljava/util/function/DoubleConsumer;>;)Ljava/util/stream/DoubleStream;",
                "  #224 = Utf8               distinct",
                "  #225 = Utf8               ()Ljava/util/stream/Stream<TT;>;",
                "  #226 = Utf8               sorted",
                "  #227 = Utf8               (Ljava/util/Comparator;)Ljava/util/stream/Stream;",
                "  #228 = Utf8               (Ljava/util/Comparator<-TT;>;)Ljava/util/stream/Stream<TT;>;",
                "  #229 = Utf8               peek",
                "  #230 = Utf8               (Ljava/util/function/Consumer;)Ljava/util/stream/Stream;",
                "  #231 = Utf8               (Ljava/util/function/Consumer<-TT;>;)Ljava/util/stream/Stream<TT;>;",
                "  #232 = Utf8               limit",
                "  #233 = Utf8               (J)Ljava/util/stream/Stream;",
                "  #234 = Utf8               (J)Ljava/util/stream/Stream<TT;>;",
                "  #235 = Utf8               skip",
                "  #236 = Utf8               takeWhile",
                "  #237 = Utf8               predicate",
                "  #238 = Utf8               Ljava/util/function/Predicate;",
                "  #239 = Utf8               Ljava/util/function/Predicate<-TT;>;",
                "  #240 = Utf8               dropWhile",
                "  #241 = Utf8               forEach",
                "  #242 = Utf8               (Ljava/util/function/Consumer;)V",
                "  #243 = Utf8               (Ljava/util/function/Consumer<-TT;>;)V",
                "  #244 = Utf8               forEachOrdered",
                "  #245 = Utf8               (Ljava/util/function/IntFunction;)[Ljava/lang/Object;",
                "  #246 = Utf8               <A:Ljava/lang/Object;>(Ljava/util/function/IntFunction<[TA;>;)[TA;",
                "  #247 = Utf8               reduce",
                "  #248 = Utf8               (Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;",
                "  #249 = Utf8               (TT;Ljava/util/function/BinaryOperator<TT;>;)TT;",
                "  #250 = Utf8               (Ljava/util/function/BinaryOperator;)Ljava/util/Optional;",
                "  #251 = Utf8               (Ljava/util/function/BinaryOperator<TT;>;)Ljava/util/Optional<TT;>;",
                "  #252 = Utf8               (Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;",
                "  #253 = Utf8               <U:Ljava/lang/Object;>(TU;Ljava/util/function/BiFunction<TU;-TT;TU;>;Ljava/util/function/BinaryOperator<TU;>;)TU;",
                "  #254 = Utf8               collect",
                "  #255 = Utf8               (Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;",
                "  #256 = Utf8               <R:Ljava/lang/Object;>(Ljava/util/function/Supplier<TR;>;Ljava/util/function/BiConsumer<TR;-TT;>;Ljava/util/function/BiConsumer<TR;TR;>;)TR;",
                "  #257 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;",
                "  #258 = Utf8               <R:Ljava/lang/Object;A:Ljava/lang/Object;>(Ljava/util/stream/Collector<-TT;TA;TR;>;)TR;",
                "  #259 = Utf8               toList",
                "  #260 = Utf8               ()Ljava/util/List;",
                "  #261 = Utf8               ()Ljava/util/List<TT;>;",
                "  #262 = Utf8               min",
                "  #263 = Utf8               (Ljava/util/Comparator;)Ljava/util/Optional;",
                "  #264 = Utf8               (Ljava/util/Comparator<-TT;>;)Ljava/util/Optional<TT;>;",
                "  #265 = Utf8               max",
                "  #266 = Utf8               count",
                "  #267 = Utf8               ()J",
                "  #268 = Utf8               anyMatch",
                "  #269 = Utf8               (Ljava/util/function/Predicate;)Z",
                "  #270 = Utf8               (Ljava/util/function/Predicate<-TT;>;)Z",
                "  #271 = Utf8               allMatch",
                "  #272 = Utf8               noneMatch",
                "  #273 = Utf8               findFirst",
                "  #274 = Utf8               ()Ljava/util/Optional;",
                "  #275 = Utf8               ()Ljava/util/Optional<TT;>;",
                "  #276 = Utf8               findAny",
                "  #277 = Utf8               builder",
                "  #278 = Utf8               ()Ljava/util/stream/Stream$Builder;",
                "  #279 = Utf8               <T:Ljava/lang/Object;>()Ljava/util/stream/Stream$Builder<TT;>;",
                "  #280 = Utf8               <T:Ljava/lang/Object;>()Ljava/util/stream/Stream<TT;>;",
                "  #281 = Utf8               of",
                "  #282 = Utf8               (Ljava/lang/Object;)Ljava/util/stream/Stream;",
                "  #283 = Utf8               t",
                "  #284 = Utf8               Ljava/lang/Object;",
                "  #285 = Utf8               TT;",
                "  #286 = Utf8               <T:Ljava/lang/Object;>(TT;)Ljava/util/stream/Stream<TT;>;",
                "  #287 = Utf8               ofNullable",
                "  #288 = Utf8               StackMapTable",
                "  #289 = Utf8               values",
                "  #290 = Utf8               [Ljava/lang/Object;",
                "  #291 = Utf8               [TT;",
                "  #292 = Utf8               <T:Ljava/lang/Object;>([TT;)Ljava/util/stream/Stream<TT;>;",
                "  #293 = Utf8               RuntimeVisibleAnnotations",
                "  #294 = Utf8               Ljava/lang/SafeVarargs;",
                "  #295 = Utf8               iterate",
                "  #296 = Utf8               (Ljava/lang/Object;Ljava/util/function/UnaryOperator;)Ljava/util/stream/Stream;",
                "  #297 = Utf8               seed",
                "  #298 = Utf8               f",
                "  #299 = Utf8               Ljava/util/function/UnaryOperator;",
                "  #300 = Utf8               Ljava/util/Spliterator;",
                "  #301 = Utf8               Ljava/util/function/UnaryOperator<TT;>;",
                "  #302 = Utf8               Ljava/util/Spliterator<TT;>;",
                "  #303 = Utf8               <T:Ljava/lang/Object;>(TT;Ljava/util/function/UnaryOperator<TT;>;)Ljava/util/stream/Stream<TT;>;",
                "  #304 = Utf8               (Ljava/lang/Object;Ljava/util/function/Predicate;Ljava/util/function/UnaryOperator;)Ljava/util/stream/Stream;",
                "  #305 = Utf8               hasNext",
                "  #306 = Utf8               next",
                "  #307 = Utf8               <T:Ljava/lang/Object;>(TT;Ljava/util/function/Predicate<-TT;>;Ljava/util/function/UnaryOperator<TT;>;)Ljava/util/stream/Stream<TT;>;",
                "  #308 = Utf8               generate",
                "  #309 = Utf8               (Ljava/util/function/Supplier;)Ljava/util/stream/Stream;",
                "  #310 = Utf8               s",
                "  #311 = Utf8               Ljava/util/function/Supplier;",
                "  #312 = Utf8               Ljava/util/function/Supplier<+TT;>;",
                "  #313 = Utf8               <T:Ljava/lang/Object;>(Ljava/util/function/Supplier<+TT;>;)Ljava/util/stream/Stream<TT;>;",
                "  #314 = Utf8               concat",
                "  #315 = Utf8               (Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;",
                "  #316 = Utf8               a",
                "  #317 = Utf8               b",
                "  #318 = Utf8               split",
                "  #319 = Utf8               Ljava/util/stream/Stream<+TT;>;",
                "  #320 = Utf8               <T:Ljava/lang/Object;>(Ljava/util/stream/Stream<+TT;>;Ljava/util/stream/Stream<+TT;>;)Ljava/util/stream/Stream<TT;>;",
                "  #321 = Utf8               lambda$mapMultiToDouble$3",
                "  #322 = Utf8               (Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/DoubleStream;",
                "  #323 = Utf8               e",
                "  #324 = Utf8               buffer",
                "  #325 = Utf8               Ljava/util/stream/SpinedBuffer$OfDouble;",
                "  #326 = Utf8               lambda$mapMultiToLong$2",
                "  #327 = Utf8               (Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/LongStream;",
                "  #328 = Utf8               Ljava/util/stream/SpinedBuffer$OfLong;",
                "  #329 = Utf8               lambda$mapMultiToInt$1",
                "  #330 = Utf8               (Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/IntStream;",
                "  #331 = Utf8               Ljava/util/stream/SpinedBuffer$OfInt;",
                "  #332 = Utf8               lambda$mapMulti$0",
                "  #333 = Utf8               (Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/Stream;",
                "  #334 = Utf8               Ljava/util/stream/SpinedBuffer;",
                "  #335 = Utf8               Ljava/util/stream/SpinedBuffer<TR;>;",
                "  #336 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/stream/BaseStream<TT;Ljava/util/stream/Stream<TT;>;>;",
                "  #337 = Utf8               SourceFile",
                "  #338 = Utf8               Stream.java",
                "  #339 = Utf8               NestMembers",
                "  #340 = Class              #341          // java/util/stream/Stream$Builder",
                "  #341 = Utf8               java/util/stream/Stream$Builder",
                "  #342 = Utf8               BootstrapMethods",
                "  #343 = MethodType         #6            //  (Ljava/lang/Object;)Ljava/lang/Object;",
                "  #344 = MethodHandle       6:#345        // REF_invokeStatic java/util/stream/Stream.lambda$mapMulti$0:(Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/Stream;",
                "  #345 = InterfaceMethodref #12.#346      // java/util/stream/Stream.lambda$mapMulti$0:(Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/Stream;",
                "  #346 = NameAndType        #332:#333     // lambda$mapMulti$0:(Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/Stream;",
                "  #347 = MethodType         #282          //  (Ljava/lang/Object;)Ljava/util/stream/Stream;",
                "  #348 = MethodHandle       6:#349        // REF_invokeStatic java/util/stream/Stream.lambda$mapMultiToInt$1:(Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/IntStream;",
                "  #349 = InterfaceMethodref #12.#350      // java/util/stream/Stream.lambda$mapMultiToInt$1:(Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/IntStream;",
                "  #350 = NameAndType        #329:#330     // lambda$mapMultiToInt$1:(Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/IntStream;",
                "  #351 = MethodType         #352          //  (Ljava/lang/Object;)Ljava/util/stream/IntStream;",
                "  #352 = Utf8               (Ljava/lang/Object;)Ljava/util/stream/IntStream;",
                "  #353 = MethodHandle       6:#354        // REF_invokeStatic java/util/stream/Stream.lambda$mapMultiToLong$2:(Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/LongStream;",
                "  #354 = InterfaceMethodref #12.#355      // java/util/stream/Stream.lambda$mapMultiToLong$2:(Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/LongStream;",
                "  #355 = NameAndType        #326:#327     // lambda$mapMultiToLong$2:(Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/LongStream;",
                "  #356 = MethodType         #357          //  (Ljava/lang/Object;)Ljava/util/stream/LongStream;",
                "  #357 = Utf8               (Ljava/lang/Object;)Ljava/util/stream/LongStream;",
                "  #358 = MethodHandle       6:#359        // REF_invokeStatic java/util/stream/Stream.lambda$mapMultiToDouble$3:(Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/DoubleStream;",
                "  #359 = InterfaceMethodref #12.#360      // java/util/stream/Stream.lambda$mapMultiToDouble$3:(Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/DoubleStream;",
                "  #360 = NameAndType        #321:#322     // lambda$mapMultiToDouble$3:(Ljava/util/function/BiConsumer;Ljava/lang/Object;)Ljava/util/stream/DoubleStream;",
                "  #361 = MethodType         #362          //  (Ljava/lang/Object;)Ljava/util/stream/DoubleStream;",
                "  #362 = Utf8               (Ljava/lang/Object;)Ljava/util/stream/DoubleStream;",
                "  #363 = MethodType         #88           //  ()V",
                "  #364 = MethodHandle       9:#365        // REF_invokeInterface java/util/stream/BaseStream.close:()V",
                "  #365 = InterfaceMethodref #178.#366     // java/util/stream/BaseStream.close:()V",
                "  #366 = NameAndType        #367:#88      // close:()V",
                "  #367 = Utf8               close",
                "  #368 = MethodHandle       6:#369        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;",
                "  #369 = Methodref          #370.#371     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;",
                "  #370 = Class              #372          // java/lang/invoke/LambdaMetafactory",
                "  #371 = NameAndType        #373:#374     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;",
                "  #372 = Utf8               java/lang/invoke/LambdaMetafactory",
                "  #373 = Utf8               metafactory",
                "  #374 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;",
                "  #375 = Utf8               InnerClasses",
                "  #376 = Class              #377          // java/util/stream/WhileOps$UnorderedWhileSpliterator",
                "  #377 = Utf8               java/util/stream/WhileOps$UnorderedWhileSpliterator",
                "  #378 = Class              #379          // java/util/stream/WhileOps",
                "  #379 = Utf8               java/util/stream/WhileOps",
                "  #380 = Utf8               UnorderedWhileSpliterator",
                "  #381 = Class              #382          // java/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef",
                "  #382 = Utf8               java/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef",
                "  #383 = Utf8               OfRef",
                "  #384 = Utf8               Taking",
                "  #385 = Utf8               Dropping",
                "  #386 = Utf8               StreamBuilderImpl",
                "  #387 = Class              #388          // java/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator",
                "  #388 = Utf8               java/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator",
                "  #389 = Class              #390          // java/util/stream/StreamSpliterators",
                "  #390 = Utf8               java/util/stream/StreamSpliterators",
                "  #391 = Utf8               InfiniteSupplyingSpliterator",
                "  #392 = Class              #393          // java/util/stream/Streams$ConcatSpliterator",
                "  #393 = Utf8               java/util/stream/Streams$ConcatSpliterator",
                "  #394 = Utf8               ConcatSpliterator",
                "  #395 = Utf8               OfDouble",
                "  #396 = Class              #397          // java/util/Spliterator$OfDouble",
                "  #397 = Utf8               java/util/Spliterator$OfDouble",
                "  #398 = Utf8               OfLong",
                "  #399 = Class              #400          // java/util/Spliterator$OfLong",
                "  #400 = Utf8               java/util/Spliterator$OfLong",
                "  #401 = Utf8               OfInt",
                "  #402 = Class              #403          // java/util/Spliterator$OfInt",
                "  #403 = Utf8               java/util/Spliterator$OfInt",
                "  #404 = Utf8               Builder",
                "  #405 = Class              #406          // java/lang/invoke/MethodHandles$Lookup",
                "  #406 = Utf8               java/lang/invoke/MethodHandles$Lookup",
                "  #407 = Class              #408          // java/lang/invoke/MethodHandles",
                "  #408 = Utf8               java/lang/invoke/MethodHandles",
                "  #409 = Utf8               Lookup"
        );
    }
}
