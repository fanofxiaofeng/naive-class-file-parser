package com.test.present.cp.case_all;

import com.test.present.cp.ConstantPoolPresenterTestBase;
import org.junit.Before;
import org.junit.Test;

import java.io.IOException;
import java.lang.invoke.MethodHandle;
import java.util.List;

public class MethodHandleCpTest extends ConstantPoolPresenterTestBase {

    @Before
    public void prepare() throws IOException {
        buildRealLines(MethodHandle.class);
    }

    @Test
    public void test() {
        expectedLines = List.of(
                "    #1 = Class              #2            // java/lang/invoke/MethodHandleInfo",
                "    #2 = Utf8               java/lang/invoke/MethodHandleInfo",
                "    #3 = Fieldref           #4.#5         // java/lang/invoke/MethodHandle.type:Ljava/lang/invoke/MethodType;",
                "    #4 = Class              #6            // java/lang/invoke/MethodHandle",
                "    #5 = NameAndType        #7:#8         // type:Ljava/lang/invoke/MethodType;",
                "    #6 = Utf8               java/lang/invoke/MethodHandle",
                "    #7 = Utf8               type",
                "    #8 = Utf8               Ljava/lang/invoke/MethodType;",
                "    #9 = Methodref          #10.#11       // java/lang/Object.\"<init>\":()V",
                "   #10 = Class              #12           // java/lang/Object",
                "   #11 = NameAndType        #13:#14       // \"<init>\":()V",
                "   #12 = Utf8               java/lang/Object",
                "   #13 = Utf8               <init>",
                "   #14 = Utf8               ()V",
                "   #15 = Methodref          #16.#17       // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;",
                "   #16 = Class              #18           // java/util/Objects",
                "   #17 = NameAndType        #19:#20       // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;",
                "   #18 = Utf8               java/util/Objects",
                "   #19 = Utf8               requireNonNull",
                "   #20 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;",
                "   #21 = Class              #22           // java/lang/invoke/MethodType",
                "   #22 = Utf8               java/lang/invoke/MethodType",
                "   #23 = Class              #24           // java/lang/invoke/LambdaForm",
                "   #24 = Utf8               java/lang/invoke/LambdaForm",
                "   #25 = Methodref          #23.#26       // java/lang/invoke/LambdaForm.uncustomize:()Ljava/lang/invoke/LambdaForm;",
                "   #26 = NameAndType        #27:#28       // uncustomize:()Ljava/lang/invoke/LambdaForm;",
                "   #27 = Utf8               uncustomize",
                "   #28 = Utf8               ()Ljava/lang/invoke/LambdaForm;",
                "   #29 = Fieldref           #4.#30        // java/lang/invoke/MethodHandle.form:Ljava/lang/invoke/LambdaForm;",
                "   #30 = NameAndType        #31:#32       // form:Ljava/lang/invoke/LambdaForm;",
                "   #31 = Utf8               form",
                "   #32 = Utf8               Ljava/lang/invoke/LambdaForm;",
                "   #33 = Methodref          #23.#34       // java/lang/invoke/LambdaForm.prepare:()V",
                "   #34 = NameAndType        #35:#14       // prepare:()V",
                "   #35 = Utf8               prepare",
                "   #36 = Methodref          #21.#37       // java/lang/invoke/MethodType.genericMethodType:(I)Ljava/lang/invoke/MethodType;",
                "   #37 = NameAndType        #38:#39       // genericMethodType:(I)Ljava/lang/invoke/MethodType;",
                "   #38 = Utf8               genericMethodType",
                "   #39 = Utf8               (I)Ljava/lang/invoke/MethodType;",
                "   #40 = Methodref          #21.#41       // java/lang/invoke/MethodType.invokers:()Ljava/lang/invoke/Invokers;",
                "   #41 = NameAndType        #42:#43       // invokers:()Ljava/lang/invoke/Invokers;",
                "   #42 = Utf8               invokers",
                "   #43 = Utf8               ()Ljava/lang/invoke/Invokers;",
                "   #44 = Methodref          #45.#46       // java/lang/invoke/Invokers.spreadInvoker:(I)Ljava/lang/invoke/MethodHandle;",
                "   #45 = Class              #47           // java/lang/invoke/Invokers",
                "   #46 = NameAndType        #48:#49       // spreadInvoker:(I)Ljava/lang/invoke/MethodHandle;",
                "   #47 = Utf8               java/lang/invoke/Invokers",
                "   #48 = Utf8               spreadInvoker",
                "   #49 = Utf8               (I)Ljava/lang/invoke/MethodHandle;",
                "   #50 = Methodref          #4.#51        // java/lang/invoke/MethodHandle.asType:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "   #51 = NameAndType        #52:#53       // asType:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "   #52 = Utf8               asType",
                "   #53 = Utf8               (Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "   #54 = Methodref          #4.#55        // java/lang/invoke/MethodHandle.invokeExact:(Ljava/lang/invoke/MethodHandle;[Ljava/lang/Object;)Ljava/lang/Object;",
                "   #55 = NameAndType        #56:#57       // invokeExact:(Ljava/lang/invoke/MethodHandle;[Ljava/lang/Object;)Ljava/lang/Object;",
                "   #56 = Utf8               invokeExact",
                "   #57 = Utf8               (Ljava/lang/invoke/MethodHandle;[Ljava/lang/Object;)Ljava/lang/Object;",
                "   #58 = InterfaceMethodref #59.#60       // java/util/List.toArray:()[Ljava/lang/Object;",
                "   #59 = Class              #61           // java/util/List",
                "   #60 = NameAndType        #62:#63       // toArray:()[Ljava/lang/Object;",
                "   #61 = Utf8               java/util/List",
                "   #62 = Utf8               toArray",
                "   #63 = Utf8               ()[Ljava/lang/Object;",
                "   #64 = Methodref          #4.#65        // java/lang/invoke/MethodHandle.invokeWithArguments:([Ljava/lang/Object;)Ljava/lang/Object;",
                "   #65 = NameAndType        #66:#67       // invokeWithArguments:([Ljava/lang/Object;)Ljava/lang/Object;",
                "   #66 = Utf8               invokeWithArguments",
                "   #67 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;",
                "   #68 = Methodref          #4.#69        // java/lang/invoke/MethodHandle.asTypeCached:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "   #69 = NameAndType        #70:#53       // asTypeCached:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "   #70 = Utf8               asTypeCached",
                "   #71 = Methodref          #4.#72        // java/lang/invoke/MethodHandle.asTypeUncached:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "   #72 = NameAndType        #73:#53       // asTypeUncached:(Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;",
                "   #73 = Utf8               asTypeUncached",
                "   #74 = Methodref          #4.#75        // java/lang/invoke/MethodHandle.setAsTypeCache:(Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;",
                "   #75 = NameAndType        #76:#77       // setAsTypeCache:(Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;",
                "   #76 = Utf8               setAsTypeCache",
                "   #77 = Utf8               (Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandle;",
                "   #78 = Fieldref           #4.#79        // java/lang/invoke/MethodHandle.asTypeCache:Ljava/lang/invoke/MethodHandle;",
                "   #79 = NameAndType        #80:#81       // asTypeCache:Ljava/lang/invoke/MethodHandle;",
                "   #80 = Utf8               asTypeCache",
                "   #81 = Utf8               Ljava/lang/invoke/MethodHandle;",
                "   #82 = Fieldref           #4.#83        // java/lang/invoke/MethodHandle.asTypeSoftCache:Ljava/lang/ref/SoftReference;",
                "   #83 = NameAndType        #84:#85       // asTypeSoftCache:Ljava/lang/ref/SoftReference;",
                "   #84 = Utf8               asTypeSoftCache",
                "   #85 = Utf8               Ljava/lang/ref/SoftReference;",
                "   #86 = Methodref          #87.#88       // java/lang/ref/SoftReference.get:()Ljava/lang/Object;",
                "   #87 = Class              #89           // java/lang/ref/SoftReference",
                "   #88 = NameAndType        #90:#91       // get:()Ljava/lang/Object;",
                "   #89 = Utf8               java/lang/ref/SoftReference",
                "   #90 = Utf8               get",
                "   #91 = Utf8               ()Ljava/lang/Object;",
                "   #92 = Methodref          #4.#93        // java/lang/invoke/MethodHandle.isSafeToCache:(Ljava/lang/invoke/MethodType;)Z",
                "   #93 = NameAndType        #94:#95       // isSafeToCache:(Ljava/lang/invoke/MethodType;)Z",
                "   #94 = Utf8               isSafeToCache",
                "   #95 = Utf8               (Ljava/lang/invoke/MethodType;)Z",
                "   #96 = Methodref          #87.#97       // java/lang/ref/SoftReference.\"<init>\":(Ljava/lang/Object;)V",
                "   #97 = NameAndType        #13:#98       // \"<init>\":(Ljava/lang/Object;)V",
                "   #98 = Utf8               (Ljava/lang/Object;)V",
                "   #99 = Methodref          #21.#100      // java/lang/invoke/MethodType.isConvertibleTo:(Ljava/lang/invoke/MethodType;)Z",
                "  #100 = NameAndType        #101:#95      // isConvertibleTo:(Ljava/lang/invoke/MethodType;)Z",
                "  #101 = Utf8               isConvertibleTo",
                "  #102 = Class              #103          // java/lang/invoke/WrongMethodTypeException",
                "  #103 = Utf8               java/lang/invoke/WrongMethodTypeException",
                "  #104 = Class              #105          // java/lang/StringBuilder",
                "  #105 = Utf8               java/lang/StringBuilder",
                "  #106 = Methodref          #104.#11      // java/lang/StringBuilder.\"<init>\":()V",
                "  #107 = String             #108          // cannot convert",
                "  #108 = Utf8               cannot convert",
                "  #109 = Methodref          #104.#110     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "  #110 = NameAndType        #111:#112     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "  #111 = Utf8               append",
                "  #112 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "  #113 = Methodref          #104.#114     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;",
                "  #114 = NameAndType        #111:#115     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;",
                "  #115 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;",
                "  #116 = String             #117          //  to",
                "  #117 = Utf8                to",
                "  #118 = Methodref          #104.#119     // java/lang/StringBuilder.toString:()Ljava/lang/String;",
                "  #119 = NameAndType        #120:#121     // toString:()Ljava/lang/String;",
                "  #120 = Utf8               toString",
                "  #121 = Utf8               ()Ljava/lang/String;",
                "  #122 = Methodref          #102.#123     // java/lang/invoke/WrongMethodTypeException.\"<init>\":(Ljava/lang/String;)V",
                "  #123 = NameAndType        #13:#124      // \"<init>\":(Ljava/lang/String;)V",
                "  #124 = Utf8               (Ljava/lang/String;)V",
                "  #125 = Methodref          #126.#127     // java/lang/invoke/MethodHandleImpl.makePairwiseConvert:(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;Z)Ljava/lang/invoke/MethodHandle;",
                "  #126 = Class              #128          // java/lang/invoke/MethodHandleImpl",
                "  #127 = NameAndType        #129:#130     // makePairwiseConvert:(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;Z)Ljava/lang/invoke/MethodHandle;",
                "  #128 = Utf8               java/lang/invoke/MethodHandleImpl",
                "  #129 = Utf8               makePairwiseConvert",
                "  #130 = Utf8               (Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;Z)Ljava/lang/invoke/MethodHandle;",
                "  #131 = Methodref          #4.#132       // java/lang/invoke/MethodHandle.getApproximateCommonClassLoader:(Ljava/lang/invoke/MethodType;)Ljava/lang/ClassLoader;",
                "  #132 = NameAndType        #133:#134     // getApproximateCommonClassLoader:(Ljava/lang/invoke/MethodType;)Ljava/lang/ClassLoader;",
                "  #133 = Utf8               getApproximateCommonClassLoader",
                "  #134 = Utf8               (Ljava/lang/invoke/MethodType;)Ljava/lang/ClassLoader;",
                "  #135 = Methodref          #4.#136       // java/lang/invoke/MethodHandle.keepsAlive:(Ljava/lang/invoke/MethodType;Ljava/lang/ClassLoader;)Z",
                "  #136 = NameAndType        #137:#138     // keepsAlive:(Ljava/lang/invoke/MethodType;Ljava/lang/ClassLoader;)Z",
                "  #137 = Utf8               keepsAlive",
                "  #138 = Utf8               (Ljava/lang/invoke/MethodType;Ljava/lang/ClassLoader;)Z",
                "  #139 = Methodref          #21.#140      // java/lang/invoke/MethodType.rtype:()Ljava/lang/Class;",
                "  #140 = NameAndType        #141:#142     // rtype:()Ljava/lang/Class;",
                "  #141 = Utf8               rtype",
                "  #142 = Utf8               ()Ljava/lang/Class;",
                "  #143 = Methodref          #144.#145     // java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;",
                "  #144 = Class              #146          // java/lang/Class",
                "  #145 = NameAndType        #147:#148     // getClassLoader:()Ljava/lang/ClassLoader;",
                "  #146 = Utf8               java/lang/Class",
                "  #147 = Utf8               getClassLoader",
                "  #148 = Utf8               ()Ljava/lang/ClassLoader;",
                "  #149 = Methodref          #21.#150      // java/lang/invoke/MethodType.ptypes:()[Ljava/lang/Class;",
                "  #150 = NameAndType        #151:#152     // ptypes:()[Ljava/lang/Class;",
                "  #151 = Utf8               ptypes",
                "  #152 = Utf8               ()[Ljava/lang/Class;",
                "  #153 = Methodref          #4.#154       // java/lang/invoke/MethodHandle.isAncestorLoaderOf:(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z",
                "  #154 = NameAndType        #155:#156     // isAncestorLoaderOf:(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z",
                "  #155 = Utf8               isAncestorLoaderOf",
                "  #156 = Utf8               (Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z",
                "  #157 = Methodref          #4.#158       // java/lang/invoke/MethodHandle.keepsAlive:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Z",
                "  #158 = NameAndType        #137:#159     // keepsAlive:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Z",
                "  #159 = Utf8               (Ljava/lang/Class;Ljava/lang/ClassLoader;)Z",
                "  #160 = Methodref          #4.#161       // java/lang/invoke/MethodHandle.isBuiltinLoader:(Ljava/lang/ClassLoader;)Z",
                "  #161 = NameAndType        #162:#163     // isBuiltinLoader:(Ljava/lang/ClassLoader;)Z",
                "  #162 = Utf8               isBuiltinLoader",
                "  #163 = Utf8               (Ljava/lang/ClassLoader;)Z",
                "  #164 = Methodref          #165.#166     // java/lang/ClassLoader.getParent:()Ljava/lang/ClassLoader;",
                "  #165 = Class              #167          // java/lang/ClassLoader",
                "  #166 = NameAndType        #168:#148     // getParent:()Ljava/lang/ClassLoader;",
                "  #167 = Utf8               java/lang/ClassLoader",
                "  #168 = Utf8               getParent",
                "  #169 = Methodref          #170.#171     // jdk/internal/loader/ClassLoaders.platformClassLoader:()Ljava/lang/ClassLoader;",
                "  #170 = Class              #172          // jdk/internal/loader/ClassLoaders",
                "  #171 = NameAndType        #173:#148     // platformClassLoader:()Ljava/lang/ClassLoader;",
                "  #172 = Utf8               jdk/internal/loader/ClassLoaders",
                "  #173 = Utf8               platformClassLoader",
                "  #174 = Methodref          #170.#175     // jdk/internal/loader/ClassLoaders.appClassLoader:()Ljava/lang/ClassLoader;",
                "  #175 = NameAndType        #176:#148     // appClassLoader:()Ljava/lang/ClassLoader;",
                "  #176 = Utf8               appClassLoader",
                "  #177 = Methodref          #4.#178       // java/lang/invoke/MethodHandle.type:()Ljava/lang/invoke/MethodType;",
                "  #178 = NameAndType        #7:#179       // type:()Ljava/lang/invoke/MethodType;",
                "  #179 = Utf8               ()Ljava/lang/invoke/MethodType;",
                "  #180 = Methodref          #21.#181      // java/lang/invoke/MethodType.parameterCount:()I",
                "  #181 = NameAndType        #182:#183     // parameterCount:()I",
                "  #182 = Utf8               parameterCount",
                "  #183 = Utf8               ()I",
                "  #184 = Methodref          #4.#185       // java/lang/invoke/MethodHandle.asSpreader:(ILjava/lang/Class;I)Ljava/lang/invoke/MethodHandle;",
                "  #185 = NameAndType        #186:#187     // asSpreader:(ILjava/lang/Class;I)Ljava/lang/invoke/MethodHandle;",
                "  #186 = Utf8               asSpreader",
                "  #187 = Utf8               (ILjava/lang/Class;I)Ljava/lang/invoke/MethodHandle;",
                "  #188 = Methodref          #4.#189       // java/lang/invoke/MethodHandle.asSpreaderChecks:(Ljava/lang/Class;II)Ljava/lang/invoke/MethodType;",
                "  #189 = NameAndType        #190:#191     // asSpreaderChecks:(Ljava/lang/Class;II)Ljava/lang/invoke/MethodType;",
                "  #190 = Utf8               asSpreaderChecks",
                "  #191 = Utf8               (Ljava/lang/Class;II)Ljava/lang/invoke/MethodType;",
                "  #192 = Methodref          #4.#193       // java/lang/invoke/MethodHandle.rebind:()Ljava/lang/invoke/BoundMethodHandle;",
                "  #193 = NameAndType        #194:#195     // rebind:()Ljava/lang/invoke/BoundMethodHandle;",
                "  #194 = Utf8               rebind",
                "  #195 = Utf8               ()Ljava/lang/invoke/BoundMethodHandle;",
                "  #196 = Methodref          #197.#198     // java/lang/invoke/BoundMethodHandle.editor:()Ljava/lang/invoke/LambdaFormEditor;",
                "  #197 = Class              #199          // java/lang/invoke/BoundMethodHandle",
                "  #198 = NameAndType        #200:#201     // editor:()Ljava/lang/invoke/LambdaFormEditor;",
                "  #199 = Utf8               java/lang/invoke/BoundMethodHandle",
                "  #200 = Utf8               editor",
                "  #201 = Utf8               ()Ljava/lang/invoke/LambdaFormEditor;",
                "  #202 = Methodref          #203.#204     // java/lang/invoke/LambdaFormEditor.spreadArgumentsForm:(ILjava/lang/Class;I)Ljava/lang/invoke/LambdaForm;",
                "  #203 = Class              #205          // java/lang/invoke/LambdaFormEditor",
                "  #204 = NameAndType        #206:#207     // spreadArgumentsForm:(ILjava/lang/Class;I)Ljava/lang/invoke/LambdaForm;",
                "  #205 = Utf8               java/lang/invoke/LambdaFormEditor",
                "  #206 = Utf8               spreadArgumentsForm",
                "  #207 = Utf8               (ILjava/lang/Class;I)Ljava/lang/invoke/LambdaForm;",
                "  #208 = Methodref          #21.#209      // java/lang/invoke/MethodType.replaceParameterTypes:(II[Ljava/lang/Class;)Ljava/lang/invoke/MethodType;",
                "  #209 = NameAndType        #210:#211     // replaceParameterTypes:(II[Ljava/lang/Class;)Ljava/lang/invoke/MethodType;",
                "  #210 = Utf8               replaceParameterTypes",
                "  #211 = Utf8               (II[Ljava/lang/Class;)Ljava/lang/invoke/MethodType;",
                "  #212 = Methodref          #197.#213     // java/lang/invoke/BoundMethodHandle.copyWith:(Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;)Ljava/lang/invoke/BoundMethodHandle;",
                "  #213 = NameAndType        #214:#215     // copyWith:(Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;)Ljava/lang/invoke/BoundMethodHandle;",
                "  #214 = Utf8               copyWith",
                "  #215 = Utf8               (Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;)Ljava/lang/invoke/BoundMethodHandle;",
                "  #216 = Methodref          #4.#217       // java/lang/invoke/MethodHandle.spreadArrayChecks:(Ljava/lang/Class;I)V",
                "  #217 = NameAndType        #218:#219     // spreadArrayChecks:(Ljava/lang/Class;I)V",
                "  #218 = Utf8               spreadArrayChecks",
                "  #219 = Utf8               (Ljava/lang/Class;I)V",
                "  #220 = String             #221          // bad spread array length",
                "  #221 = Utf8               bad spread array length",
                "  #222 = Methodref          #223.#224     // java/lang/invoke/MethodHandleStatics.newIllegalArgumentException:(Ljava/lang/String;)Ljava/lang/RuntimeException;",
                "  #223 = Class              #225          // java/lang/invoke/MethodHandleStatics",
                "  #224 = NameAndType        #226:#227     // newIllegalArgumentException:(Ljava/lang/String;)Ljava/lang/RuntimeException;",
                "  #225 = Utf8               java/lang/invoke/MethodHandleStatics",
                "  #226 = Utf8               newIllegalArgumentException",
                "  #227 = Utf8               (Ljava/lang/String;)Ljava/lang/RuntimeException;",
                "  #228 = String             #229          // bad spread position",
                "  #229 = Utf8               bad spread position",
                "  #230 = Methodref          #144.#231     // java/lang/Class.getComponentType:()Ljava/lang/Class;",
                "  #231 = NameAndType        #232:#142     // getComponentType:()Ljava/lang/Class;",
                "  #232 = Utf8               getComponentType",
                "  #233 = Methodref          #21.#234      // java/lang/invoke/MethodType.parameterType:(I)Ljava/lang/Class;",
                "  #234 = NameAndType        #235:#236     // parameterType:(I)Ljava/lang/Class;",
                "  #235 = Utf8               parameterType",
                "  #236 = Utf8               (I)Ljava/lang/Class;",
                "  #237 = Methodref          #21.#238      // java/lang/invoke/MethodType.canConvert:(Ljava/lang/Class;Ljava/lang/Class;)Z",
                "  #238 = NameAndType        #239:#240     // canConvert:(Ljava/lang/Class;Ljava/lang/Class;)Z",
                "  #239 = Utf8               canConvert",
                "  #240 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;)Z",
                "  #241 = Methodref          #21.#242      // java/lang/invoke/MethodType.asSpreaderType:(Ljava/lang/Class;II)Ljava/lang/invoke/MethodType;",
                "  #242 = NameAndType        #243:#191     // asSpreaderType:(Ljava/lang/Class;II)Ljava/lang/invoke/MethodType;",
                "  #243 = Utf8               asSpreaderType",
                "  #244 = String             #245          // should not return",
                "  #245 = Utf8               should not return",
                "  #246 = Methodref          #223.#247     // java/lang/invoke/MethodHandleStatics.newInternalError:(Ljava/lang/String;)Ljava/lang/InternalError;",
                "  #247 = NameAndType        #248:#249     // newInternalError:(Ljava/lang/String;)Ljava/lang/InternalError;",
                "  #248 = Utf8               newInternalError",
                "  #249 = Utf8               (Ljava/lang/String;)Ljava/lang/InternalError;",
                "  #250 = String             #251          // not an array type",
                "  #251 = Utf8               not an array type",
                "  #252 = Methodref          #223.#253     // java/lang/invoke/MethodHandleStatics.newIllegalArgumentException:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/RuntimeException;",
                "  #253 = NameAndType        #226:#254     // newIllegalArgumentException:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/RuntimeException;",
                "  #254 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/RuntimeException;",
                "  #255 = String             #256          // array length is not legal",
                "  #256 = Utf8               array length is not legal",
                "  #257 = Methodref          #258.#259     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;",
                "  #258 = Class              #260          // java/lang/Integer",
                "  #259 = NameAndType        #261:#262     // valueOf:(I)Ljava/lang/Integer;",
                "  #260 = Utf8               java/lang/Integer",
                "  #261 = Utf8               valueOf",
                "  #262 = Utf8               (I)Ljava/lang/Integer;",
                "  #263 = Fieldref           #4.#264       // java/lang/invoke/MethodHandle.$assertionsDisabled:Z",
                "  #264 = NameAndType        #265:#266     // $assertionsDisabled:Z",
                "  #265 = Utf8               $assertionsDisabled",
                "  #266 = Utf8               Z",
                "  #267 = Class              #268          // java/lang/AssertionError",
                "  #268 = Utf8               java/lang/AssertionError",
                "  #269 = Methodref          #267.#11      // java/lang/AssertionError.\"<init>\":()V",
                "  #270 = Fieldref           #271.#272     // java/lang/Long.TYPE:Ljava/lang/Class;",
                "  #271 = Class              #273          // java/lang/Long",
                "  #272 = NameAndType        #274:#275     // TYPE:Ljava/lang/Class;",
                "  #273 = Utf8               java/lang/Long",
                "  #274 = Utf8               TYPE",
                "  #275 = Utf8               Ljava/lang/Class;",
                "  #276 = Fieldref           #277.#272     // java/lang/Double.TYPE:Ljava/lang/Class;",
                "  #277 = Class              #278          // java/lang/Double",
                "  #278 = Utf8               java/lang/Double",
                "  #279 = String             #280          // array length is not legal for long[] or double[]",
                "  #280 = Utf8               array length is not legal for long[] or double[]",
                "  #281 = Methodref          #4.#282       // java/lang/invoke/MethodHandle.isVarargsCollector:()Z",
                "  #282 = NameAndType        #283:#284     // isVarargsCollector:()Z",
                "  #283 = Utf8               isVarargsCollector",
                "  #284 = Utf8               ()Z",
                "  #285 = Methodref          #21.#286      // java/lang/invoke/MethodType.lastParameterType:()Ljava/lang/Class;",
                "  #286 = NameAndType        #287:#142     // lastParameterType:()Ljava/lang/Class;",
                "  #287 = Utf8               lastParameterType",
                "  #288 = Methodref          #4.#289       // java/lang/invoke/MethodHandle.asVarargsCollector:(Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;",
                "  #289 = NameAndType        #290:#291     // asVarargsCollector:(Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;",
                "  #290 = Utf8               asVarargsCollector",
                "  #291 = Utf8               (Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;",
                "  #292 = Methodref          #4.#293       // java/lang/invoke/MethodHandle.asCollector:(ILjava/lang/Class;I)Ljava/lang/invoke/MethodHandle;",
                "  #293 = NameAndType        #294:#187     // asCollector:(ILjava/lang/Class;I)Ljava/lang/invoke/MethodHandle;",
                "  #294 = Utf8               asCollector",
                "  #295 = Methodref          #4.#296       // java/lang/invoke/MethodHandle.asCollectorChecks:(Ljava/lang/Class;II)Z",
                "  #296 = NameAndType        #297:#298     // asCollectorChecks:(Ljava/lang/Class;II)Z",
                "  #297 = Utf8               asCollectorChecks",
                "  #298 = Utf8               (Ljava/lang/Class;II)Z",
                "  #299 = Methodref          #21.#300      // java/lang/invoke/MethodType.asCollectorType:(Ljava/lang/Class;II)Ljava/lang/invoke/MethodType;",
                "  #300 = NameAndType        #301:#191     // asCollectorType:(Ljava/lang/Class;II)Ljava/lang/invoke/MethodType;",
                "  #301 = Utf8               asCollectorType",
                "  #302 = Methodref          #126.#303     // java/lang/invoke/MethodHandleImpl.varargsArray:(Ljava/lang/Class;I)Ljava/lang/invoke/MethodHandle;",
                "  #303 = NameAndType        #304:#305     // varargsArray:(Ljava/lang/Class;I)Ljava/lang/invoke/MethodHandle;",
                "  #304 = Utf8               varargsArray",
                "  #305 = Utf8               (Ljava/lang/Class;I)Ljava/lang/invoke/MethodHandle;",
                "  #306 = Methodref          #21.#307      // java/lang/invoke/MethodType.basicType:()Ljava/lang/invoke/MethodType;",
                "  #307 = NameAndType        #308:#179     // basicType:()Ljava/lang/invoke/MethodType;",
                "  #308 = Utf8               basicType",
                "  #309 = Methodref          #203.#310     // java/lang/invoke/LambdaFormEditor.collectArgumentsForm:(ILjava/lang/invoke/MethodType;)Ljava/lang/invoke/LambdaForm;",
                "  #310 = NameAndType        #311:#312     // collectArgumentsForm:(ILjava/lang/invoke/MethodType;)Ljava/lang/invoke/LambdaForm;",
                "  #311 = Utf8               collectArgumentsForm",
                "  #312 = Utf8               (ILjava/lang/invoke/MethodType;)Ljava/lang/invoke/LambdaForm;",
                "  #313 = Methodref          #197.#314     // java/lang/invoke/BoundMethodHandle.copyWithExtendL:(Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;Ljava/lang/Object;)Ljava/lang/invoke/BoundMethodHandle;",
                "  #314 = NameAndType        #315:#316     // copyWithExtendL:(Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;Ljava/lang/Object;)Ljava/lang/invoke/BoundMethodHandle;",
                "  #315 = Utf8               copyWithExtendL",
                "  #316 = Utf8               (Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;Ljava/lang/Object;)Ljava/lang/invoke/BoundMethodHandle;",
                "  #317 = String             #318          // bad collect position",
                "  #318 = Utf8               bad collect position",
                "  #319 = Methodref          #144.#320     // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z",
                "  #320 = NameAndType        #321:#322     // isAssignableFrom:(Ljava/lang/Class;)Z",
                "  #321 = Utf8               isAssignableFrom",
                "  #322 = Utf8               (Ljava/lang/Class;)Z",
                "  #323 = String             #324          // array type not assignable to argument",
                "  #324 = Utf8               array type not assignable to argument",
                "  #325 = Methodref          #223.#326     // java/lang/invoke/MethodHandleStatics.newIllegalArgumentException:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/RuntimeException;",
                "  #326 = NameAndType        #226:#327     // newIllegalArgumentException:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/RuntimeException;",
                "  #327 = Utf8               (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/RuntimeException;",
                "  #328 = Methodref          #126.#329     // java/lang/invoke/MethodHandleImpl.makeVarargsCollector:(Ljava/lang/invoke/MethodHandle;Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;",
                "  #329 = NameAndType        #330:#331     // makeVarargsCollector:(Ljava/lang/invoke/MethodHandle;Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;",
                "  #330 = Utf8               makeVarargsCollector",
                "  #331 = Utf8               (Ljava/lang/invoke/MethodHandle;Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;",
                "  #332 = Methodref          #21.#333      // java/lang/invoke/MethodType.leadingReferenceParameter:()Ljava/lang/Class;",
                "  #333 = NameAndType        #334:#142     // leadingReferenceParameter:()Ljava/lang/Class;",
                "  #334 = Utf8               leadingReferenceParameter",
                "  #335 = Methodref          #144.#336     // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #336 = NameAndType        #337:#20      // cast:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #337 = Utf8               cast",
                "  #338 = Methodref          #4.#339       // java/lang/invoke/MethodHandle.bindArgumentL:(ILjava/lang/Object;)Ljava/lang/invoke/BoundMethodHandle;",
                "  #339 = NameAndType        #340:#341     // bindArgumentL:(ILjava/lang/Object;)Ljava/lang/invoke/BoundMethodHandle;",
                "  #340 = Utf8               bindArgumentL",
                "  #341 = Utf8               (ILjava/lang/Object;)Ljava/lang/invoke/BoundMethodHandle;",
                "  #342 = Fieldref           #343.#344     // java/lang/invoke/MethodHandles$Lookup.IMPL_LOOKUP:Ljava/lang/invoke/MethodHandles$Lookup;",
                "  #343 = Class              #345          // java/lang/invoke/MethodHandles$Lookup",
                "  #344 = NameAndType        #346:#347     // IMPL_LOOKUP:Ljava/lang/invoke/MethodHandles$Lookup;",
                "  #345 = Utf8               java/lang/invoke/MethodHandles$Lookup",
                "  #346 = Utf8               IMPL_LOOKUP",
                "  #347 = Utf8               Ljava/lang/invoke/MethodHandles$Lookup;",
                "  #348 = Methodref          #343.#349     // java/lang/invoke/MethodHandles$Lookup.revealDirect:(Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandleInfo;",
                "  #349 = NameAndType        #350:#351     // revealDirect:(Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandleInfo;",
                "  #350 = Utf8               revealDirect",
                "  #351 = Utf8               (Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/MethodHandleInfo;",
                "  #352 = InterfaceMethodref #1.#353       // java/lang/invoke/MethodHandleInfo.getDeclaringClass:()Ljava/lang/Class;",
                "  #353 = NameAndType        #354:#142     // getDeclaringClass:()Ljava/lang/Class;",
                "  #354 = Utf8               getDeclaringClass",
                "  #355 = Methodref          #144.#356     // java/lang/Class.isInterface:()Z",
                "  #356 = NameAndType        #357:#284     // isInterface:()Z",
                "  #357 = Utf8               isInterface",
                "  #358 = Methodref          #144.#359     // java/lang/Class.describeConstable:()Ljava/util/Optional;",
                "  #359 = NameAndType        #360:#361     // describeConstable:()Ljava/util/Optional;",
                "  #360 = Utf8               describeConstable",
                "  #361 = Utf8               ()Ljava/util/Optional;",
                "  #362 = Methodref          #363.#364     // java/util/Optional.orElseThrow:()Ljava/lang/Object;",
                "  #363 = Class              #365          // java/util/Optional",
                "  #364 = NameAndType        #366:#91      // orElseThrow:()Ljava/lang/Object;",
                "  #365 = Utf8               java/util/Optional",
                "  #366 = Utf8               orElseThrow",
                "  #367 = Class              #368          // java/lang/constant/ClassDesc",
                "  #368 = Utf8               java/lang/constant/ClassDesc",
                "  #369 = InterfaceMethodref #1.#370       // java/lang/invoke/MethodHandleInfo.getMethodType:()Ljava/lang/invoke/MethodType;",
                "  #370 = NameAndType        #371:#179     // getMethodType:()Ljava/lang/invoke/MethodType;",
                "  #371 = Utf8               getMethodType",
                "  #372 = Methodref          #21.#359      // java/lang/invoke/MethodType.describeConstable:()Ljava/util/Optional;",
                "  #373 = Class              #374          // java/lang/constant/MethodTypeDesc",
                "  #374 = Utf8               java/lang/constant/MethodTypeDesc",
                "  #375 = InterfaceMethodref #1.#376       // java/lang/invoke/MethodHandleInfo.getName:()Ljava/lang/String;",
                "  #376 = NameAndType        #377:#121     // getName:()Ljava/lang/String;",
                "  #377 = Utf8               getName",
                "  #378 = Class              #379          // java/lang/Exception",
                "  #379 = Utf8               java/lang/Exception",
                "  #380 = Methodref          #363.#381     // java/util/Optional.empty:()Ljava/util/Optional;",
                "  #381 = NameAndType        #382:#361     // empty:()Ljava/util/Optional;",
                "  #382 = Utf8               empty",
                "  #383 = InterfaceMethodref #1.#384       // java/lang/invoke/MethodHandleInfo.getReferenceKind:()I",
                "  #384 = NameAndType        #385:#183     // getReferenceKind:()I",
                "  #385 = Utf8               getReferenceKind",
                "  #386 = Fieldref           #387.#388     // java/lang/constant/DirectMethodHandleDesc$Kind.GETTER:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #387 = Class              #389          // java/lang/constant/DirectMethodHandleDesc$Kind",
                "  #388 = NameAndType        #390:#391     // GETTER:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #389 = Utf8               java/lang/constant/DirectMethodHandleDesc$Kind",
                "  #390 = Utf8               GETTER",
                "  #391 = Utf8               Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #392 = InterfaceMethodref #373.#393     // java/lang/constant/MethodTypeDesc.returnType:()Ljava/lang/constant/ClassDesc;",
                "  #393 = NameAndType        #394:#395     // returnType:()Ljava/lang/constant/ClassDesc;",
                "  #394 = Utf8               returnType",
                "  #395 = Utf8               ()Ljava/lang/constant/ClassDesc;",
                "  #396 = InterfaceMethodref #397.#398     // java/lang/constant/MethodHandleDesc.ofField:(Ljava/lang/constant/DirectMethodHandleDesc$Kind;Ljava/lang/constant/ClassDesc;Ljava/lang/String;Ljava/lang/constant/ClassDesc;)Ljava/lang/constant/DirectMethodHandleDesc;",
                "  #397 = Class              #399          // java/lang/constant/MethodHandleDesc",
                "  #398 = NameAndType        #400:#401     // ofField:(Ljava/lang/constant/DirectMethodHandleDesc$Kind;Ljava/lang/constant/ClassDesc;Ljava/lang/String;Ljava/lang/constant/ClassDesc;)Ljava/lang/constant/DirectMethodHandleDesc;",
                "  #399 = Utf8               java/lang/constant/MethodHandleDesc",
                "  #400 = Utf8               ofField",
                "  #401 = Utf8               (Ljava/lang/constant/DirectMethodHandleDesc$Kind;Ljava/lang/constant/ClassDesc;Ljava/lang/String;Ljava/lang/constant/ClassDesc;)Ljava/lang/constant/DirectMethodHandleDesc;",
                "  #402 = Methodref          #363.#403     // java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;",
                "  #403 = NameAndType        #404:#405     // of:(Ljava/lang/Object;)Ljava/util/Optional;",
                "  #404 = Utf8               of",
                "  #405 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;",
                "  #406 = Fieldref           #387.#407     // java/lang/constant/DirectMethodHandleDesc$Kind.SETTER:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #407 = NameAndType        #408:#391     // SETTER:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #408 = Utf8               SETTER",
                "  #409 = InterfaceMethodref #373.#410     // java/lang/constant/MethodTypeDesc.parameterType:(I)Ljava/lang/constant/ClassDesc;",
                "  #410 = NameAndType        #235:#411     // parameterType:(I)Ljava/lang/constant/ClassDesc;",
                "  #411 = Utf8               (I)Ljava/lang/constant/ClassDesc;",
                "  #412 = Fieldref           #387.#413     // java/lang/constant/DirectMethodHandleDesc$Kind.STATIC_GETTER:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #413 = NameAndType        #414:#391     // STATIC_GETTER:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #414 = Utf8               STATIC_GETTER",
                "  #415 = Fieldref           #387.#416     // java/lang/constant/DirectMethodHandleDesc$Kind.STATIC_SETTER:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #416 = NameAndType        #417:#391     // STATIC_SETTER:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #417 = Utf8               STATIC_SETTER",
                "  #418 = Fieldref           #387.#419     // java/lang/constant/DirectMethodHandleDesc$Kind.VIRTUAL:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #419 = NameAndType        #420:#391     // VIRTUAL:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #420 = Utf8               VIRTUAL",
                "  #421 = InterfaceMethodref #397.#422     // java/lang/constant/MethodHandleDesc.ofMethod:(Ljava/lang/constant/DirectMethodHandleDesc$Kind;Ljava/lang/constant/ClassDesc;Ljava/lang/String;Ljava/lang/constant/MethodTypeDesc;)Ljava/lang/constant/DirectMethodHandleDesc;",
                "  #422 = NameAndType        #423:#424     // ofMethod:(Ljava/lang/constant/DirectMethodHandleDesc$Kind;Ljava/lang/constant/ClassDesc;Ljava/lang/String;Ljava/lang/constant/MethodTypeDesc;)Ljava/lang/constant/DirectMethodHandleDesc;",
                "  #423 = Utf8               ofMethod",
                "  #424 = Utf8               (Ljava/lang/constant/DirectMethodHandleDesc$Kind;Ljava/lang/constant/ClassDesc;Ljava/lang/String;Ljava/lang/constant/MethodTypeDesc;)Ljava/lang/constant/DirectMethodHandleDesc;",
                "  #425 = Fieldref           #387.#426     // java/lang/constant/DirectMethodHandleDesc$Kind.INTERFACE_STATIC:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #426 = NameAndType        #427:#391     // INTERFACE_STATIC:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #427 = Utf8               INTERFACE_STATIC",
                "  #428 = Fieldref           #387.#429     // java/lang/constant/DirectMethodHandleDesc$Kind.STATIC:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #429 = NameAndType        #430:#391     // STATIC:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #430 = Utf8               STATIC",
                "  #431 = Fieldref           #387.#432     // java/lang/constant/DirectMethodHandleDesc$Kind.INTERFACE_SPECIAL:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #432 = NameAndType        #433:#391     // INTERFACE_SPECIAL:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #433 = Utf8               INTERFACE_SPECIAL",
                "  #434 = Fieldref           #387.#435     // java/lang/constant/DirectMethodHandleDesc$Kind.SPECIAL:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #435 = NameAndType        #436:#391     // SPECIAL:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #436 = Utf8               SPECIAL",
                "  #437 = Fieldref           #387.#438     // java/lang/constant/DirectMethodHandleDesc$Kind.INTERFACE_VIRTUAL:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #438 = NameAndType        #439:#391     // INTERFACE_VIRTUAL:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #439 = Utf8               INTERFACE_VIRTUAL",
                "  #440 = Fieldref           #387.#441     // java/lang/constant/DirectMethodHandleDesc$Kind.CONSTRUCTOR:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #441 = NameAndType        #442:#391     // CONSTRUCTOR:Ljava/lang/constant/DirectMethodHandleDesc$Kind;",
                "  #442 = Utf8               CONSTRUCTOR",
                "  #443 = Fieldref           #223.#444     // java/lang/invoke/MethodHandleStatics.DEBUG_METHOD_HANDLE_NAMES:Z",
                "  #444 = NameAndType        #445:#266     // DEBUG_METHOD_HANDLE_NAMES:Z",
                "  #445 = Utf8               DEBUG_METHOD_HANDLE_NAMES",
                "  #446 = String             #447          // MethodHandle",
                "  #447 = Utf8               MethodHandle",
                "  #448 = Methodref          #4.#449       // java/lang/invoke/MethodHandle.debugString:()Ljava/lang/String;",
                "  #449 = NameAndType        #450:#121     // debugString:()Ljava/lang/String;",
                "  #450 = Utf8               debugString",
                "  #451 = Methodref          #4.#452       // java/lang/invoke/MethodHandle.standardString:()Ljava/lang/String;",
                "  #452 = NameAndType        #453:#121     // standardString:()Ljava/lang/String;",
                "  #453 = Utf8               standardString",
                "  #454 = String             #455          //  :",
                "  #455 = Utf8                :",
                "  #456 = Methodref          #4.#457       // java/lang/invoke/MethodHandle.internalForm:()Ljava/lang/invoke/LambdaForm;",
                "  #457 = NameAndType        #458:#28      // internalForm:()Ljava/lang/invoke/LambdaForm;",
                "  #458 = Utf8               internalForm",
                "  #459 = Methodref          #23.#460      // java/lang/invoke/LambdaForm.debugString:(I)Ljava/lang/String;",
                "  #460 = NameAndType        #450:#461     // debugString:(I)Ljava/lang/String;",
                "  #461 = Utf8               (I)Ljava/lang/String;",
                "  #462 = Methodref          #4.#463       // java/lang/invoke/MethodHandle.internalProperties:(I)Ljava/lang/Object;",
                "  #463 = NameAndType        #464:#465     // internalProperties:(I)Ljava/lang/Object;",
                "  #464 = Utf8               internalProperties",
                "  #465 = Utf8               (I)Ljava/lang/Object;",
                "  #466 = Methodref          #4.#460       // java/lang/invoke/MethodHandle.debugString:(I)Ljava/lang/String;",
                "  #467 = Methodref          #197.#339     // java/lang/invoke/BoundMethodHandle.bindArgumentL:(ILjava/lang/Object;)Ljava/lang/invoke/BoundMethodHandle;",
                "  #468 = Methodref          #469.#470     // java/lang/invoke/MemberName.isVarargs:()Z",
                "  #469 = Class              #471          // java/lang/invoke/MemberName",
                "  #470 = NameAndType        #472:#284     // isVarargs:()Z",
                "  #471 = Utf8               java/lang/invoke/MemberName",
                "  #472 = Utf8               isVarargs",
                "  #473 = Methodref          #4.#474       // java/lang/invoke/MethodHandle.withVarargs:(Z)Ljava/lang/invoke/MethodHandle;",
                "  #474 = NameAndType        #475:#476     // withVarargs:(Z)Ljava/lang/invoke/MethodHandle;",
                "  #475 = Utf8               withVarargs",
                "  #476 = Utf8               (Z)Ljava/lang/invoke/MethodHandle;",
                "  #477 = Class              #478          // java/lang/IllegalArgumentException",
                "  #478 = Utf8               java/lang/IllegalArgumentException",
                "  #479 = String             #480          // cannot make variable arity",
                "  #480 = Utf8               cannot make variable arity",
                "  #481 = Methodref          #469.#482     // java/lang/invoke/MemberName.makeAccessException:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/IllegalAccessException;",
                "  #482 = NameAndType        #483:#484     // makeAccessException:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/IllegalAccessException;",
                "  #483 = Utf8               makeAccessException",
                "  #484 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/IllegalAccessException;",
                "  #485 = Methodref          #4.#486       // java/lang/invoke/MethodHandle.viewAsTypeChecks:(Ljava/lang/invoke/MethodType;Z)Z",
                "  #486 = NameAndType        #487:#488     // viewAsTypeChecks:(Ljava/lang/invoke/MethodType;Z)Z",
                "  #487 = Utf8               viewAsTypeChecks",
                "  #488 = Utf8               (Ljava/lang/invoke/MethodType;Z)Z",
                "  #489 = Methodref          #4.#490       // java/lang/invoke/MethodHandle.copyWith:(Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;)Ljava/lang/invoke/MethodHandle;",
                "  #490 = NameAndType        #214:#491     // copyWith:(Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;)Ljava/lang/invoke/MethodHandle;",
                "  #491 = Utf8               (Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;)Ljava/lang/invoke/MethodHandle;",
                "  #492 = Methodref          #21.#493      // java/lang/invoke/MethodType.isViewableAs:(Ljava/lang/invoke/MethodType;Z)Z",
                "  #493 = NameAndType        #494:#488     // isViewableAs:(Ljava/lang/invoke/MethodType;Z)Z",
                "  #494 = Utf8               isViewableAs",
                "  #495 = Class              #496          // java/lang/constant/Constable",
                "  #496 = Utf8               java/lang/constant/Constable",
                "  #497 = Methodref          #498.#499     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;",
                "  #498 = Class              #500          // java/util/Arrays",
                "  #499 = NameAndType        #501:#502     // asList:([Ljava/lang/Object;)Ljava/util/List;",
                "  #500 = Utf8               java/util/Arrays",
                "  #501 = Utf8               asList",
                "  #502 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;",
                "  #503 = Methodref          #267.#97      // java/lang/AssertionError.\"<init>\":(Ljava/lang/Object;)V",
                "  #504 = Fieldref           #505.#506     // java/lang/invoke/MethodHandleImpl$Intrinsic.NONE:Ljava/lang/invoke/MethodHandleImpl$Intrinsic;",
                "  #505 = Class              #507          // java/lang/invoke/MethodHandleImpl$Intrinsic",
                "  #506 = NameAndType        #508:#509     // NONE:Ljava/lang/invoke/MethodHandleImpl$Intrinsic;",
                "  #507 = Utf8               java/lang/invoke/MethodHandleImpl$Intrinsic",
                "  #508 = Utf8               NONE",
                "  #509 = Utf8               Ljava/lang/invoke/MethodHandleImpl$Intrinsic;",
                "  #510 = Methodref          #126.#511     // java/lang/invoke/MethodHandleImpl.makeWrappedMember:(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MemberName;Z)Ljava/lang/invoke/MethodHandle;",
                "  #511 = NameAndType        #512:#513     // makeWrappedMember:(Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MemberName;Z)Ljava/lang/invoke/MethodHandle;",
                "  #512 = Utf8               makeWrappedMember",
                "  #513 = Utf8               (Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MemberName;Z)Ljava/lang/invoke/MethodHandle;",
                "  #514 = Methodref          #4.#515       // java/lang/invoke/MethodHandle.internalMemberName:()Ljava/lang/invoke/MemberName;",
                "  #515 = NameAndType        #516:#517     // internalMemberName:()Ljava/lang/invoke/MemberName;",
                "  #516 = Utf8               internalMemberName",
                "  #517 = Utf8               ()Ljava/lang/invoke/MemberName;",
                "  #518 = String             #519          //",
                "  #519 = Utf8",
                "  #520 = String             #521          //",
                "  #521 = Utf8",
                "  #522 = Methodref          #523.#524     // java/lang/String.repeat:(I)Ljava/lang/String;",
                "  #523 = Class              #525          // java/lang/String",
                "  #524 = NameAndType        #526:#461     // repeat:(I)Ljava/lang/String;",
                "  #525 = Utf8               java/lang/String",
                "  #526 = Utf8               repeat",
                "  #527 = Fieldref           #23.#528      // java/lang/invoke/LambdaForm.customized:Ljava/lang/invoke/MethodHandle;",
                "  #528 = NameAndType        #529:#81      // customized:Ljava/lang/invoke/MethodHandle;",
                "  #529 = Utf8               customized",
                "  #530 = Fieldref           #4.#531       // java/lang/invoke/MethodHandle.customizationCount:B",
                "  #531 = NameAndType        #532:#533     // customizationCount:B",
                "  #532 = Utf8               customizationCount",
                "  #533 = Utf8               B",
                "  #534 = Fieldref           #223.#535     // java/lang/invoke/MethodHandleStatics.CUSTOMIZE_THRESHOLD:I",
                "  #535 = NameAndType        #536:#537     // CUSTOMIZE_THRESHOLD:I",
                "  #536 = Utf8               CUSTOMIZE_THRESHOLD",
                "  #537 = Utf8               I",
                "  #538 = Methodref          #4.#539       // java/lang/invoke/MethodHandle.customize:()V",
                "  #539 = NameAndType        #540:#14      // customize:()V",
                "  #540 = Utf8               customize",
                "  #541 = Class              #542          // java/lang/invoke/MethodHandle$1",
                "  #542 = Utf8               java/lang/invoke/MethodHandle$1",
                "  #543 = Methodref          #541.#544     // java/lang/invoke/MethodHandle$1.\"<init>\":(Ljava/lang/invoke/MethodHandle;)V",
                "  #544 = NameAndType        #13:#545      // \"<init>\":(Ljava/lang/invoke/MethodHandle;)V",
                "  #545 = Utf8               (Ljava/lang/invoke/MethodHandle;)V",
                "  #546 = Methodref          #4.#547       // java/lang/invoke/MethodHandle.updateForm:(Ljava/util/function/Function;)V",
                "  #547 = NameAndType        #548:#549     // updateForm:(Ljava/util/function/Function;)V",
                "  #548 = Utf8               updateForm",
                "  #549 = Utf8               (Ljava/util/function/Function;)V",
                "  #550 = Fieldref           #223.#551     // java/lang/invoke/MethodHandleStatics.UNSAFE:Ljdk/internal/misc/Unsafe;",
                "  #551 = NameAndType        #552:#553     // UNSAFE:Ljdk/internal/misc/Unsafe;",
                "  #552 = Utf8               UNSAFE",
                "  #553 = Utf8               Ljdk/internal/misc/Unsafe;",
                "  #554 = Fieldref           #4.#555       // java/lang/invoke/MethodHandle.UPDATE_OFFSET:J",
                "  #555 = NameAndType        #556:#557     // UPDATE_OFFSET:J",
                "  #556 = Utf8               UPDATE_OFFSET",
                "  #557 = Utf8               J",
                "  #558 = Methodref          #559.#560     // jdk/internal/misc/Unsafe.compareAndSetBoolean:(Ljava/lang/Object;JZZ)Z",
                "  #559 = Class              #561          // jdk/internal/misc/Unsafe",
                "  #560 = NameAndType        #562:#563     // compareAndSetBoolean:(Ljava/lang/Object;JZZ)Z",
                "  #561 = Utf8               jdk/internal/misc/Unsafe",
                "  #562 = Utf8               compareAndSetBoolean",
                "  #563 = Utf8               (Ljava/lang/Object;JZZ)Z",
                "  #564 = InterfaceMethodref #565.#566     // java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #565 = Class              #567          // java/util/function/Function",
                "  #566 = NameAndType        #568:#20      // apply:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #567 = Utf8               java/util/function/Function",
                "  #568 = Utf8               apply",
                "  #569 = Fieldref           #4.#570       // java/lang/invoke/MethodHandle.FORM_OFFSET:J",
                "  #570 = NameAndType        #571:#557     // FORM_OFFSET:J",
                "  #571 = Utf8               FORM_OFFSET",
                "  #572 = Methodref          #559.#573     // jdk/internal/misc/Unsafe.putReference:(Ljava/lang/Object;JLjava/lang/Object;)V",
                "  #573 = NameAndType        #574:#575     // putReference:(Ljava/lang/Object;JLjava/lang/Object;)V",
                "  #574 = Utf8               putReference",
                "  #575 = Utf8               (Ljava/lang/Object;JLjava/lang/Object;)V",
                "  #576 = Methodref          #559.#577     // jdk/internal/misc/Unsafe.fullFence:()V",
                "  #577 = NameAndType        #578:#14      // fullFence:()V",
                "  #578 = Utf8               fullFence",
                "  #579 = Fieldref           #4.#580       // java/lang/invoke/MethodHandle.updateInProgress:Z",
                "  #580 = NameAndType        #581:#266     // updateInProgress:Z",
                "  #581 = Utf8               updateInProgress",
                "  #582 = Methodref          #144.#583     // java/lang/Class.desiredAssertionStatus:()Z",
                "  #583 = NameAndType        #584:#284     // desiredAssertionStatus:()Z",
                "  #584 = Utf8               desiredAssertionStatus",
                "  #585 = String             #31           // form",
                "  #586 = Methodref          #559.#587     // jdk/internal/misc/Unsafe.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J",
                "  #587 = NameAndType        #588:#589     // objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J",
                "  #588 = Utf8               objectFieldOffset",
                "  #589 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)J",
                "  #590 = String             #581          // updateInProgress",
                "  #591 = Utf8               Signature",
                "  #592 = Utf8               Ljava/lang/ref/SoftReference<Ljava/lang/invoke/MethodHandle;>;",
                "  #593 = Utf8               Code",
                "  #594 = Utf8               LineNumberTable",
                "  #595 = Utf8               LocalVariableTable",
                "  #596 = Utf8               this",
                "  #597 = Utf8               (Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;)V",
                "  #598 = Utf8               Exceptions",
                "  #599 = Class              #600          // java/lang/Throwable",
                "  #600 = Utf8               java/lang/Throwable",
                "  #601 = Utf8               RuntimeVisibleAnnotations",
                "  #602 = Utf8               Ljdk/internal/vm/annotation/IntrinsicCandidate;",
                "  #603 = Utf8               Ljava/lang/invoke/MethodHandle$PolymorphicSignature;",
                "  #604 = Utf8               invoke",
                "  #605 = Utf8               invokeBasic",
                "  #606 = Utf8               linkToVirtual",
                "  #607 = Utf8               linkToStatic",
                "  #608 = Utf8               linkToSpecial",
                "  #609 = Utf8               linkToInterface",
                "  #610 = Utf8               linkToNative",
                "  #611 = Utf8               arguments",
                "  #612 = Utf8               [Ljava/lang/Object;",
                "  #613 = Utf8               invocationType",
                "  #614 = Utf8               StackMapTable",
                "  #615 = Utf8               (Ljava/util/List;)Ljava/lang/Object;",
                "  #616 = Utf8               Ljava/util/List;",
                "  #617 = Utf8               LocalVariableTypeTable",
                "  #618 = Utf8               Ljava/util/List<*>;",
                "  #619 = Utf8               (Ljava/util/List<*>;)Ljava/lang/Object;",
                "  #620 = Utf8               newType",
                "  #621 = Utf8               at",
                "  #622 = Utf8               atc",
                "  #623 = Utf8               softCache",
                "  #624 = Utf8               loader",
                "  #625 = Utf8               Ljava/lang/ClassLoader;",
                "  #626 = Utf8               ploader",
                "  #627 = Utf8               ptype",
                "  #628 = Utf8               mt",
                "  #629 = Utf8               Ljava/lang/Class<*>;",
                "  #630 = Class              #631          // \"[Ljava/lang/Class;\"",
                "  #631 = Utf8               [Ljava/lang/Class;",
                "  #632 = Utf8               cls",
                "  #633 = Utf8               defLoader",
                "  #634 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/ClassLoader;)Z",
                "  #635 = Utf8               ancestor",
                "  #636 = Utf8               descendant",
                "  #637 = Utf8               arrayType",
                "  #638 = Utf8               arrayLength",
                "  #639 = Utf8               (Ljava/lang/Class<*>;I)Ljava/lang/invoke/MethodHandle;",
                "  #640 = Utf8               spreadArgPos",
                "  #641 = Utf8               postSpreadType",
                "  #642 = Utf8               afterSpread",
                "  #643 = Utf8               mh",
                "  #644 = Utf8               Ljava/lang/invoke/BoundMethodHandle;",
                "  #645 = Utf8               lform",
                "  #646 = Utf8               preSpreadType",
                "  #647 = Utf8               (ILjava/lang/Class<*>;I)Ljava/lang/invoke/MethodHandle;",
                "  #648 = Utf8               i",
                "  #649 = Utf8               pos",
                "  #650 = Utf8               nargs",
                "  #651 = Utf8               arrayElement",
                "  #652 = Utf8               mtype",
                "  #653 = Utf8               match",
                "  #654 = Utf8               fail",
                "  #655 = Utf8               needType",
                "  #656 = Utf8               (Ljava/lang/Class<*>;II)Ljava/lang/invoke/MethodType;",
                "  #657 = Utf8               (Ljava/lang/Class<*>;I)V",
                "  #658 = Utf8               makeVarargs",
                "  #659 = Utf8               collectArgPos",
                "  #660 = Utf8               resultType",
                "  #661 = Utf8               collector",
                "  #662 = Utf8               param",
                "  #663 = Utf8               (Ljava/lang/Class<*>;II)Z",
                "  #664 = Utf8               lastMatch",
                "  #665 = Utf8               (Ljava/lang/Class<*>;)Ljava/lang/invoke/MethodHandle;",
                "  #666 = Utf8               asFixedArity",
                "  #667 = Utf8               ()Ljava/lang/invoke/MethodHandle;",
                "  #668 = Utf8               bindTo",
                "  #669 = Utf8               (Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;",
                "  #670 = Utf8               x",
                "  #671 = Utf8               Ljava/lang/Object;",
                "  #672 = Utf8               info",
                "  #673 = Utf8               Ljava/lang/invoke/MethodHandleInfo;",
                "  #674 = Utf8               owner",
                "  #675 = Utf8               Ljava/lang/constant/ClassDesc;",
                "  #676 = Utf8               name",
                "  #677 = Utf8               Ljava/lang/String;",
                "  #678 = Utf8               Ljava/lang/constant/MethodTypeDesc;",
                "  #679 = Utf8               e",
                "  #680 = Utf8               Ljava/lang/Exception;",
                "  #681 = Utf8               ()Ljava/util/Optional<Ljava/lang/constant/MethodHandleDesc;>;",
                "  #682 = Utf8               indentLevel",
                "  #683 = Utf8               value",
                "  #684 = Utf8               setVarargs",
                "  #685 = Utf8               (Ljava/lang/invoke/MemberName;)Ljava/lang/invoke/MethodHandle;",
                "  #686 = Utf8               ex",
                "  #687 = Utf8               Ljava/lang/IllegalArgumentException;",
                "  #688 = Utf8               member",
                "  #689 = Utf8               Ljava/lang/invoke/MemberName;",
                "  #690 = Class              #691          // java/lang/IllegalAccessException",
                "  #691 = Utf8               java/lang/IllegalAccessException",
                "  #692 = Utf8               viewAsType",
                "  #693 = Utf8               (Ljava/lang/invoke/MethodType;Z)Ljava/lang/invoke/MethodHandle;",
                "  #694 = Utf8               strict",
                "  #695 = Utf8               internalCallerClass",
                "  #696 = Utf8               ()Ljava/lang/Class<*>;",
                "  #697 = Utf8               intrinsicName",
                "  #698 = Utf8               ()Ljava/lang/invoke/MethodHandleImpl$Intrinsic;",
                "  #699 = Utf8               intrinsicData",
                "  #700 = Utf8               withInternalMemberName",
                "  #701 = Utf8               (Ljava/lang/invoke/MemberName;Z)Ljava/lang/invoke/MethodHandle;",
                "  #702 = Utf8               result",
                "  #703 = Utf8               isInvokeSpecial",
                "  #704 = Utf8               isCrackable",
                "  #705 = Utf8               internalValues",
                "  #706 = Utf8               debugPrefix",
                "  #707 = Utf8               maybeCustomize",
                "  #708 = Utf8               count",
                "  #709 = Utf8               oldForm",
                "  #710 = Utf8               newForm",
                "  #711 = Utf8               updater",
                "  #712 = Utf8               Ljava/util/function/Function;",
                "  #713 = Utf8               Ljava/util/function/Function<Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/LambdaForm;>;",
                "  #714 = Utf8               (Ljava/util/function/Function<Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/LambdaForm;>;)V",
                "  #715 = Utf8               <clinit>",
                "  #716 = Utf8               SourceFile",
                "  #717 = Utf8               MethodHandle.java",
                "  #718 = Utf8               NestMembers",
                "  #719 = Class              #720          // java/lang/invoke/MethodHandle$PolymorphicSignature",
                "  #720 = Utf8               java/lang/invoke/MethodHandle$PolymorphicSignature",
                "  #721 = Utf8               PermittedSubclasses",
                "  #722 = Class              #723          // java/lang/invoke/NativeMethodHandle",
                "  #723 = Utf8               java/lang/invoke/NativeMethodHandle",
                "  #724 = Class              #725          // java/lang/invoke/DirectMethodHandle",
                "  #725 = Utf8               java/lang/invoke/DirectMethodHandle",
                "  #726 = Class              #727          // java/lang/invoke/DelegatingMethodHandle",
                "  #727 = Utf8               java/lang/invoke/DelegatingMethodHandle",
                "  #728 = Utf8               InnerClasses",
                "  #729 = Class              #730          // java/lang/invoke/MethodHandles",
                "  #730 = Utf8               java/lang/invoke/MethodHandles",
                "  #731 = Utf8               Lookup",
                "  #732 = Class              #733          // java/lang/constant/DirectMethodHandleDesc",
                "  #733 = Utf8               java/lang/constant/DirectMethodHandleDesc",
                "  #734 = Utf8               Kind",
                "  #735 = Utf8               Intrinsic",
                "  #736 = Utf8               PolymorphicSignature"
        );
    }
}
