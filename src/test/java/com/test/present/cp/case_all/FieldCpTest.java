package com.test.present.cp.case_all;

import com.test.present.cp.ConstantPoolPresenterTestBase;
import org.junit.Before;
import org.junit.Test;

import java.io.IOException;
import java.lang.reflect.Field;
import java.util.List;

public class FieldCpTest extends ConstantPoolPresenterTestBase {

    @Before
    public void prepare() throws IOException {
        buildRealLines(Field.class);
    }

    @Test
    public void test() {
        expectedLines = List.of(
                "    #1 = Fieldref           #2.#3         // java/lang/reflect/Field.signature:Ljava/lang/String;",
                "    #2 = Class              #4            // java/lang/reflect/Field",
                "    #3 = NameAndType        #5:#6         // signature:Ljava/lang/String;",
                "    #4 = Utf8               java/lang/reflect/Field",
                "    #5 = Utf8               signature",
                "    #6 = Utf8               Ljava/lang/String;",
                "    #7 = Methodref          #2.#8         // java/lang/reflect/Field.getDeclaringClass:()Ljava/lang/Class;",
                "    #8 = NameAndType        #9:#10        // getDeclaringClass:()Ljava/lang/Class;",
                "    #9 = Utf8               getDeclaringClass",
                "   #10 = Utf8               ()Ljava/lang/Class;",
                "   #11 = Methodref          #12.#13       // sun/reflect/generics/scope/ClassScope.make:(Ljava/lang/Class;)Lsun/reflect/generics/scope/ClassScope;",
                "   #12 = Class              #14           // sun/reflect/generics/scope/ClassScope",
                "   #13 = NameAndType        #15:#16       // make:(Ljava/lang/Class;)Lsun/reflect/generics/scope/ClassScope;",
                "   #14 = Utf8               sun/reflect/generics/scope/ClassScope",
                "   #15 = Utf8               make",
                "   #16 = Utf8               (Ljava/lang/Class;)Lsun/reflect/generics/scope/ClassScope;",
                "   #17 = Methodref          #18.#19       // sun/reflect/generics/factory/CoreReflectionFactory.make:(Ljava/lang/reflect/GenericDeclaration;Lsun/reflect/generics/scope/Scope;)Lsun/reflect/generics/factory/CoreReflectionFactory;",
                "   #18 = Class              #20           // sun/reflect/generics/factory/CoreReflectionFactory",
                "   #19 = NameAndType        #15:#21       // make:(Ljava/lang/reflect/GenericDeclaration;Lsun/reflect/generics/scope/Scope;)Lsun/reflect/generics/factory/CoreReflectionFactory;",
                "   #20 = Utf8               sun/reflect/generics/factory/CoreReflectionFactory",
                "   #21 = Utf8               (Ljava/lang/reflect/GenericDeclaration;Lsun/reflect/generics/scope/Scope;)Lsun/reflect/generics/factory/CoreReflectionFactory;",
                "   #22 = Fieldref           #2.#23        // java/lang/reflect/Field.genericInfo:Lsun/reflect/generics/repository/FieldRepository;",
                "   #23 = NameAndType        #24:#25       // genericInfo:Lsun/reflect/generics/repository/FieldRepository;",
                "   #24 = Utf8               genericInfo",
                "   #25 = Utf8               Lsun/reflect/generics/repository/FieldRepository;",
                "   #26 = Methodref          #2.#27        // java/lang/reflect/Field.getGenericSignature:()Ljava/lang/String;",
                "   #27 = NameAndType        #28:#29       // getGenericSignature:()Ljava/lang/String;",
                "   #28 = Utf8               getGenericSignature",
                "   #29 = Utf8               ()Ljava/lang/String;",
                "   #30 = Methodref          #2.#31        // java/lang/reflect/Field.getFactory:()Lsun/reflect/generics/factory/GenericsFactory;",
                "   #31 = NameAndType        #32:#33       // getFactory:()Lsun/reflect/generics/factory/GenericsFactory;",
                "   #32 = Utf8               getFactory",
                "   #33 = Utf8               ()Lsun/reflect/generics/factory/GenericsFactory;",
                "   #34 = Methodref          #35.#36       // sun/reflect/generics/repository/FieldRepository.make:(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/repository/FieldRepository;",
                "   #35 = Class              #37           // sun/reflect/generics/repository/FieldRepository",
                "   #36 = NameAndType        #15:#38       // make:(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/repository/FieldRepository;",
                "   #37 = Utf8               sun/reflect/generics/repository/FieldRepository",
                "   #38 = Utf8               (Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/repository/FieldRepository;",
                "   #39 = Methodref          #40.#41       // java/lang/reflect/AccessibleObject.\"<init>\":()V",
                "   #40 = Class              #42           // java/lang/reflect/AccessibleObject",
                "   #41 = NameAndType        #43:#44       // \"<init>\":()V",
                "   #42 = Utf8               java/lang/reflect/AccessibleObject",
                "   #43 = Utf8               <init>",
                "   #44 = Utf8               ()V",
                "   #45 = Fieldref           #2.#46        // java/lang/reflect/Field.clazz:Ljava/lang/Class;",
                "   #46 = NameAndType        #47:#48       // clazz:Ljava/lang/Class;",
                "   #47 = Utf8               clazz",
                "   #48 = Utf8               Ljava/lang/Class;",
                "   #49 = Fieldref           #2.#50        // java/lang/reflect/Field.name:Ljava/lang/String;",
                "   #50 = NameAndType        #51:#6        // name:Ljava/lang/String;",
                "   #51 = Utf8               name",
                "   #52 = Fieldref           #2.#53        // java/lang/reflect/Field.type:Ljava/lang/Class;",
                "   #53 = NameAndType        #54:#48       // type:Ljava/lang/Class;",
                "   #54 = Utf8               type",
                "   #55 = Fieldref           #2.#56        // java/lang/reflect/Field.modifiers:I",
                "   #56 = NameAndType        #57:#58       // modifiers:I",
                "   #57 = Utf8               modifiers",
                "   #58 = Utf8               I",
                "   #59 = Fieldref           #2.#60        // java/lang/reflect/Field.trustedFinal:Z",
                "   #60 = NameAndType        #61:#62       // trustedFinal:Z",
                "   #61 = Utf8               trustedFinal",
                "   #62 = Utf8               Z",
                "   #63 = Fieldref           #2.#64        // java/lang/reflect/Field.slot:I",
                "   #64 = NameAndType        #65:#58       // slot:I",
                "   #65 = Utf8               slot",
                "   #66 = Fieldref           #2.#67        // java/lang/reflect/Field.annotations:[B",
                "   #67 = NameAndType        #68:#69       // annotations:[B",
                "   #68 = Utf8               annotations",
                "   #69 = Utf8               [B",
                "   #70 = Fieldref           #2.#71        // java/lang/reflect/Field.root:Ljava/lang/reflect/Field;",
                "   #71 = NameAndType        #72:#73       // root:Ljava/lang/reflect/Field;",
                "   #72 = Utf8               root",
                "   #73 = Utf8               Ljava/lang/reflect/Field;",
                "   #74 = Class              #75           // java/lang/IllegalArgumentException",
                "   #75 = Utf8               java/lang/IllegalArgumentException",
                "   #76 = String             #77           // Can not copy a non-root Field",
                "   #77 = Utf8               Can not copy a non-root Field",
                "   #78 = Methodref          #74.#79       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V",
                "   #79 = NameAndType        #43:#80       // \"<init>\":(Ljava/lang/String;)V",
                "   #80 = Utf8               (Ljava/lang/String;)V",
                "   #81 = Methodref          #2.#82        // java/lang/reflect/Field.\"<init>\":(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;IZILjava/lang/String;[B)V",
                "   #82 = NameAndType        #43:#83       // \"<init>\":(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;IZILjava/lang/String;[B)V",
                "   #83 = Utf8               (Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;IZILjava/lang/String;[B)V",
                "   #84 = Fieldref           #2.#85        // java/lang/reflect/Field.fieldAccessor:Ljdk/internal/reflect/FieldAccessor;",
                "   #85 = NameAndType        #86:#87       // fieldAccessor:Ljdk/internal/reflect/FieldAccessor;",
                "   #86 = Utf8               fieldAccessor",
                "   #87 = Utf8               Ljdk/internal/reflect/FieldAccessor;",
                "   #88 = Fieldref           #2.#89        // java/lang/reflect/Field.overrideFieldAccessor:Ljdk/internal/reflect/FieldAccessor;",
                "   #89 = NameAndType        #90:#87       // overrideFieldAccessor:Ljdk/internal/reflect/FieldAccessor;",
                "   #90 = Utf8               overrideFieldAccessor",
                "   #91 = Methodref          #40.#92       // java/lang/reflect/AccessibleObject.checkPermission:()V",
                "   #92 = NameAndType        #93:#44       // checkPermission:()V",
                "   #93 = Utf8               checkPermission",
                "   #94 = Methodref          #95.#96       // jdk/internal/reflect/Reflection.getCallerClass:()Ljava/lang/Class;",
                "   #95 = Class              #97           // jdk/internal/reflect/Reflection",
                "   #96 = NameAndType        #98:#10       // getCallerClass:()Ljava/lang/Class;",
                "   #97 = Utf8               jdk/internal/reflect/Reflection",
                "   #98 = Utf8               getCallerClass",
                "   #99 = Methodref          #2.#100       // java/lang/reflect/Field.checkCanSetAccessible:(Ljava/lang/Class;)V",
                "  #100 = NameAndType        #101:#102     // checkCanSetAccessible:(Ljava/lang/Class;)V",
                "  #101 = Utf8               checkCanSetAccessible",
                "  #102 = Utf8               (Ljava/lang/Class;)V",
                "  #103 = Methodref          #2.#104       // java/lang/reflect/Field.setAccessible0:(Z)Z",
                "  #104 = NameAndType        #105:#106     // setAccessible0:(Z)Z",
                "  #105 = Utf8               setAccessible0",
                "  #106 = Utf8               (Z)Z",
                "  #107 = Methodref          #2.#108       // java/lang/reflect/Field.checkCanSetAccessible:(Ljava/lang/Class;Ljava/lang/Class;)V",
                "  #108 = NameAndType        #101:#109     // checkCanSetAccessible:(Ljava/lang/Class;Ljava/lang/Class;)V",
                "  #109 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;)V",
                "  #110 = Methodref          #2.#111       // java/lang/reflect/Field.getModifiers:()I",
                "  #111 = NameAndType        #112:#113     // getModifiers:()I",
                "  #112 = Utf8               getModifiers",
                "  #113 = Utf8               ()I",
                "  #114 = Fieldref           #115.#116     // java/lang/reflect/AccessFlag$Location.FIELD:Ljava/lang/reflect/AccessFlag$Location;",
                "  #115 = Class              #117          // java/lang/reflect/AccessFlag$Location",
                "  #116 = NameAndType        #118:#119     // FIELD:Ljava/lang/reflect/AccessFlag$Location;",
                "  #117 = Utf8               java/lang/reflect/AccessFlag$Location",
                "  #118 = Utf8               FIELD",
                "  #119 = Utf8               Ljava/lang/reflect/AccessFlag$Location;",
                "  #120 = Methodref          #121.#122     // java/lang/reflect/AccessFlag.maskToAccessFlags:(ILjava/lang/reflect/AccessFlag$Location;)Ljava/util/Set;",
                "  #121 = Class              #123          // java/lang/reflect/AccessFlag",
                "  #122 = NameAndType        #124:#125     // maskToAccessFlags:(ILjava/lang/reflect/AccessFlag$Location;)Ljava/util/Set;",
                "  #123 = Utf8               java/lang/reflect/AccessFlag",
                "  #124 = Utf8               maskToAccessFlags",
                "  #125 = Utf8               (ILjava/lang/reflect/AccessFlag$Location;)Ljava/util/Set;",
                "  #126 = Class              #127          // java/lang/reflect/Modifier",
                "  #127 = Utf8               java/lang/reflect/Modifier",
                "  #128 = Methodref          #126.#129     // java/lang/reflect/Modifier.isSynthetic:(I)Z",
                "  #129 = NameAndType        #130:#131     // isSynthetic:(I)Z",
                "  #130 = Utf8               isSynthetic",
                "  #131 = Utf8               (I)Z",
                "  #132 = Methodref          #2.#133       // java/lang/reflect/Field.getGenericInfo:()Lsun/reflect/generics/repository/FieldRepository;",
                "  #133 = NameAndType        #134:#135     // getGenericInfo:()Lsun/reflect/generics/repository/FieldRepository;",
                "  #134 = Utf8               getGenericInfo",
                "  #135 = Utf8               ()Lsun/reflect/generics/repository/FieldRepository;",
                "  #136 = Methodref          #35.#137      // sun/reflect/generics/repository/FieldRepository.getGenericType:()Ljava/lang/reflect/Type;",
                "  #137 = NameAndType        #138:#139     // getGenericType:()Ljava/lang/reflect/Type;",
                "  #138 = Utf8               getGenericType",
                "  #139 = Utf8               ()Ljava/lang/reflect/Type;",
                "  #140 = Methodref          #2.#141       // java/lang/reflect/Field.getType:()Ljava/lang/Class;",
                "  #141 = NameAndType        #142:#10      // getType:()Ljava/lang/Class;",
                "  #142 = Utf8               getType",
                "  #143 = Methodref          #2.#144       // java/lang/reflect/Field.getName:()Ljava/lang/String;",
                "  #144 = NameAndType        #145:#29      // getName:()Ljava/lang/String;",
                "  #145 = Utf8               getName",
                "  #146 = Methodref          #147.#144     // java/lang/Class.getName:()Ljava/lang/String;",
                "  #147 = Class              #148          // java/lang/Class",
                "  #148 = Utf8               java/lang/Class",
                "  #149 = Methodref          #150.#151     // java/lang/String.hashCode:()I",
                "  #150 = Class              #152          // java/lang/String",
                "  #151 = NameAndType        #153:#113     // hashCode:()I",
                "  #152 = Utf8               java/lang/String",
                "  #153 = Utf8               hashCode",
                "  #154 = Class              #155          // java/lang/StringBuilder",
                "  #155 = Utf8               java/lang/StringBuilder",
                "  #156 = Methodref          #154.#41      // java/lang/StringBuilder.\"<init>\":()V",
                "  #157 = String             #158          //",
                "  #158 = Utf8",
                "  #159 = Methodref          #126.#160     // java/lang/reflect/Modifier.toString:(I)Ljava/lang/String;",
                "  #160 = NameAndType        #161:#162     // toString:(I)Ljava/lang/String;",
                "  #161 = Utf8               toString",
                "  #162 = Utf8               (I)Ljava/lang/String;",
                "  #163 = Methodref          #154.#164     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "  #164 = NameAndType        #165:#166     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "  #165 = Utf8               append",
                "  #166 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "  #167 = String             #168          //",
                "  #168 = Utf8",
                "  #169 = Methodref          #154.#170     // java/lang/StringBuilder.toString:()Ljava/lang/String;",
                "  #170 = NameAndType        #161:#29      // toString:()Ljava/lang/String;",
                "  #171 = Methodref          #147.#172     // java/lang/Class.getTypeName:()Ljava/lang/String;",
                "  #172 = NameAndType        #173:#29      // getTypeName:()Ljava/lang/String;",
                "  #173 = Utf8               getTypeName",
                "  #174 = String             #175          // .",
                "  #175 = Utf8               .",
                "  #176 = String             #177          // field",
                "  #177 = Utf8               field",
                "  #178 = Methodref          #2.#137       // java/lang/reflect/Field.getGenericType:()Ljava/lang/reflect/Type;",
                "  #179 = InterfaceMethodref #180.#172     // java/lang/reflect/Type.getTypeName:()Ljava/lang/String;",
                "  #180 = Class              #181          // java/lang/reflect/Type",
                "  #181 = Utf8               java/lang/reflect/Type",
                "  #182 = Fieldref           #2.#183       // java/lang/reflect/Field.override:Z",
                "  #183 = NameAndType        #184:#62      // override:Z",
                "  #184 = Utf8               override",
                "  #185 = Methodref          #2.#186       // java/lang/reflect/Field.checkAccess:(Ljava/lang/Class;Ljava/lang/Object;)V",
                "  #186 = NameAndType        #187:#188     // checkAccess:(Ljava/lang/Class;Ljava/lang/Object;)V",
                "  #187 = Utf8               checkAccess",
                "  #188 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;)V",
                "  #189 = Methodref          #2.#190       // java/lang/reflect/Field.getFieldAccessor:()Ljdk/internal/reflect/FieldAccessor;",
                "  #190 = NameAndType        #191:#192     // getFieldAccessor:()Ljdk/internal/reflect/FieldAccessor;",
                "  #191 = Utf8               getFieldAccessor",
                "  #192 = Utf8               ()Ljdk/internal/reflect/FieldAccessor;",
                "  #193 = InterfaceMethodref #194.#195     // jdk/internal/reflect/FieldAccessor.get:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #194 = Class              #196          // jdk/internal/reflect/FieldAccessor",
                "  #195 = NameAndType        #197:#198     // get:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #196 = Utf8               jdk/internal/reflect/FieldAccessor",
                "  #197 = Utf8               get",
                "  #198 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;",
                "  #199 = Methodref          #2.#200       // java/lang/reflect/Field.getOverrideFieldAccessor:()Ljdk/internal/reflect/FieldAccessor;",
                "  #200 = NameAndType        #201:#192     // getOverrideFieldAccessor:()Ljdk/internal/reflect/FieldAccessor;",
                "  #201 = Utf8               getOverrideFieldAccessor",
                "  #202 = InterfaceMethodref #194.#203     // jdk/internal/reflect/FieldAccessor.getBoolean:(Ljava/lang/Object;)Z",
                "  #203 = NameAndType        #204:#205     // getBoolean:(Ljava/lang/Object;)Z",
                "  #204 = Utf8               getBoolean",
                "  #205 = Utf8               (Ljava/lang/Object;)Z",
                "  #206 = InterfaceMethodref #194.#207     // jdk/internal/reflect/FieldAccessor.getByte:(Ljava/lang/Object;)B",
                "  #207 = NameAndType        #208:#209     // getByte:(Ljava/lang/Object;)B",
                "  #208 = Utf8               getByte",
                "  #209 = Utf8               (Ljava/lang/Object;)B",
                "  #210 = InterfaceMethodref #194.#211     // jdk/internal/reflect/FieldAccessor.getChar:(Ljava/lang/Object;)C",
                "  #211 = NameAndType        #212:#213     // getChar:(Ljava/lang/Object;)C",
                "  #212 = Utf8               getChar",
                "  #213 = Utf8               (Ljava/lang/Object;)C",
                "  #214 = InterfaceMethodref #194.#215     // jdk/internal/reflect/FieldAccessor.getShort:(Ljava/lang/Object;)S",
                "  #215 = NameAndType        #216:#217     // getShort:(Ljava/lang/Object;)S",
                "  #216 = Utf8               getShort",
                "  #217 = Utf8               (Ljava/lang/Object;)S",
                "  #218 = InterfaceMethodref #194.#219     // jdk/internal/reflect/FieldAccessor.getInt:(Ljava/lang/Object;)I",
                "  #219 = NameAndType        #220:#221     // getInt:(Ljava/lang/Object;)I",
                "  #220 = Utf8               getInt",
                "  #221 = Utf8               (Ljava/lang/Object;)I",
                "  #222 = InterfaceMethodref #194.#223     // jdk/internal/reflect/FieldAccessor.getLong:(Ljava/lang/Object;)J",
                "  #223 = NameAndType        #224:#225     // getLong:(Ljava/lang/Object;)J",
                "  #224 = Utf8               getLong",
                "  #225 = Utf8               (Ljava/lang/Object;)J",
                "  #226 = InterfaceMethodref #194.#227     // jdk/internal/reflect/FieldAccessor.getFloat:(Ljava/lang/Object;)F",
                "  #227 = NameAndType        #228:#229     // getFloat:(Ljava/lang/Object;)F",
                "  #228 = Utf8               getFloat",
                "  #229 = Utf8               (Ljava/lang/Object;)F",
                "  #230 = InterfaceMethodref #194.#231     // jdk/internal/reflect/FieldAccessor.getDouble:(Ljava/lang/Object;)D",
                "  #231 = NameAndType        #232:#233     // getDouble:(Ljava/lang/Object;)D",
                "  #232 = Utf8               getDouble",
                "  #233 = Utf8               (Ljava/lang/Object;)D",
                "  #234 = InterfaceMethodref #194.#235     // jdk/internal/reflect/FieldAccessor.set:(Ljava/lang/Object;Ljava/lang/Object;)V",
                "  #235 = NameAndType        #236:#237     // set:(Ljava/lang/Object;Ljava/lang/Object;)V",
                "  #236 = Utf8               set",
                "  #237 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V",
                "  #238 = InterfaceMethodref #194.#239     // jdk/internal/reflect/FieldAccessor.setBoolean:(Ljava/lang/Object;Z)V",
                "  #239 = NameAndType        #240:#241     // setBoolean:(Ljava/lang/Object;Z)V",
                "  #240 = Utf8               setBoolean",
                "  #241 = Utf8               (Ljava/lang/Object;Z)V",
                "  #242 = InterfaceMethodref #194.#243     // jdk/internal/reflect/FieldAccessor.setByte:(Ljava/lang/Object;B)V",
                "  #243 = NameAndType        #244:#245     // setByte:(Ljava/lang/Object;B)V",
                "  #244 = Utf8               setByte",
                "  #245 = Utf8               (Ljava/lang/Object;B)V",
                "  #246 = InterfaceMethodref #194.#247     // jdk/internal/reflect/FieldAccessor.setChar:(Ljava/lang/Object;C)V",
                "  #247 = NameAndType        #248:#249     // setChar:(Ljava/lang/Object;C)V",
                "  #248 = Utf8               setChar",
                "  #249 = Utf8               (Ljava/lang/Object;C)V",
                "  #250 = InterfaceMethodref #194.#251     // jdk/internal/reflect/FieldAccessor.setShort:(Ljava/lang/Object;S)V",
                "  #251 = NameAndType        #252:#253     // setShort:(Ljava/lang/Object;S)V",
                "  #252 = Utf8               setShort",
                "  #253 = Utf8               (Ljava/lang/Object;S)V",
                "  #254 = InterfaceMethodref #194.#255     // jdk/internal/reflect/FieldAccessor.setInt:(Ljava/lang/Object;I)V",
                "  #255 = NameAndType        #256:#257     // setInt:(Ljava/lang/Object;I)V",
                "  #256 = Utf8               setInt",
                "  #257 = Utf8               (Ljava/lang/Object;I)V",
                "  #258 = InterfaceMethodref #194.#259     // jdk/internal/reflect/FieldAccessor.setLong:(Ljava/lang/Object;J)V",
                "  #259 = NameAndType        #260:#261     // setLong:(Ljava/lang/Object;J)V",
                "  #260 = Utf8               setLong",
                "  #261 = Utf8               (Ljava/lang/Object;J)V",
                "  #262 = InterfaceMethodref #194.#263     // jdk/internal/reflect/FieldAccessor.setFloat:(Ljava/lang/Object;F)V",
                "  #263 = NameAndType        #264:#265     // setFloat:(Ljava/lang/Object;F)V",
                "  #264 = Utf8               setFloat",
                "  #265 = Utf8               (Ljava/lang/Object;F)V",
                "  #266 = InterfaceMethodref #194.#267     // jdk/internal/reflect/FieldAccessor.setDouble:(Ljava/lang/Object;D)V",
                "  #267 = NameAndType        #268:#269     // setDouble:(Ljava/lang/Object;D)V",
                "  #268 = Utf8               setDouble",
                "  #269 = Utf8               (Ljava/lang/Object;D)V",
                "  #270 = Methodref          #126.#271     // java/lang/reflect/Modifier.isStatic:(I)Z",
                "  #271 = NameAndType        #272:#131     // isStatic:(I)Z",
                "  #272 = Utf8               isStatic",
                "  #273 = Methodref          #274.#275     // java/lang/Object.getClass:()Ljava/lang/Class;",
                "  #274 = Class              #276          // java/lang/Object",
                "  #275 = NameAndType        #277:#10      // getClass:()Ljava/lang/Class;",
                "  #276 = Utf8               java/lang/Object",
                "  #277 = Utf8               getClass",
                "  #278 = Methodref          #2.#279       // java/lang/reflect/Field.checkAccess:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V",
                "  #279 = NameAndType        #187:#280     // checkAccess:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V",
                "  #280 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V",
                "  #281 = Methodref          #2.#282       // java/lang/reflect/Field.acquireFieldAccessor:()Ljdk/internal/reflect/FieldAccessor;",
                "  #282 = NameAndType        #283:#192     // acquireFieldAccessor:()Ljdk/internal/reflect/FieldAccessor;",
                "  #283 = Utf8               acquireFieldAccessor",
                "  #284 = Methodref          #2.#285       // java/lang/reflect/Field.acquireOverrideFieldAccessor:()Ljdk/internal/reflect/FieldAccessor;",
                "  #285 = NameAndType        #286:#192     // acquireOverrideFieldAccessor:()Ljdk/internal/reflect/FieldAccessor;",
                "  #286 = Utf8               acquireOverrideFieldAccessor",
                "  #287 = Fieldref           #2.#288       // java/lang/reflect/Field.reflectionFactory:Ljdk/internal/reflect/ReflectionFactory;",
                "  #288 = NameAndType        #289:#290     // reflectionFactory:Ljdk/internal/reflect/ReflectionFactory;",
                "  #289 = Utf8               reflectionFactory",
                "  #290 = Utf8               Ljdk/internal/reflect/ReflectionFactory;",
                "  #291 = Methodref          #292.#293     // jdk/internal/reflect/ReflectionFactory.newFieldAccessor:(Ljava/lang/reflect/Field;Z)Ljdk/internal/reflect/FieldAccessor;",
                "  #292 = Class              #294          // jdk/internal/reflect/ReflectionFactory",
                "  #293 = NameAndType        #295:#296     // newFieldAccessor:(Ljava/lang/reflect/Field;Z)Ljdk/internal/reflect/FieldAccessor;",
                "  #294 = Utf8               jdk/internal/reflect/ReflectionFactory",
                "  #295 = Utf8               newFieldAccessor",
                "  #296 = Utf8               (Ljava/lang/reflect/Field;Z)Ljdk/internal/reflect/FieldAccessor;",
                "  #297 = Methodref          #2.#298       // java/lang/reflect/Field.setFieldAccessor:(Ljdk/internal/reflect/FieldAccessor;)V",
                "  #298 = NameAndType        #299:#300     // setFieldAccessor:(Ljdk/internal/reflect/FieldAccessor;)V",
                "  #299 = Utf8               setFieldAccessor",
                "  #300 = Utf8               (Ljdk/internal/reflect/FieldAccessor;)V",
                "  #301 = Methodref          #2.#302       // java/lang/reflect/Field.setOverrideFieldAccessor:(Ljdk/internal/reflect/FieldAccessor;)V",
                "  #302 = NameAndType        #303:#300     // setOverrideFieldAccessor:(Ljdk/internal/reflect/FieldAccessor;)V",
                "  #303 = Utf8               setOverrideFieldAccessor",
                "  #304 = Methodref          #305.#306     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #305 = Class              #307          // java/util/Objects",
                "  #306 = NameAndType        #308:#198     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #307 = Utf8               java/util/Objects",
                "  #308 = Utf8               requireNonNull",
                "  #309 = Methodref          #2.#310       // java/lang/reflect/Field.declaredAnnotations:()Ljava/util/Map;",
                "  #310 = NameAndType        #311:#312     // declaredAnnotations:()Ljava/util/Map;",
                "  #311 = Utf8               declaredAnnotations",
                "  #312 = Utf8               ()Ljava/util/Map;",
                "  #313 = InterfaceMethodref #314.#195     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #314 = Class              #315          // java/util/Map",
                "  #315 = Utf8               java/util/Map",
                "  #316 = Methodref          #147.#317     // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #317 = NameAndType        #318:#198     // cast:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #318 = Utf8               cast",
                "  #319 = Class              #320          // java/lang/annotation/Annotation",
                "  #320 = Utf8               java/lang/annotation/Annotation",
                "  #321 = Methodref          #322.#323     // sun/reflect/annotation/AnnotationSupport.getDirectlyAndIndirectlyPresent:(Ljava/util/Map;Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;",
                "  #322 = Class              #324          // sun/reflect/annotation/AnnotationSupport",
                "  #323 = NameAndType        #325:#326     // getDirectlyAndIndirectlyPresent:(Ljava/util/Map;Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;",
                "  #324 = Utf8               sun/reflect/annotation/AnnotationSupport",
                "  #325 = Utf8               getDirectlyAndIndirectlyPresent",
                "  #326 = Utf8               (Ljava/util/Map;Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;",
                "  #327 = Methodref          #328.#329     // sun/reflect/annotation/AnnotationParser.toArray:(Ljava/util/Map;)[Ljava/lang/annotation/Annotation;",
                "  #328 = Class              #330          // sun/reflect/annotation/AnnotationParser",
                "  #329 = NameAndType        #331:#332     // toArray:(Ljava/util/Map;)[Ljava/lang/annotation/Annotation;",
                "  #330 = Utf8               sun/reflect/annotation/AnnotationParser",
                "  #331 = Utf8               toArray",
                "  #332 = Utf8               (Ljava/util/Map;)[Ljava/lang/annotation/Annotation;",
                "  #333 = Fieldref           #2.#334       // java/lang/reflect/Field.declaredAnnotations:Ljava/util/Map;",
                "  #334 = NameAndType        #311:#335     // declaredAnnotations:Ljava/util/Map;",
                "  #335 = Utf8               Ljava/util/Map;",
                "  #336 = Methodref          #337.#338     // jdk/internal/access/SharedSecrets.getJavaLangAccess:()Ljdk/internal/access/JavaLangAccess;",
                "  #337 = Class              #339          // jdk/internal/access/SharedSecrets",
                "  #338 = NameAndType        #340:#341     // getJavaLangAccess:()Ljdk/internal/access/JavaLangAccess;",
                "  #339 = Utf8               jdk/internal/access/SharedSecrets",
                "  #340 = Utf8               getJavaLangAccess",
                "  #341 = Utf8               ()Ljdk/internal/access/JavaLangAccess;",
                "  #342 = InterfaceMethodref #343.#344     // jdk/internal/access/JavaLangAccess.getConstantPool:(Ljava/lang/Class;)Ljdk/internal/reflect/ConstantPool;",
                "  #343 = Class              #345          // jdk/internal/access/JavaLangAccess",
                "  #344 = NameAndType        #346:#347     // getConstantPool:(Ljava/lang/Class;)Ljdk/internal/reflect/ConstantPool;",
                "  #345 = Utf8               jdk/internal/access/JavaLangAccess",
                "  #346 = Utf8               getConstantPool",
                "  #347 = Utf8               (Ljava/lang/Class;)Ljdk/internal/reflect/ConstantPool;",
                "  #348 = Methodref          #328.#349     // sun/reflect/annotation/AnnotationParser.parseAnnotations:([BLjdk/internal/reflect/ConstantPool;Ljava/lang/Class;)Ljava/util/Map;",
                "  #349 = NameAndType        #350:#351     // parseAnnotations:([BLjdk/internal/reflect/ConstantPool;Ljava/lang/Class;)Ljava/util/Map;",
                "  #350 = Utf8               parseAnnotations",
                "  #351 = Utf8               ([BLjdk/internal/reflect/ConstantPool;Ljava/lang/Class;)Ljava/util/Map;",
                "  #352 = Methodref          #2.#353       // java/lang/reflect/Field.getTypeAnnotationBytes0:()[B",
                "  #353 = NameAndType        #354:#355     // getTypeAnnotationBytes0:()[B",
                "  #354 = Utf8               getTypeAnnotationBytes0",
                "  #355 = Utf8               ()[B",
                "  #356 = Fieldref           #357.#358     // sun/reflect/annotation/TypeAnnotation$TypeAnnotationTarget.FIELD:Lsun/reflect/annotation/TypeAnnotation$TypeAnnotationTarget;",
                "  #357 = Class              #359          // sun/reflect/annotation/TypeAnnotation$TypeAnnotationTarget",
                "  #358 = NameAndType        #118:#360     // FIELD:Lsun/reflect/annotation/TypeAnnotation$TypeAnnotationTarget;",
                "  #359 = Utf8               sun/reflect/annotation/TypeAnnotation$TypeAnnotationTarget",
                "  #360 = Utf8               Lsun/reflect/annotation/TypeAnnotation$TypeAnnotationTarget;",
                "  #361 = Methodref          #362.#363     // sun/reflect/annotation/TypeAnnotationParser.buildAnnotatedType:([BLjdk/internal/reflect/ConstantPool;Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/reflect/Type;Lsun/reflect/annotation/TypeAnnotation$TypeAnnotationTarget;)Ljava/lang/reflect/AnnotatedType;",
                "  #362 = Class              #364          // sun/reflect/annotation/TypeAnnotationParser",
                "  #363 = NameAndType        #365:#366     // buildAnnotatedType:([BLjdk/internal/reflect/ConstantPool;Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/reflect/Type;Lsun/reflect/annotation/TypeAnnotation$TypeAnnotationTarget;)Ljava/lang/reflect/AnnotatedType;",
                "  #364 = Utf8               sun/reflect/annotation/TypeAnnotationParser",
                "  #365 = Utf8               buildAnnotatedType",
                "  #366 = Utf8               ([BLjdk/internal/reflect/ConstantPool;Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/lang/reflect/Type;Lsun/reflect/annotation/TypeAnnotation$TypeAnnotationTarget;)Ljava/lang/reflect/AnnotatedType;",
                "  #367 = Methodref          #2.#368       // java/lang/reflect/Field.getRoot:()Ljava/lang/reflect/Field;",
                "  #368 = NameAndType        #369:#370     // getRoot:()Ljava/lang/reflect/Field;",
                "  #369 = Utf8               getRoot",
                "  #370 = Utf8               ()Ljava/lang/reflect/Field;",
                "  #371 = Class              #372          // java/lang/reflect/Member",
                "  #372 = Utf8               java/lang/reflect/Member",
                "  #373 = Utf8               Signature",
                "  #374 = Utf8               Ljava/lang/Class<*>;",
                "  #375 = Utf8               RuntimeVisibleAnnotations",
                "  #376 = Utf8               Ljdk/internal/vm/annotation/Stable;",
                "  #377 = Utf8               Ljava/util/Map<Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;Ljava/lang/annotation/Annotation;>;",
                "  #378 = Utf8               Code",
                "  #379 = Utf8               LineNumberTable",
                "  #380 = Utf8               LocalVariableTable",
                "  #381 = Utf8               this",
                "  #382 = Utf8               c",
                "  #383 = Utf8               LocalVariableTypeTable",
                "  #384 = Utf8               StackMapTable",
                "  #385 = Utf8               declaringClass",
                "  #386 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/String;Ljava/lang/Class<*>;IZILjava/lang/String;[B)V",
                "  #387 = Utf8               copy",
                "  #388 = Utf8               res",
                "  #389 = Utf8               setAccessible",
                "  #390 = Utf8               (Z)V",
                "  #391 = Utf8               flag",
                "  #392 = Utf8               Ljdk/internal/reflect/CallerSensitive;",
                "  #393 = Utf8               caller",
                "  #394 = Utf8               (Ljava/lang/Class<*>;)V",
                "  #395 = Utf8               ()Ljava/lang/Class<*>;",
                "  #396 = Utf8               accessFlags",
                "  #397 = Utf8               ()Ljava/util/Set;",
                "  #398 = Utf8               ()Ljava/util/Set<Ljava/lang/reflect/AccessFlag;>;",
                "  #399 = Utf8               isEnumConstant",
                "  #400 = Utf8               ()Z",
                "  #401 = Utf8               equals",
                "  #402 = Utf8               other",
                "  #403 = Utf8               obj",
                "  #404 = Utf8               Ljava/lang/Object;",
                "  #405 = Utf8               mod",
                "  #406 = Utf8               toShortString",
                "  #407 = Utf8               toGenericString",
                "  #408 = Utf8               fieldType",
                "  #409 = Utf8               Ljava/lang/reflect/Type;",
                "  #410 = Utf8               Exceptions",
                "  #411 = Class              #412          // java/lang/IllegalAccessException",
                "  #412 = Utf8               java/lang/IllegalAccessException",
                "  #413 = Utf8               Ljdk/internal/vm/annotation/ForceInline;",
                "  #414 = Utf8               value",
                "  #415 = Utf8               z",
                "  #416 = Utf8               b",
                "  #417 = Utf8               B",
                "  #418 = Utf8               C",
                "  #419 = Utf8               s",
                "  #420 = Utf8               S",
                "  #421 = Utf8               i",
                "  #422 = Utf8               l",
                "  #423 = Utf8               J",
                "  #424 = Utf8               f",
                "  #425 = Utf8               F",
                "  #426 = Utf8               d",
                "  #427 = Utf8               D",
                "  #428 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;)V",
                "  #429 = Utf8               a",
                "  #430 = Utf8               tmp",
                "  #431 = Utf8               accessor",
                "  #432 = Utf8               isTrustedFinal",
                "  #433 = Utf8               getAnnotation",
                "  #434 = Utf8               (Ljava/lang/Class;)Ljava/lang/annotation/Annotation;",
                "  #435 = Utf8               annotationClass",
                "  #436 = Utf8               Ljava/lang/Class<TT;>;",
                "  #437 = Utf8               <T::Ljava/lang/annotation/Annotation;>(Ljava/lang/Class<TT;>;)TT;",
                "  #438 = Utf8               getAnnotationsByType",
                "  #439 = Utf8               (Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;",
                "  #440 = Utf8               <T::Ljava/lang/annotation/Annotation;>(Ljava/lang/Class<TT;>;)[TT;",
                "  #441 = Utf8               getDeclaredAnnotations",
                "  #442 = Utf8               ()[Ljava/lang/annotation/Annotation;",
                "  #443 = Utf8               declAnnos",
                "  #444 = Class              #445          // java/lang/Throwable",
                "  #445 = Utf8               java/lang/Throwable",
                "  #446 = Utf8               ()Ljava/util/Map<Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;Ljava/lang/annotation/Annotation;>;",
                "  #447 = Utf8               getAnnotatedType",
                "  #448 = Utf8               ()Ljava/lang/reflect/AnnotatedType;",
                "  #449 = Utf8               ()Ljava/lang/reflect/AccessibleObject;",
                "  #450 = Utf8               SourceFile",
                "  #451 = Utf8               Field.java",
                "  #452 = Utf8               InnerClasses",
                "  #453 = Utf8               Location",
                "  #454 = Class              #455          // sun/reflect/annotation/TypeAnnotation",
                "  #455 = Utf8               sun/reflect/annotation/TypeAnnotation",
                "  #456 = Utf8               TypeAnnotationTarget"
        );
    }
}
