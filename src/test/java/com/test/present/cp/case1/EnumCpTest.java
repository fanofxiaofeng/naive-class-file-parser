package com.test.present.cp.case1;

import com.test.present.cp.ConstantPoolPresenterTestBase;
import org.junit.Before;
import org.junit.Test;

import java.io.IOException;
import java.util.List;

public class EnumCpTest extends ConstantPoolPresenterTestBase {

    @Before
    public void prepare() throws IOException, ClassNotFoundException {
        buildRealLines(Class.forName("java.lang.Enum"));
    }

    @Test
    public void test() {
        expectedLines = List.of(
                "    #4 = Utf8               java/lang/Enum",
                "    #5 = Utf8               name",
                "    #6 = Utf8               Ljava/lang/String;",
                "    #9 = Utf8               ordinal",
                "   #10 = Utf8               I",
                "   #14 = Utf8               java/lang/Object",
                "   #15 = Utf8               <init>",
                "   #16 = Utf8               ()V",
                "   #19 = Utf8               hash",
                "   #23 = Utf8               java/lang/System",
                "   #24 = Utf8               identityHashCode",
                "   #25 = Utf8               (Ljava/lang/Object;)I",
                "   #27 = Utf8               java/lang/CloneNotSupportedException",
                "   #31 = Utf8               getClass",
                "   #32 = Utf8               ()Ljava/lang/Class;",
                "   #35 = Utf8               getDeclaringClass",
                "   #37 = Utf8               java/lang/ClassCastException",
                "   #42 = Utf8               java/lang/Class",
                "   #43 = Utf8               getSuperclass",
                "   #46 = Utf8               describeConstable",
                "   #47 = Utf8               ()Ljava/util/Optional;",
                "   #50 = Utf8               apply",
                "   #51 = Utf8               (Ljava/lang/Enum;)Ljava/util/function/Function;",
                "   #55 = Utf8               java/util/Optional",
                "   #56 = Utf8               map",
                "   #57 = Utf8               (Ljava/util/function/Function;)Ljava/util/Optional;",
                "   #60 = Utf8               enumConstantDirectory",
                "   #61 = Utf8               ()Ljava/util/Map;",
                "   #65 = Utf8               java/util/Map",
                "   #66 = Utf8               get",
                "   #67 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;",
                "   #69 = Utf8               java/lang/NullPointerException",
                "   #71 = Utf8               Name is null",
                "   #74 = Utf8               (Ljava/lang/String;)V",
                "   #76 = Utf8               java/lang/IllegalArgumentException",
                "   #78 = Utf8               java/lang/StringBuilder",
                "   #81 = Utf8               No enum constant",
                "   #84 = Utf8               append",
                "   #85 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "   #88 = Utf8               getCanonicalName",
                "   #89 = Utf8               ()Ljava/lang/String;",
                "   #91 = Utf8               .",
                "   #94 = Utf8               toString",
                "   #97 = Utf8               java/io/InvalidObjectException",
                "   #99 = Utf8               can\\'t deserialize enum",
                "  #103 = Utf8               compareTo",
                "  #104 = Utf8               (Ljava/lang/Enum;)I",
                "  #108 = Utf8               java/lang/Enum$EnumDesc",
                "  #109 = Utf8               of",
                "  #110 = Utf8               (Ljava/lang/constant/ClassDesc;Ljava/lang/String;)Ljava/lang/Enum$EnumDesc;",
                "  #112 = Utf8               java/lang/constant/Constable",
                "  #114 = Utf8               java/lang/Comparable",
                "  #116 = Utf8               java/io/Serializable",
                "  #117 = Utf8               RuntimeVisibleAnnotations",
                "  #118 = Utf8               Ljdk/internal/vm/annotation/Stable;",
                "  #119 = Utf8               Code",
                "  #120 = Utf8               LineNumberTable",
                "  #121 = Utf8               LocalVariableTable",
                "  #122 = Utf8               this",
                "  #123 = Utf8               Ljava/lang/Enum;",
                "  #124 = Utf8               LocalVariableTypeTable",
                "  #125 = Utf8               Ljava/lang/Enum<TE;>;",
                "  #126 = Utf8               ()I",
                "  #127 = Utf8               (Ljava/lang/String;I)V",
                "  #128 = Utf8               equals",
                "  #129 = Utf8               (Ljava/lang/Object;)Z",
                "  #130 = Utf8               other",
                "  #131 = Utf8               Ljava/lang/Object;",
                "  #132 = Utf8               StackMapTable",
                "  #133 = Utf8               hashCode",
                "  #134 = Utf8               hc",
                "  #135 = Utf8               clone",
                "  #136 = Utf8               ()Ljava/lang/Object;",
                "  #137 = Utf8               Exceptions",
                "  #138 = Utf8               o",
                "  #139 = Utf8               self",
                "  #140 = Utf8               TE;",
                "  #141 = Utf8               Ljava/lang/Enum<*>;",
                "  #142 = Utf8               Signature",
                "  #143 = Utf8               (TE;)I",
                "  #144 = Utf8               clazz",
                "  #145 = Utf8               Ljava/lang/Class;",
                "  #146 = Utf8               zuper",
                "  #147 = Utf8               Ljava/lang/Class<*>;",
                "  #148 = Utf8               ()Ljava/lang/Class<TE;>;",
                "  #149 = Utf8               ()Ljava/util/Optional<Ljava/lang/Enum$EnumDesc<TE;>;>;",
                "  #150 = Utf8               valueOf",
                "  #151 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;",
                "  #152 = Utf8               enumClass",
                "  #153 = Utf8               result",
                "  #154 = Utf8               Ljava/lang/Class<TT;>;",
                "  #155 = Utf8               TT;",
                "  #156 = Utf8               <T:Ljava/lang/Enum<TT;>;>(Ljava/lang/Class<TT;>;Ljava/lang/String;)TT;",
                "  #157 = Utf8               finalize",
                "  #158 = Utf8               Deprecated",
                "  #159 = Utf8               Ljava/lang/Deprecated;",
                "  #160 = Utf8               since",
                "  #161 = Utf8               18",
                "  #162 = Utf8               forRemoval",
                "  #164 = Utf8               readObject",
                "  #165 = Utf8               (Ljava/io/ObjectInputStream;)V",
                "  #166 = Utf8               in",
                "  #167 = Utf8               Ljava/io/ObjectInputStream;",
                "  #169 = Utf8               java/io/IOException",
                "  #171 = Utf8               java/lang/ClassNotFoundException",
                "  #172 = Utf8               readObjectNoData",
                "  #174 = Utf8               java/io/ObjectStreamException",
                "  #175 = Utf8               MethodParameters",
                "  #176 = Utf8               lambda$describeConstable$0",
                "  #177 = Utf8               (Ljava/lang/constant/ClassDesc;)Ljava/lang/Enum$EnumDesc;",
                "  #178 = Utf8               c",
                "  #179 = Utf8               Ljava/lang/constant/ClassDesc;",
                "  #180 = Utf8               <E:Ljava/lang/Enum<TE;>;>Ljava/lang/Object;Ljava/lang/constant/Constable;Ljava/lang/Comparable<TE;>;Ljava/io/Serializable;",
                "  #181 = Utf8               SourceFile",
                "  #182 = Utf8               Enum.java",
                "  #183 = Utf8               NestMembers",
                "  #184 = Utf8               BootstrapMethods",
                "  #194 = Utf8               java/lang/invoke/LambdaMetafactory",
                "  #195 = Utf8               metafactory",
                "  #196 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;",
                "  #197 = Utf8               InnerClasses",
                "  #198 = Utf8               EnumDesc",
                "  #200 = Utf8               java/lang/invoke/MethodHandles$Lookup",
                "  #202 = Utf8               java/lang/invoke/MethodHandles",
                "  #203 = Utf8               Lookup"
        );
    }
}
