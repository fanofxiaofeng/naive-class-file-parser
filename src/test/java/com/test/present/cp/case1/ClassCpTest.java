package com.test.present.cp.case1;

import com.test.present.cp.ConstantPoolPresenterTestBase;
import org.junit.Before;
import org.junit.Test;

import java.io.IOException;
import java.util.List;

public class ClassCpTest extends ConstantPoolPresenterTestBase {

    @Before
    public void prepare() throws IOException, ClassNotFoundException {
        buildRealLines(Class.forName("java.lang.Class"));
    }

    @Test
    public void test() {
        expectedLines = List.of(
                "     #4 = Utf8               java/lang/Object",
                "     #5 = Utf8               <init>",
                "     #6 = Utf8               ()V",
                "    #10 = Utf8               java/lang/Class",
                "    #11 = Utf8               classLoader",
                "    #12 = Utf8               Ljava/lang/ClassLoader;",
                "    #15 = Utf8               componentType",
                "    #16 = Utf8               Ljava/lang/Class;",
                "    #19 = Utf8               isInterface",
                "    #20 = Utf8               ()Z",
                "    #22 = Utf8               interface",
                "    #25 = Utf8               isPrimitive",
                "    #27 = Utf8",
                "    #29 = Utf8               class",
                "    #32 = Utf8               getName",
                "    #33 = Utf8               ()Ljava/lang/String;",
                "    #37 = Utf8               java/lang/String",
                "    #38 = Utf8               concat",
                "    #39 = Utf8               (Ljava/lang/String;)Ljava/lang/String;",
                "    #42 = Utf8               toString",
                "    #44 = Utf8               java/lang/StringBuilder",
                "    #48 = Utf8               isArray",
                "    #51 = Utf8               getComponentType",
                "    #52 = Utf8               ()Ljava/lang/Class;",
                "    #55 = Utf8               append",
                "    #56 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "    #59 = Utf8               getModifiers",
                "    #60 = Utf8               ()I",
                "    #64 = Utf8               java/lang/reflect/Modifier",
                "    #65 = Utf8               classModifiers",
                "    #68 = Utf8               (I)Ljava/lang/String;",
                "    #71 = Utf8               (C)Ljava/lang/StringBuilder;",
                "    #74 = Utf8               isAnnotation",
                "    #76 = Utf8               interface",
                "    #79 = Utf8               isEnum",
                "    #81 = Utf8               enum",
                "    #84 = Utf8               isRecord",
                "    #86 = Utf8               record",
                "    #88 = Utf8               class",
                "    #91 = Utf8               getTypeParameters",
                "    #92 = Utf8               ()[Ljava/lang/reflect/TypeVariable;",
                "    #96 = Utf8               java/util/Arrays",
                "    #97 = Utf8               stream",
                "    #98 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;",
                "   #101 = Utf8               apply",
                "   #102 = Utf8               ()Ljava/util/function/Function;",
                "   #106 = Utf8               java/util/stream/Stream",
                "   #107 = Utf8               map",
                "   #108 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/Stream;",
                "   #110 = Utf8               ,",
                "   #112 = Utf8               <",
                "   #114 = Utf8               >",
                "   #118 = Utf8               java/util/stream/Collectors",
                "   #119 = Utf8               joining",
                "   #120 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;",
                "   #123 = Utf8               collect",
                "   #124 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;",
                "   #126 = Utf8               []",
                "   #129 = Utf8               repeat",
                "   #134 = Utf8               java/lang/reflect/TypeVariable",
                "   #135 = Utf8               getBounds",
                "   #136 = Utf8               ()[Ljava/lang/reflect/Type;",
                "   #140 = Utf8               java/lang/reflect/Type",
                "   #141 = Utf8               equals",
                "   #142 = Utf8               (Ljava/lang/Object;)Z",
                "   #145 = Utf8                extends",
                "   #148 = Utf8                &",
                "   #151 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/stream/Collector;",
                "   #155 = Utf8               jdk/internal/reflect/Reflection",
                "   #156 = Utf8               getCallerClass",
                "   #159 = Utf8               forName",
                "   #160 = Utf8               (Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;",
                "   #164 = Utf8               java/lang/ClassLoader",
                "   #165 = Utf8               getSystemClassLoader",
                "   #166 = Utf8               ()Ljava/lang/ClassLoader;",
                "   #169 = Utf8               getClassLoader",
                "   #170 = Utf8               (Ljava/lang/Class;)Ljava/lang/ClassLoader;",
                "   #173 = Utf8               forName0",
                "   #174 = Utf8               (Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;",
                "   #178 = Utf8               java/lang/System",
                "   #179 = Utf8               getSecurityManager",
                "   #180 = Utf8               ()Ljava/lang/SecurityManager;",
                "   #186 = Utf8               sun/security/util/SecurityConstants",
                "   #187 = Utf8               GET_CLASSLOADER_PERMISSION",
                "   #188 = Utf8               Ljava/lang/RuntimePermission;",
                "   #192 = Utf8               java/lang/SecurityManager",
                "   #193 = Utf8               checkPermission",
                "   #194 = Utf8               (Ljava/security/Permission;)V",
                "   #197 = Utf8               (Ljava/lang/Module;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;",
                "   #201 = Utf8               java/util/Objects",
                "   #202 = Utf8               requireNonNull",
                "   #203 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;",
                "   #206 = Utf8               getModule",
                "   #207 = Utf8               ()Ljava/lang/Module;",
                "   #210 = Utf8               run",
                "   #211 = Utf8               (Ljava/lang/Module;)Ljava/security/PrivilegedAction;",
                "   #215 = Utf8               java/security/AccessController",
                "   #216 = Utf8               doPrivileged",
                "   #217 = Utf8               (Ljava/security/PrivilegedAction;)Ljava/lang/Object;",
                "   #221 = Utf8               java/lang/Module",
                "   #224 = Utf8               loadClass",
                "   #225 = Utf8               (Ljava/lang/Module;Ljava/lang/String;)Ljava/lang/Class;",
                "   #228 = Utf8               jdk/internal/loader/BootLoader",
                "   #230 = Utf8               java/lang/reflect/Member",
                "   #233 = Utf8               checkMemberAccess",
                "   #234 = Utf8               (Ljava/lang/SecurityManager;ILjava/lang/Class;Z)V",
                "   #237 = Utf8               cachedConstructor",
                "   #238 = Utf8               Ljava/lang/reflect/Constructor;",
                "   #240 = Utf8               java/lang/IllegalAccessException",
                "   #242 = Utf8               Can not call newInstance() on the Class for java.lang.Class",
                "   #245 = Utf8               (Ljava/lang/String;)V",
                "   #248 = Utf8               getReflectionFactory",
                "   #249 = Utf8               ()Ljdk/internal/reflect/ReflectionFactory;",
                "   #252 = Utf8               getConstructor0",
                "   #253 = Utf8               ([Ljava/lang/Class;I)Ljava/lang/reflect/Constructor;",
                "   #257 = Utf8               jdk/internal/reflect/ReflectionFactory",
                "   #258 = Utf8               copyConstructor",
                "   #259 = Utf8               (Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;",
                "   #261 = Utf8               java/lang/Class$1",
                "   #264 = Utf8               (Ljava/lang/Class;Ljava/lang/reflect/Constructor;)V",
                "   #266 = Utf8               java/lang/NoSuchMethodException",
                "   #268 = Utf8               java/lang/InstantiationException",
                "   #272 = Utf8               initCause",
                "   #273 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;",
                "   #276 = Utf8               newInstance",
                "   #277 = Utf8               (Ljava/lang/reflect/Constructor;[Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;",
                "   #279 = Utf8               java/lang/reflect/InvocationTargetException",
                "   #283 = Utf8               jdk/internal/misc/Unsafe",
                "   #284 = Utf8               getUnsafe",
                "   #285 = Utf8               ()Ljdk/internal/misc/Unsafe;",
                "   #288 = Utf8               getTargetException",
                "   #289 = Utf8               ()Ljava/lang/Throwable;",
                "   #292 = Utf8               throwException",
                "   #293 = Utf8               (Ljava/lang/Throwable;)V",
                "   #296 = Utf8               name",
                "   #297 = Utf8               Ljava/lang/String;",
                "   #300 = Utf8               initClassName",
                "   #303 = Utf8               checkClassLoaderPermission",
                "   #304 = Utf8               (Ljava/lang/ClassLoader;Ljava/lang/Class;)V",
                "   #307 = Utf8               module",
                "   #308 = Utf8               Ljava/lang/Module;",
                "   #311 = Utf8               classData",
                "   #312 = Utf8               Ljava/lang/Object;",
                "   #315 = Utf8               getGenericInfo",
                "   #316 = Utf8               ()Lsun/reflect/generics/repository/ClassRepository;",
                "   #319 = Utf8               sun/reflect/generics/repository/ClassRepository",
                "   #322 = Utf8               getSuperclass",
                "   #325 = Utf8               ()Ljava/lang/reflect/Type;",
                "   #328 = Utf8               definePackage",
                "   #329 = Utf8               (Ljava/lang/Class;)Ljava/lang/Package;",
                "   #333 = Utf8               packageName",
                "   #336 = Utf8               elementType",
                "   #338 = Utf8               java.lang",
                "   #341 = Utf8               lastIndexOf",
                "   #342 = Utf8               (I)I",
                "   #345 = Utf8               substring",
                "   #346 = Utf8               (II)Ljava/lang/String;",
                "   #349 = Utf8               intern",
                "   #352 = Utf8               getInterfaces",
                "   #353 = Utf8               (Z)[Ljava/lang/Class;",
                "   #356 = Utf8               reflectionData",
                "   #357 = Utf8               ()Ljava/lang/Class$ReflectionData;",
                "   #360 = Utf8               getInterfaces0",
                "   #361 = Utf8               ()[Ljava/lang/Class;",
                "   #365 = Utf8               java/lang/Class$ReflectionData",
                "   #366 = Utf8               interfaces",
                "   #367 = Utf8               [Ljava/lang/Class;",
                "   #371 = Utf8               clone",
                "   #372 = Utf8               ()Ljava/lang/Object;",
                "   #377 = Utf8               getSuperInterfaces",
                "   #380 = Utf8               isMemberClass",
                "   #383 = Utf8               isLocalClass",
                "   #386 = Utf8               isAnonymousClass",
                "   #390 = Utf8               java/lang/reflect/AccessFlag$Location",
                "   #391 = Utf8               INNER_CLASS",
                "   #392 = Utf8               Ljava/lang/reflect/AccessFlag$Location;",
                "   #395 = Utf8               CLASS",
                "   #398 = Utf8               getClassAccessFlagsRaw",
                "   #402 = Utf8               java/lang/reflect/AccessFlag",
                "   #403 = Utf8               maskToAccessFlags",
                "   #404 = Utf8               (ILjava/lang/reflect/AccessFlag$Location;)Ljava/util/Set;",
                "   #407 = Utf8               getEnclosingMethodInfo",
                "   #408 = Utf8               ()Ljava/lang/Class$EnclosingMethodInfo;",
                "   #412 = Utf8               java/lang/Class$EnclosingMethodInfo",
                "   #413 = Utf8               isMethod",
                "   #416 = Utf8               getDescriptor",
                "   #419 = Utf8               getFactory",
                "   #420 = Utf8               ()Lsun/reflect/generics/factory/GenericsFactory;",
                "   #424 = Utf8               sun/reflect/generics/repository/MethodRepository",
                "   #425 = Utf8               make",
                "   #426 = Utf8               (Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/repository/MethodRepository;",
                "   #429 = Utf8               getReturnType",
                "   #432 = Utf8               toClass",
                "   #433 = Utf8               (Ljava/lang/reflect/Type;)Ljava/lang/Class;",
                "   #436 = Utf8               getParameterTypes",
                "   #439 = Utf8               getEnclosingClass",
                "   #442 = Utf8               privateGetDeclaredMethods",
                "   #443 = Utf8               (Z)[Ljava/lang/reflect/Method;",
                "   #446 = Utf8               java/lang/reflect/Method",
                "   #451 = Utf8               getExecutableSharedParameterTypes",
                "   #452 = Utf8               (Ljava/lang/reflect/Executable;)[Ljava/lang/Class;",
                "   #455 = Utf8               arrayContentsEq",
                "   #456 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z",
                "   #462 = Utf8               copyMethod",
                "   #463 = Utf8               (Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;",
                "   #465 = Utf8               java/lang/InternalError",
                "   #467 = Utf8               Enclosing method not found",
                "   #471 = Utf8               getEnclosingMethod0",
                "   #472 = Utf8               ()[Ljava/lang/Object;",
                "   #475 = Utf8               ([Ljava/lang/Object;)V",
                "   #477 = Utf8               java/lang/reflect/GenericArrayType",
                "   #480 = Utf8               getGenericComponentType",
                "   #484 = Utf8               java/lang/reflect/Array",
                "   #485 = Utf8               (Ljava/lang/Class;I)Ljava/lang/Object;",
                "   #488 = Utf8               getClass",
                "   #491 = Utf8               isConstructor",
                "   #495 = Utf8               sun/reflect/generics/repository/ConstructorRepository",
                "   #496 = Utf8               (Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/repository/ConstructorRepository;",
                "   #500 = Utf8               privateGetDeclaredConstructors",
                "   #501 = Utf8               (Z)[Ljava/lang/reflect/Constructor;",
                "   #503 = Utf8               Enclosing constructor not found",
                "   #506 = Utf8               getDeclaringClass0",
                "   #509 = Utf8               checkPackageAccess",
                "   #510 = Utf8               (Ljava/lang/SecurityManager;Ljava/lang/ClassLoader;Z)V",
                "   #512 = Utf8               Malformed enclosing method information",
                "   #515 = Utf8               isUnnamedClass",
                "   #518 = Utf8               simpleName",
                "   #521 = Utf8               getSimpleName0",
                "   #524 = Utf8               getSimpleName",
                "   #527 = Utf8               getSimpleBinaryName",
                "   #531 = Utf8               java/lang/Throwable",
                "   #534 = Utf8               canonicalName",
                "   #537 = Utf8               getCanonicalName0",
                "   #540 = Utf8               NULL_SENTINEL",
                "   #543 = Utf8               getCanonicalName",
                "   #546 = Utf8               isHidden",
                "   #549 = Utf8               isLocalOrAnonymousClass",
                "   #553 = Utf8               length",
                "   #556 = Utf8               (I)V",
                "   #560 = Utf8               jdk/internal/misc/PreviewFeatures",
                "   #561 = Utf8               isEnabled",
                "   #564 = Utf8               isSynthetic",
                "   #567 = Utf8               isTopLevelClass",
                "   #570 = Utf8               isFinal",
                "   #571 = Utf8               (I)Z",
                "   #574 = Utf8               getSimpleBinaryName0",
                "   #577 = Utf8               hasEnclosingMethodInfo",
                "   #580 = Utf8               validate",
                "   #582 = Utf8               java/lang/Class$2",
                "   #585 = Utf8               (Ljava/lang/Class;)V",
                "   #588 = Utf8               privateGetPublicFields",
                "   #589 = Utf8               ()[Ljava/lang/reflect/Field;",
                "   #592 = Utf8               copyFields",
                "   #593 = Utf8               ([Ljava/lang/reflect/Field;)[Ljava/lang/reflect/Field;",
                "   #596 = Utf8               privateGetPublicMethods",
                "   #597 = Utf8               ()[Ljava/lang/reflect/Method;",
                "   #600 = Utf8               copyMethods",
                "   #601 = Utf8               ([Ljava/lang/reflect/Method;)[Ljava/lang/reflect/Method;",
                "   #604 = Utf8               copyConstructors",
                "   #605 = Utf8               ([Ljava/lang/reflect/Constructor;)[Ljava/lang/reflect/Constructor;",
                "   #608 = Utf8               getField0",
                "   #609 = Utf8               (Ljava/lang/String;)Ljava/lang/reflect/Field;",
                "   #611 = Utf8               java/lang/NoSuchFieldException",
                "   #615 = Utf8               copyField",
                "   #616 = Utf8               (Ljava/lang/reflect/Field;)Ljava/lang/reflect/Field;",
                "   #619 = Utf8               getMethod0",
                "   #620 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;",
                "   #623 = Utf8               methodToString",
                "   #624 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/String;",
                "   #628 = Utf8               getDeclaredClasses0",
                "   #631 = Utf8               privateGetDeclaredFields",
                "   #632 = Utf8               (Z)[Ljava/lang/reflect/Field;",
                "   #635 = Utf8               getRecordComponents0",
                "   #636 = Utf8               ()[Ljava/lang/reflect/RecordComponent;",
                "   #639 = Utf8               searchFields",
                "   #640 = Utf8               ([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;",
                "   #643 = Utf8               searchMethods",
                "   #644 = Utf8               ([Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;",
                "   #646 = Utf8               java/util/ArrayList",
                "   #653 = Utf8               java/util/List",
                "   #654 = Utf8               add",
                "   #657 = Utf8               resolveName",
                "   #660 = Utf8               isNamed",
                "   #664 = Utf8               jdk/internal/module/Resources",
                "   #665 = Utf8               canEncapsulate",
                "   #666 = Utf8               (Ljava/lang/String;)Z",
                "   #669 = Utf8               isOpenToCaller",
                "   #670 = Utf8               (Ljava/lang/String;Ljava/lang/Class;)Z",
                "   #674 = Utf8               findResourceAsStream",
                "   #675 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;",
                "   #677 = Utf8               jdk/internal/loader/BuiltinClassLoader",
                "   #681 = Utf8               findResource",
                "   #682 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;",
                "   #686 = Utf8               java/net/URL",
                "   #687 = Utf8               openStream",
                "   #688 = Utf8               ()Ljava/io/InputStream;",
                "   #690 = Utf8               java/io/IOException",
                "   #692 = Utf8               java/lang/SecurityException",
                "   #695 = Utf8               getSystemResourceAsStream",
                "   #696 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;",
                "   #699 = Utf8               getResourceAsStream",
                "   #703 = Utf8               getSystemResource",
                "   #704 = Utf8               (Ljava/lang/String;)Ljava/net/URL;",
                "   #707 = Utf8               getResource",
                "   #710 = Utf8               toPackageName",
                "   #713 = Utf8               ()Ljava/lang/module/ModuleDescriptor;",
                "   #717 = Utf8               java/lang/module/ModuleDescriptor",
                "   #718 = Utf8               packages",
                "   #719 = Utf8               ()Ljava/util/Set;",
                "   #723 = Utf8               java/util/Set",
                "   #724 = Utf8               contains",
                "   #727 = Utf8               isOpen",
                "   #730 = Utf8               (Ljava/lang/String;Ljava/lang/Module;)Z",
                "   #733 = Utf8               GET_PD_PERMISSION",
                "   #736 = Utf8               protectionDomain",
                "   #737 = Utf8               ()Ljava/security/ProtectionDomain;",
                "   #740 = Utf8               getProtectionDomain0",
                "   #743 = Utf8               allPermDomain",
                "   #744 = Utf8               Ljava/security/ProtectionDomain;",
                "   #746 = Utf8               java/security/Permissions",
                "   #750 = Utf8               ALL_PERMISSION",
                "   #751 = Utf8               Ljava/security/AllPermission;",
                "   #755 = Utf8               java/security/ProtectionDomain",
                "   #758 = Utf8               (Ljava/security/CodeSource;Ljava/security/PermissionCollection;)V",
                "   #761 = Utf8               CHECK_MEMBER_ACCESS_PERMISSION",
                "   #765 = Utf8               sun/reflect/misc/ReflectUtil",
                "   #766 = Utf8               needsPackageAccessCheck",
                "   #767 = Utf8               (Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z",
                "   #770 = Utf8               getPackageName",
                "   #773 = Utf8               isEmpty",
                "   #777 = Utf8               java/lang/reflect/Proxy",
                "   #778 = Utf8               isProxyClass",
                "   #779 = Utf8               (Ljava/lang/Class;)Z",
                "   #782 = Utf8               isNonPublicProxyClass",
                "   #787 = Utf8               checkProxyPackageAccess",
                "   #788 = Utf8               (Ljava/lang/ClassLoader;[Ljava/lang/Class;)V",
                "   #790 = Utf8               java/util/HashSet",
                "   #793 = Utf8               a permitted subclass should not be a proxy class:",
                "   #796 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;",
                "   #800 = Utf8               iterator",
                "   #801 = Utf8               ()Ljava/util/Iterator;",
                "   #805 = Utf8               java/util/Iterator",
                "   #806 = Utf8               hasNext",
                "   #809 = Utf8               next",
                "   #811 = Utf8               /",
                "   #814 = Utf8               startsWith",
                "   #817 = Utf8               replace",
                "   #818 = Utf8               (CC)Ljava/lang/String;",
                "   #821 = Utf8               Ljava/lang/ref/SoftReference;",
                "   #824 = Utf8               classRedefinedCount",
                "   #825 = Utf8               I",
                "   #829 = Utf8               java/lang/ref/SoftReference",
                "   #830 = Utf8               get",
                "   #833 = Utf8               redefinedCount",
                "   #836 = Utf8               newReflectionData",
                "   #837 = Utf8               (Ljava/lang/ref/SoftReference;I)Ljava/lang/Class$ReflectionData;",
                "   #841 = Utf8               (Ljava/lang/Object;)V",
                "   #845 = Utf8               java/lang/Class$Atomic",
                "   #846 = Utf8               casReflectionData",
                "   #847 = Utf8               (Ljava/lang/Class;Ljava/lang/ref/SoftReference;Ljava/lang/ref/SoftReference;)Z",
                "   #851 = Utf8               sun/reflect/generics/scope/ClassScope",
                "   #852 = Utf8               (Ljava/lang/Class;)Lsun/reflect/generics/scope/ClassScope;",
                "   #856 = Utf8               sun/reflect/generics/factory/CoreReflectionFactory",
                "   #857 = Utf8               (Ljava/lang/reflect/GenericDeclaration;Lsun/reflect/generics/scope/Scope;)Lsun/reflect/generics/factory/CoreReflectionFactory;",
                "   #860 = Utf8               genericInfo",
                "   #861 = Utf8               Lsun/reflect/generics/repository/ClassRepository;",
                "   #864 = Utf8               getGenericSignature0",
                "   #867 = Utf8               NONE",
                "   #870 = Utf8               (Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/repository/ClassRepository;",
                "   #873 = Utf8               getExecutableTypeAnnotationBytes",
                "   #874 = Utf8               (Ljava/lang/reflect/Executable;)[B",
                "   #877 = Utf8               declaredPublicFields",
                "   #878 = Utf8               [Ljava/lang/reflect/Field;",
                "   #881 = Utf8               declaredFields",
                "   #884 = Utf8               getDeclaredFields0",
                "   #887 = Utf8               filterFields",
                "   #888 = Utf8               (Ljava/lang/Class;[Ljava/lang/reflect/Field;)[Ljava/lang/reflect/Field;",
                "   #891 = Utf8               publicFields",
                "   #893 = Utf8               java/util/LinkedHashSet",
                "   #897 = Utf8               addAll",
                "   #898 = Utf8               (Ljava/util/Collection;[Ljava/lang/reflect/Field;)V",
                "   #900 = Utf8               java/lang/reflect/Field",
                "   #903 = Utf8               toArray",
                "   #904 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;",
                "   #908 = Utf8               java/util/Collection",
                "   #911 = Utf8               publicConstructors",
                "   #912 = Utf8               [Ljava/lang/reflect/Constructor;",
                "   #915 = Utf8               declaredConstructors",
                "   #917 = Utf8               java/lang/reflect/Constructor",
                "   #920 = Utf8               getDeclaredConstructors0",
                "   #923 = Utf8               declaredPublicMethods",
                "   #924 = Utf8               [Ljava/lang/reflect/Method;",
                "   #927 = Utf8               declaredMethods",
                "   #930 = Utf8               getDeclaredMethods0",
                "   #933 = Utf8               filterMethods",
                "   #934 = Utf8               (Ljava/lang/Class;[Ljava/lang/reflect/Method;)[Ljava/lang/reflect/Method;",
                "   #937 = Utf8               publicMethods",
                "   #939 = Utf8               java/lang/PublicMethods",
                "   #943 = Utf8               merge",
                "   #944 = Utf8               (Ljava/lang/reflect/Method;)V",
                "   #948 = Utf8               isStatic",
                "   #954 = Utf8               isAssignableFrom",
                "   #957 = Utf8               EMPTY_CLASS_ARRAY",
                "   #960 = Utf8               getMethodsRecursive",
                "   #961 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;Z)Ljava/lang/PublicMethods$MethodList;",
                "   #965 = Utf8               java/lang/PublicMethods$MethodList",
                "   #966 = Utf8               getMostSpecific",
                "   #967 = Utf8               ()Ljava/lang/reflect/Method;",
                "   #970 = Utf8               filter",
                "   #971 = Utf8               ([Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Class;Z)Ljava/lang/PublicMethods$MethodList;",
                "   #974 = Utf8               (Ljava/lang/PublicMethods$MethodList;Ljava/lang/PublicMethods$MethodList;)Ljava/lang/PublicMethods$MethodList;",
                "   #979 = Utf8               ()",
                "   #982 = Utf8               (",
                "   #984 = Utf8               )",
                "   #987 = Utf8               desiredAssertionStatus0",
                "   #990 = Utf8               assertionLock",
                "   #993 = Utf8               classAssertionStatus",
                "   #994 = Utf8               Ljava/util/Map;",
                "   #997 = Utf8               desiredAssertionStatus",
                "   #999 = Utf8               java/lang/Enum",
                "  #1001 = Utf8               java/lang/Record",
                "  #1004 = Utf8               isRecord0",
                "  #1007 = Utf8               reflectionFactory",
                "  #1008 = Utf8               Ljdk/internal/reflect/ReflectionFactory;",
                "  #1010 = Utf8               jdk/internal/reflect/ReflectionFactory$GetReflectionFactoryAction",
                "  #1014 = Utf8               getEnumConstantsShared",
                "  #1017 = Utf8               [Ljava/lang/Object;",
                "  #1020 = Utf8               enumConstants",
                "  #1022 = Utf8               values",
                "  #1025 = Utf8               getMethod",
                "  #1027 = Utf8               java/lang/Class$3",
                "  #1030 = Utf8               (Ljava/lang/Class;Ljava/lang/reflect/Method;)V",
                "  #1033 = Utf8               invoke",
                "  #1034 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;",
                "  #1036 = Utf8               java/lang/NullPointerException",
                "  #1038 = Utf8               java/lang/ClassCastException",
                "  #1041 = Utf8               enumConstantDirectory",
                "  #1043 = Utf8               java/lang/IllegalArgumentException",
                "  #1045 = Utf8                is not an enum class",
                "  #1050 = Utf8               java/util/HashMap",
                "  #1051 = Utf8               newHashMap",
                "  #1052 = Utf8               (I)Ljava/util/HashMap;",
                "  #1058 = Utf8               java/util/Map",
                "  #1059 = Utf8               put",
                "  #1060 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;",
                "  #1063 = Utf8               isInstance",
                "  #1066 = Utf8               cannotCastMsg",
                "  #1067 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;",
                "  #1070 = Utf8               Cannot cast",
                "  #1072 = Utf8                to",
                "  #1075 = Utf8               annotationData",
                "  #1076 = Utf8               ()Ljava/lang/Class$AnnotationData;",
                "  #1080 = Utf8               java/lang/Class$AnnotationData",
                "  #1081 = Utf8               annotations",
                "  #1085 = Utf8               java/lang/annotation/Annotation",
                "  #1089 = Utf8               java/lang/reflect/GenericDeclaration",
                "  #1090 = Utf8               isAnnotationPresent",
                "  #1093 = Utf8               declaredAnnotations",
                "  #1097 = Utf8               sun/reflect/annotation/AnnotationSupport",
                "  #1098 = Utf8               getAssociatedAnnotations",
                "  #1099 = Utf8               (Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;",
                "  #1103 = Utf8               sun/reflect/annotation/AnnotationParser",
                "  #1104 = Utf8               (Ljava/util/Map;)[Ljava/lang/annotation/Annotation;",
                "  #1107 = Utf8               getDirectlyAndIndirectlyPresent",
                "  #1108 = Utf8               (Ljava/util/Map;Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;",
                "  #1111 = Utf8               Ljava/lang/Class$AnnotationData;",
                "  #1115 = Utf8               createAnnotationData",
                "  #1116 = Utf8               (I)Ljava/lang/Class$AnnotationData;",
                "  #1119 = Utf8               casAnnotationData",
                "  #1120 = Utf8               (Ljava/lang/Class;Ljava/lang/Class$AnnotationData;Ljava/lang/Class$AnnotationData;)Z",
                "  #1123 = Utf8               getRawAnnotations",
                "  #1124 = Utf8               ()[B",
                "  #1127 = Utf8               getConstantPool",
                "  #1128 = Utf8               ()Ljdk/internal/reflect/ConstantPool;",
                "  #1131 = Utf8               parseAnnotations",
                "  #1132 = Utf8               ([BLjdk/internal/reflect/ConstantPool;Ljava/lang/Class;)Ljava/util/Map;",
                "  #1135 = Utf8               entrySet",
                "  #1137 = Utf8               java/util/Map$Entry",
                "  #1140 = Utf8               getKey",
                "  #1144 = Utf8               sun/reflect/annotation/AnnotationType",
                "  #1145 = Utf8               getInstance",
                "  #1146 = Utf8               (Ljava/lang/Class;)Lsun/reflect/annotation/AnnotationType;",
                "  #1149 = Utf8               isInherited",
                "  #1152 = Utf8               size",
                "  #1156 = Utf8               java/lang/Math",
                "  #1157 = Utf8               min",
                "  #1158 = Utf8               (II)I",
                "  #1161 = Utf8               max",
                "  #1165 = Utf8               java/util/LinkedHashMap",
                "  #1166 = Utf8               newLinkedHashMap",
                "  #1167 = Utf8               (I)Ljava/util/LinkedHashMap;",
                "  #1170 = Utf8               getValue",
                "  #1173 = Utf8               putAll",
                "  #1174 = Utf8               (Ljava/util/Map;)V",
                "  #1177 = Utf8               (Ljava/util/Map;Ljava/util/Map;I)V",
                "  #1180 = Utf8               casAnnotationType",
                "  #1181 = Utf8               (Ljava/lang/Class;Lsun/reflect/annotation/AnnotationType;Lsun/reflect/annotation/AnnotationType;)Z",
                "  #1184 = Utf8               annotationType",
                "  #1185 = Utf8               Lsun/reflect/annotation/AnnotationType;",
                "  #1189 = Utf8               java/lang/Void",
                "  #1190 = Utf8               TYPE",
                "  #1193 = Utf8               getRawTypeAnnotations",
                "  #1197 = Utf8               sun/reflect/annotation/TypeAnnotationParser",
                "  #1198 = Utf8               buildAnnotatedSuperclass",
                "  #1199 = Utf8               ([BLjdk/internal/reflect/ConstantPool;Ljava/lang/Class;)Ljava/lang/reflect/AnnotatedType;",
                "  #1202 = Utf8               buildAnnotatedInterfaces",
                "  #1203 = Utf8               ([BLjdk/internal/reflect/ConstantPool;Ljava/lang/Class;)[Ljava/lang/reflect/AnnotatedType;",
                "  #1206 = Utf8               getNestHost0",
                "  #1209 = Utf8               getNestHost",
                "  #1212 = Utf8               getNestMembers0",
                "  #1216 = Utf8               sun/invoke/util/Wrapper",
                "  #1217 = Utf8               forPrimitiveType",
                "  #1218 = Utf8               (Ljava/lang/Class;)Lsun/invoke/util/Wrapper;",
                "  #1221 = Utf8               basicTypeString",
                "  #1223 = Utf8               [",
                "  #1226 = Utf8               descriptorString",
                "  #1229 = Utf8               indexOf",
                "  #1232 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;",
                "  #1234 = Utf8               java/lang/UnsupportedOperationException",
                "  #1240 = Utf8               java/util/Optional",
                "  #1241 = Utf8               empty",
                "  #1242 = Utf8               ()Ljava/util/Optional;",
                "  #1246 = Utf8               java/lang/constant/ClassDesc",
                "  #1247 = Utf8               ofDescriptor",
                "  #1248 = Utf8               (Ljava/lang/String;)Ljava/lang/constant/ClassDesc;",
                "  #1251 = Utf8               of",
                "  #1252 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;",
                "  #1255 = Utf8               getPermittedSubclasses0",
                "  #1258 = Utf8               test",
                "  #1259 = Utf8               (Ljava/lang/Class;)Ljava/util/function/Predicate;",
                "  #1262 = Utf8               anyMatch",
                "  #1263 = Utf8               (Ljava/util/function/Predicate;)Z",
                "  #1267 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;",
                "  #1270 = Utf8               ()Ljava/util/function/IntFunction;",
                "  #1273 = Utf8               (Ljava/util/function/IntFunction;)[Ljava/lang/Object;",
                "  #1276 = Utf8               checkPackageAccessForPermittedSubclasses",
                "  #1277 = Utf8               (Ljava/lang/SecurityManager;Ljava/lang/ClassLoader;[Ljava/lang/Class;)V",
                "  #1280 = Utf8               getPermittedSubclasses",
                "  #1283 = Utf8               getClassFileVersion0",
                "  #1286 = Utf8               getClassAccessFlagsRaw0",
                "  #1289 = Utf8               arrayType",
                "  #1294 = Utf8               isDirectSubType",
                "  #1296 = Utf8               null",
                "  #1299 = Utf8               registerNatives",
                "  #1301 = Utf8               java/io/ObjectStreamField",
                "  #1304 = Utf8               serialPersistentFields",
                "  #1305 = Utf8               [Ljava/io/ObjectStreamField;",
                "  #1307 = Utf8               java/io/Serializable",
                "  #1309 = Utf8               java/lang/reflect/AnnotatedElement",
                "  #1311 = Utf8               java/lang/invoke/TypeDescriptor$OfField",
                "  #1313 = Utf8               java/lang/constant/Constable",
                "  #1314 = Utf8               ANNOTATION",
                "  #1315 = Utf8               ConstantValue",
                "  #1317 = Utf8               ENUM",
                "  #1319 = Utf8               SYNTHETIC",
                "  #1321 = Utf8               Signature",
                "  #1322 = Utf8               Ljava/lang/reflect/Constructor<TT;>;",
                "  #1323 = Utf8               Ljava/lang/Class<*>;",
                "  #1324 = Utf8               Ljava/lang/ref/SoftReference<Ljava/lang/Class$ReflectionData<TT;>;>;",
                "  #1325 = Utf8               [Ljava/lang/Class<*>;",
                "  #1326 = Utf8               serialVersionUID",
                "  #1327 = Utf8               J",
                "  #1330 = Utf8               [TT;",
                "  #1331 = Utf8               Ljava/util/Map<Ljava/lang/String;TT;>;",
                "  #1332 = Utf8               classValueMap",
                "  #1333 = Utf8               Ljava/lang/ClassValue$ClassValueMap;",
                "  #1334 = Utf8               Code",
                "  #1335 = Utf8               LineNumberTable",
                "  #1336 = Utf8               LocalVariableTable",
                "  #1337 = Utf8               this",
                "  #1338 = Utf8               loader",
                "  #1339 = Utf8               arrayComponentType",
                "  #1340 = Utf8               LocalVariableTypeTable",
                "  #1341 = Utf8               Ljava/lang/Class<TT;>;",
                "  #1342 = Utf8               (Ljava/lang/ClassLoader;Ljava/lang/Class<*>;)V",
                "  #1343 = Utf8               kind",
                "  #1344 = Utf8               StackMapTable",
                "  #1345 = Utf8               toGenericString",
                "  #1346 = Utf8               modifiers",
                "  #1347 = Utf8               sb",
                "  #1348 = Utf8               Ljava/lang/StringBuilder;",
                "  #1349 = Utf8               component",
                "  #1350 = Utf8               arrayDepth",
                "  #1351 = Utf8               typeparms",
                "  #1352 = Utf8               [Ljava/lang/reflect/TypeVariable;",
                "  #1353 = Utf8               [Ljava/lang/reflect/TypeVariable<*>;",
                "  #1355 = Utf8               typeVarBounds",
                "  #1356 = Utf8               (Ljava/lang/reflect/TypeVariable;)Ljava/lang/String;",
                "  #1357 = Utf8               typeVar",
                "  #1358 = Utf8               Ljava/lang/reflect/TypeVariable;",
                "  #1359 = Utf8               bounds",
                "  #1360 = Utf8               [Ljava/lang/reflect/Type;",
                "  #1361 = Utf8               Ljava/lang/reflect/TypeVariable<*>;",
                "  #1363 = Utf8               (Ljava/lang/reflect/TypeVariable<*>;)Ljava/lang/String;",
                "  #1364 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;",
                "  #1365 = Utf8               className",
                "  #1366 = Utf8               caller",
                "  #1367 = Utf8               Exceptions",
                "  #1369 = Utf8               java/lang/ClassNotFoundException",
                "  #1370 = Utf8               (Ljava/lang/String;)Ljava/lang/Class<*>;",
                "  #1371 = Utf8               RuntimeVisibleAnnotations",
                "  #1372 = Utf8               Ljdk/internal/reflect/CallerSensitive;",
                "  #1373 = Utf8               (Ljava/lang/String;Ljava/lang/Class<*>;)Ljava/lang/Class<*>;",
                "  #1374 = Utf8               RuntimeInvisibleAnnotations",
                "  #1375 = Utf8               Ljdk/internal/reflect/CallerSensitiveAdapter;",
                "  #1376 = Utf8               (Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;",
                "  #1377 = Utf8               initialize",
                "  #1378 = Utf8               Z",
                "  #1379 = Utf8               sm",
                "  #1380 = Utf8               Ljava/lang/SecurityManager;",
                "  #1381 = Utf8               (Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class<*>;",
                "  #1382 = Utf8               ccl",
                "  #1383 = Utf8               (Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class<*>;)Ljava/lang/Class<*>;",
                "  #1384 = Utf8               (Ljava/lang/Module;Ljava/lang/String;)Ljava/lang/Class<*>;",
                "  #1385 = Utf8               pa",
                "  #1386 = Utf8               Ljava/security/PrivilegedAction;",
                "  #1387 = Utf8               cl",
                "  #1388 = Utf8               Ljava/security/PrivilegedAction<Ljava/lang/ClassLoader;>;",
                "  #1389 = Utf8               (Ljava/lang/Module;Ljava/lang/String;Ljava/lang/Class<*>;)Ljava/lang/Class<*>;",
                "  #1390 = Utf8               c",
                "  #1391 = Utf8               e",
                "  #1392 = Utf8               Ljava/lang/NoSuchMethodException;",
                "  #1393 = Utf8               Ljava/lang/reflect/InvocationTargetException;",
                "  #1394 = Utf8               tmpConstructor",
                "  #1395 = Utf8               Deprecated",
                "  #1396 = Utf8               ()TT;",
                "  #1397 = Utf8               Ljava/lang/Deprecated;",
                "  #1398 = Utf8               since",
                "  #1399 = Utf8               9",
                "  #1400 = Utf8               Ljdk/internal/vm/annotation/IntrinsicCandidate;",
                "  #1401 = Utf8               (Ljava/lang/Class<*>;)Z",
                "  #1402 = Utf8               Ljdk/internal/vm/annotation/ForceInline;",
                "  #1403 = Utf8               getClassLoader0",
                "  #1404 = Utf8               getClassData",
                "  #1405 = Utf8               info",
                "  #1406 = Utf8               ()[Ljava/lang/reflect/TypeVariable<Ljava/lang/Class<TT;>;>;",
                "  #1407 = Utf8               ()Ljava/lang/Class<-TT;>;",
                "  #1408 = Utf8               getGenericSuperclass",
                "  #1409 = Utf8               getPackage",
                "  #1410 = Utf8               ()Ljava/lang/Package;",
                "  #1412 = Utf8               java/lang/Package",
                "  #1413 = Utf8               cn",
                "  #1414 = Utf8               dot",
                "  #1415 = Utf8               pn",
                "  #1416 = Utf8               ()[Ljava/lang/Class<*>;",
                "  #1417 = Utf8               cloneArray",
                "  #1418 = Utf8               rd",
                "  #1419 = Utf8               Ljava/lang/Class$ReflectionData;",
                "  #1420 = Utf8               Ljava/lang/Class$ReflectionData<TT;>;",
                "  #1421 = Utf8               (Z)[Ljava/lang/Class<*>;",
                "  #1422 = Utf8               getGenericInterfaces",
                "  #1423 = Utf8               ()Ljava/lang/Class<*>;",
                "  #1424 = Utf8               accessFlags",
                "  #1425 = Utf8               location",
                "  #1426 = Utf8               ()Ljava/util/Set<Ljava/lang/reflect/AccessFlag;>;",
                "  #1427 = Utf8               getSigners",
                "  #1428 = Utf8               setSigners",
                "  #1429 = Utf8               getEnclosingMethod",
                "  #1430 = Utf8               i",
                "  #1431 = Utf8               m",
                "  #1432 = Utf8               Ljava/lang/reflect/Method;",
                "  #1433 = Utf8               typeInfo",
                "  #1434 = Utf8               Lsun/reflect/generics/repository/MethodRepository;",
                "  #1435 = Utf8               returnType",
                "  #1436 = Utf8               parameterTypes",
                "  #1437 = Utf8               parameterClasses",
                "  #1438 = Utf8               enclosingCandidate",
                "  #1439 = Utf8               candidates",
                "  #1440 = Utf8               fact",
                "  #1441 = Utf8               enclosingInfo",
                "  #1442 = Utf8               Ljava/lang/Class$EnclosingMethodInfo;",
                "  #1444 = Utf8               o",
                "  #1445 = Utf8               Ljava/lang/reflect/Type;",
                "  #1446 = Utf8               (Ljava/lang/reflect/Type;)Ljava/lang/Class<*>;",
                "  #1447 = Utf8               getEnclosingConstructor",
                "  #1448 = Utf8               ()Ljava/lang/reflect/Constructor;",
                "  #1449 = Utf8               Lsun/reflect/generics/repository/ConstructorRepository;",
                "  #1450 = Utf8               Ljava/lang/reflect/Constructor<*>;",
                "  #1451 = Utf8               [Ljava/lang/reflect/Constructor<*>;",
                "  #1452 = Utf8               ()Ljava/lang/reflect/Constructor<*>;",
                "  #1453 = Utf8               getDeclaringClass",
                "  #1454 = Utf8               candidate",
                "  #1455 = Utf8               enclosingClass",
                "  #1456 = Utf8               getTypeName",
                "  #1457 = Utf8               dimensions",
                "  #1458 = Utf8               enclosingName",
                "  #1459 = Utf8               Ljdk/internal/javac/PreviewFeature;",
                "  #1460 = Utf8               feature",
                "  #1461 = Utf8               Ljdk/internal/javac/PreviewFeature$Feature;",
                "  #1462 = Utf8               UNNAMED_CLASSES",
                "  #1463 = Utf8               reflective",
                "  #1465 = Utf8               getClasses",
                "  #1466 = Utf8               getFields",
                "  #1467 = Utf8               getMethods",
                "  #1468 = Utf8               getConstructors",
                "  #1469 = Utf8               ()[Ljava/lang/reflect/Constructor;",
                "  #1470 = Utf8               ()[Ljava/lang/reflect/Constructor<*>;",
                "  #1471 = Utf8               getField",
                "  #1472 = Utf8               field",
                "  #1473 = Utf8               Ljava/lang/reflect/Field;",
                "  #1474 = Utf8               method",
                "  #1475 = Utf8               (Ljava/lang/String;[Ljava/lang/Class<*>;)Ljava/lang/reflect/Method;",
                "  #1476 = Utf8               getConstructor",
                "  #1477 = Utf8               ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;",
                "  #1478 = Utf8               ([Ljava/lang/Class<*>;)Ljava/lang/reflect/Constructor<TT;>;",
                "  #1479 = Utf8               getDeclaredClasses",
                "  #1480 = Utf8               getDeclaredFields",
                "  #1481 = Utf8               getRecordComponents",
                "  #1482 = Utf8               getDeclaredMethods",
                "  #1483 = Utf8               getDeclaredConstructors",
                "  #1484 = Utf8               getDeclaredField",
                "  #1485 = Utf8               getDeclaredMethod",
                "  #1486 = Utf8               getDeclaredPublicMethods",
                "  #1487 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/util/List;",
                "  #1488 = Utf8               methods",
                "  #1489 = Utf8               factory",
                "  #1490 = Utf8               result",
                "  #1491 = Utf8               Ljava/util/List;",
                "  #1492 = Utf8               Ljava/util/List<Ljava/lang/reflect/Method;>;",
                "  #1493 = Utf8               (Ljava/lang/String;[Ljava/lang/Class<*>;)Ljava/util/List<Ljava/lang/reflect/Method;>;",
                "  #1494 = Utf8               getDeclaredConstructor",
                "  #1495 = Utf8               url",
                "  #1496 = Utf8               Ljava/net/URL;",
                "  #1497 = Utf8               Ljava/lang/Exception;",
                "  #1498 = Utf8               mn",
                "  #1499 = Utf8               thisModule",
                "  #1501 = Utf8               java/io/InputStream",
                "  #1503 = Utf8               java/lang/Exception",
                "  #1504 = Utf8               ioe",
                "  #1505 = Utf8               Ljava/io/IOException;",
                "  #1506 = Utf8               callerModule",
                "  #1507 = Utf8               (Ljava/lang/String;Ljava/lang/Class<*>;)Z",
                "  #1508 = Utf8               getProtectionDomain",
                "  #1509 = Utf8               perms",
                "  #1510 = Utf8               Ljava/security/Permissions;",
                "  #1511 = Utf8               pd",
                "  #1512 = Utf8               getPrimitiveClass",
                "  #1513 = Utf8               which",
                "  #1514 = Utf8               checkProxyInterfaces",
                "  #1515 = Utf8               (Ljava/lang/SecurityManager;ILjava/lang/Class<*>;Z)V",
                "  #1516 = Utf8               pkg",
                "  #1517 = Utf8               Ljava/util/Set;",
                "  #1518 = Utf8               subClasses",
                "  #1519 = Utf8               Ljava/util/Set<Ljava/lang/String;>;",
                "  #1520 = Utf8               (Ljava/lang/SecurityManager;Ljava/lang/ClassLoader;[Ljava/lang/Class<*>;)V",
                "  #1521 = Utf8               len",
                "  #1522 = Utf8               baseName",
                "  #1523 = Utf8               ()Ljava/lang/Class$ReflectionData<TT;>;",
                "  #1524 = Utf8               oldReflectionData",
                "  #1525 = Utf8               (Ljava/lang/ref/SoftReference<Ljava/lang/Class$ReflectionData<TT;>;>;I)Ljava/lang/Class$ReflectionData<TT;>;",
                "  #1526 = Utf8               signature",
                "  #1527 = Utf8               ex",
                "  #1528 = Utf8               Ljava/lang/reflect/Executable;",
                "  #1529 = Utf8               res",
                "  #1530 = Utf8               publicOnly",
                "  #1531 = Utf8               si",
                "  #1532 = Utf8               fields",
                "  #1533 = Utf8               Ljava/util/LinkedHashSet;",
                "  #1534 = Utf8               sc",
                "  #1535 = Utf8               Ljava/util/LinkedHashSet<Ljava/lang/reflect/Field;>;",
                "  #1536 = Utf8               f",
                "  #1537 = Utf8               Ljava/util/Collection;",
                "  #1538 = Utf8               Ljava/util/Collection<Ljava/lang/reflect/Field;>;",
                "  #1539 = Utf8               (Ljava/util/Collection<Ljava/lang/reflect/Field;>;[Ljava/lang/reflect/Field;)V",
                "  #1540 = Utf8               temporaryRes",
                "  #1541 = Utf8               [Ljava/lang/reflect/Constructor<TT;>;",
                "  #1542 = Utf8               (Z)[Ljava/lang/reflect/Constructor<TT;>;",
                "  #1543 = Utf8               intf",
                "  #1544 = Utf8               pms",
                "  #1545 = Utf8               Ljava/lang/PublicMethods;",
                "  #1546 = Utf8               ([Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Class<*>;)Ljava/lang/reflect/Method;",
                "  #1547 = Utf8               Ljava/lang/PublicMethods$MethodList;",
                "  #1548 = Utf8               includeStatic",
                "  #1549 = Utf8               (Ljava/lang/String;[Ljava/lang/Class<*>;Z)Ljava/lang/PublicMethods$MethodList;",
                "  #1550 = Utf8               constructor",
                "  #1551 = Utf8               constructors",
                "  #1552 = Utf8               ([Ljava/lang/Class<*>;I)Ljava/lang/reflect/Constructor<TT;>;",
                "  #1553 = Utf8               a1",
                "  #1554 = Utf8               a2",
                "  #1555 = Utf8               arg",
                "  #1556 = Utf8               out",
                "  #1557 = Utf8               [Ljava/lang/reflect/Constructor<TU;>;",
                "  #1558 = Utf8               <U:Ljava/lang/Object;>([Ljava/lang/reflect/Constructor<TU;>;)[Ljava/lang/reflect/Constructor<TU;>;",
                "  #1559 = Utf8               argTypes",
                "  #1560 = Utf8               (Ljava/lang/String;[Ljava/lang/Class<*>;)Ljava/lang/String;",
                "  #1561 = Utf8               getEnumConstants",
                "  #1562 = Utf8               ()[TT;",
                "  #1563 = Utf8               temporaryConstants",
                "  #1564 = Utf8               constants",
                "  #1565 = Utf8               ()Ljava/util/Map;",
                "  #1566 = Utf8               constant",
                "  #1567 = Utf8               universe",
                "  #1568 = Utf8               directory",
                "  #1569 = Utf8               TT;",
                "  #1570 = Utf8               ()Ljava/util/Map<Ljava/lang/String;TT;>;",
                "  #1571 = Utf8               cast",
                "  #1572 = Utf8               obj",
                "  #1573 = Utf8               (Ljava/lang/Object;)TT;",
                "  #1574 = Utf8               asSubclass",
                "  #1575 = Utf8               (Ljava/lang/Class;)Ljava/lang/Class;",
                "  #1576 = Utf8               clazz",
                "  #1577 = Utf8               Ljava/lang/Class<TU;>;",
                "  #1578 = Utf8               <U:Ljava/lang/Object;>(Ljava/lang/Class<TU;>;)Ljava/lang/Class<+TU;>;",
                "  #1579 = Utf8               getAnnotation",
                "  #1580 = Utf8               (Ljava/lang/Class;)Ljava/lang/annotation/Annotation;",
                "  #1581 = Utf8               annotationClass",
                "  #1582 = Utf8               Ljava/lang/Class<TA;>;",
                "  #1583 = Utf8               <A::Ljava/lang/annotation/Annotation;>(Ljava/lang/Class<TA;>;)TA;",
                "  #1584 = Utf8               Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;",
                "  #1585 = Utf8               (Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;)Z",
                "  #1586 = Utf8               getAnnotationsByType",
                "  #1587 = Utf8               (Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;",
                "  #1588 = Utf8               <A::Ljava/lang/annotation/Annotation;>(Ljava/lang/Class<TA;>;)[TA;",
                "  #1589 = Utf8               getAnnotations",
                "  #1590 = Utf8               ()[Ljava/lang/annotation/Annotation;",
                "  #1591 = Utf8               getDeclaredAnnotation",
                "  #1592 = Utf8               getDeclaredAnnotationsByType",
                "  #1593 = Utf8               getDeclaredAnnotations",
                "  #1594 = Utf8               newAnnotationData",
                "  #1595 = Utf8               Ljava/util/Map$Entry;",
                "  #1596 = Utf8               superAnnotations",
                "  #1597 = Utf8               superClass",
                "  #1598 = Utf8               Ljava/util/Map$Entry<Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;Ljava/lang/annotation/Annotation;>;",
                "  #1599 = Utf8               Ljava/util/Map<Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;Ljava/lang/annotation/Annotation;>;",
                "  #1600 = Utf8               (Lsun/reflect/annotation/AnnotationType;Lsun/reflect/annotation/AnnotationType;)Z",
                "  #1601 = Utf8               oldType",
                "  #1602 = Utf8               newType",
                "  #1603 = Utf8               getAnnotationType",
                "  #1604 = Utf8               ()Lsun/reflect/annotation/AnnotationType;",
                "  #1605 = Utf8               getDeclaredAnnotationMap",
                "  #1606 = Utf8               ()Ljava/util/Map<Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;Ljava/lang/annotation/Annotation;>;",
                "  #1607 = Utf8               getAnnotatedSuperclass",
                "  #1608 = Utf8               ()Ljava/lang/reflect/AnnotatedType;",
                "  #1609 = Utf8               getAnnotatedInterfaces",
                "  #1610 = Utf8               ()[Ljava/lang/reflect/AnnotatedType;",
                "  #1611 = Utf8               host",
                "  #1612 = Utf8               isNestmateOf",
                "  #1613 = Utf8               getNestMembers",
                "  #1614 = Utf8               members",
                "  #1615 = Utf8               index",
                "  #1616 = Utf8               iae",
                "  #1617 = Utf8               Ljava/lang/IllegalArgumentException;",
                "  #1618 = Utf8               describeConstable",
                "  #1619 = Utf8               ()Ljava/util/Optional<Ljava/lang/constant/ClassDesc;>;",
                "  #1620 = Utf8               isSealed",
                "  #1621 = Utf8               getClassFileVersion",
                "  #1622 = Utf8               ()Ljava/lang/invoke/TypeDescriptor$OfField;",
                "  #1623 = Utf8               lambda$getPermittedSubclasses$2",
                "  #1624 = Utf8               (I)[Ljava/lang/Class;",
                "  #1625 = Utf8               s",
                "  #1626 = Utf8               lambda$getPermittedSubclasses$1",
                "  #1627 = Utf8               lambda$methodToString$0",
                "  #1628 = Utf8               (Ljava/lang/Class;)Ljava/lang/String;",
                "  #1629 = Utf8               <clinit>",
                "  #1630 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;Ljava/lang/reflect/GenericDeclaration;Ljava/lang/reflect/Type;Ljava/lang/reflect/AnnotatedElement;Ljava/lang/invoke/TypeDescriptor$OfField<Ljava/lang/Class<*>;>;Ljava/lang/constant/Constable;",
                "  #1631 = Utf8               SourceFile",
                "  #1632 = Utf8               Class.java",
                "  #1633 = Utf8               NestMembers",
                "  #1634 = Utf8               BootstrapMethods",
                "  #1644 = Utf8               (Ljava/lang/reflect/Type;)Ljava/lang/String;",
                "  #1659 = Utf8               (I)Ljava/lang/Object;",
                "  #1668 = Utf8               java/lang/invoke/LambdaMetafactory",
                "  #1669 = Utf8               metafactory",
                "  #1670 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;",
                "  #1671 = Utf8               InnerClasses",
                "  #1672 = Utf8               ReflectionData",
                "  #1673 = Utf8               Location",
                "  #1674 = Utf8               EnclosingMethodInfo",
                "  #1675 = Utf8               Atomic",
                "  #1676 = Utf8               MethodList",
                "  #1677 = Utf8               GetReflectionFactoryAction",
                "  #1678 = Utf8               AnnotationData",
                "  #1679 = Utf8               Entry",
                "  #1681 = Utf8               java/lang/invoke/TypeDescriptor",
                "  #1682 = Utf8               OfField",
                "  #1684 = Utf8               java/lang/ClassValue$ClassValueMap",
                "  #1686 = Utf8               java/lang/ClassValue",
                "  #1687 = Utf8               ClassValueMap",
                "  #1689 = Utf8               jdk/internal/javac/PreviewFeature$Feature",
                "  #1691 = Utf8               jdk/internal/javac/PreviewFeature",
                "  #1692 = Utf8               Feature",
                "  #1694 = Utf8               java/lang/invoke/MethodHandles$Lookup",
                "  #1696 = Utf8               java/lang/invoke/MethodHandles",
                "  #1697 = Utf8               Lookup"
        );
    }
}
