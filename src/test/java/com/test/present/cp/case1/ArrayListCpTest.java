package com.test.present.cp.case1;

import com.test.present.cp.ConstantPoolPresenterTestBase;
import org.junit.Before;
import org.junit.Test;

import java.io.IOException;
import java.util.List;

public class ArrayListCpTest extends ConstantPoolPresenterTestBase {

    @Before
    public void prepare() throws IOException, ClassNotFoundException {
        buildRealLines(Class.forName("java.util.ArrayList"));
    }

    @Test
    public void test() {
        expectedLines = List.of(
                "    #4 = Utf8               java/util/AbstractList",
                "    #5 = Utf8               <init>",
                "    #6 = Utf8               ()V",
                "    #8 = Utf8               java/lang/Object",
                "   #12 = Utf8               java/util/ArrayList",
                "   #13 = Utf8               elementData",
                "   #14 = Utf8               [Ljava/lang/Object;",
                "   #17 = Utf8               EMPTY_ELEMENTDATA",
                "   #19 = Utf8               java/lang/IllegalArgumentException",
                "   #21 = Utf8               java/lang/StringBuilder",
                "   #24 = Utf8               Illegal Capacity:",
                "   #27 = Utf8               append",
                "   #28 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "   #31 = Utf8               (I)Ljava/lang/StringBuilder;",
                "   #34 = Utf8               toString",
                "   #35 = Utf8               ()Ljava/lang/String;",
                "   #38 = Utf8               (Ljava/lang/String;)V",
                "   #41 = Utf8               DEFAULTCAPACITY_EMPTY_ELEMENTDATA",
                "   #45 = Utf8               java/util/Collection",
                "   #46 = Utf8               toArray",
                "   #47 = Utf8               ()[Ljava/lang/Object;",
                "   #50 = Utf8               size",
                "   #51 = Utf8               I",
                "   #54 = Utf8               getClass",
                "   #55 = Utf8               ()Ljava/lang/Class;",
                "   #60 = Utf8               java/util/Arrays",
                "   #61 = Utf8               copyOf",
                "   #62 = Utf8               ([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;",
                "   #65 = Utf8               modCount",
                "   #68 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;",
                "   #71 = Utf8               grow",
                "   #72 = Utf8               (I)[Ljava/lang/Object;",
                "   #76 = Utf8               jdk/internal/util/ArraysSupport",
                "   #77 = Utf8               newLength",
                "   #78 = Utf8               (III)I",
                "   #82 = Utf8               java/lang/Math",
                "   #83 = Utf8               max",
                "   #84 = Utf8               (II)I",
                "   #87 = Utf8               indexOf",
                "   #88 = Utf8               (Ljava/lang/Object;)I",
                "   #91 = Utf8               indexOfRange",
                "   #92 = Utf8               (Ljava/lang/Object;II)I",
                "   #95 = Utf8               equals",
                "   #96 = Utf8               (Ljava/lang/Object;)Z",
                "   #99 = Utf8               lastIndexOfRange",
                "  #102 = Utf8               clone",
                "  #103 = Utf8               ()Ljava/lang/Object;",
                "  #105 = Utf8               java/lang/CloneNotSupportedException",
                "  #107 = Utf8               java/lang/InternalError",
                "  #110 = Utf8               (Ljava/lang/Throwable;)V",
                "  #115 = Utf8               java/lang/System",
                "  #116 = Utf8               arraycopy",
                "  #117 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V",
                "  #121 = Utf8               java/util/Objects",
                "  #122 = Utf8               checkIndex",
                "  #125 = Utf8               (I)Ljava/lang/Object;",
                "  #127 = Utf8               java/util/NoSuchElementException",
                "  #133 = Utf8               add",
                "  #134 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;I)V",
                "  #137 = Utf8               rangeCheckForAdd",
                "  #138 = Utf8               (I)V",
                "  #141 = Utf8               (ILjava/lang/Object;)V",
                "  #146 = Utf8               fastRemove",
                "  #147 = Utf8               ([Ljava/lang/Object;I)V",
                "  #149 = Utf8               java/util/List",
                "  #152 = Utf8               equalsArrayList",
                "  #153 = Utf8               (Ljava/util/ArrayList;)Z",
                "  #156 = Utf8               equalsRange",
                "  #157 = Utf8               (Ljava/util/List;II)Z",
                "  #160 = Utf8               checkForComodification",
                "  #162 = Utf8               java/util/ConcurrentModificationException",
                "  #166 = Utf8               iterator",
                "  #167 = Utf8               ()Ljava/util/Iterator;",
                "  #171 = Utf8               java/util/Iterator",
                "  #172 = Utf8               hasNext",
                "  #173 = Utf8               ()Z",
                "  #176 = Utf8               next",
                "  #179 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z",
                "  #182 = Utf8               hashCodeRange",
                "  #185 = Utf8               hashCode",
                "  #186 = Utf8               ()I",
                "  #188 = Utf8               java/lang/IndexOutOfBoundsException",
                "  #191 = Utf8               outOfBoundsMsg",
                "  #192 = Utf8               (II)Ljava/lang/String;",
                "  #196 = Utf8               shiftTailOverGap",
                "  #197 = Utf8               ([Ljava/lang/Object;II)V",
                "  #200 = Utf8               (I)Ljava/lang/String;",
                "  #202 = Utf8               Index:",
                "  #204 = Utf8               , Size:",
                "  #206 = Utf8               From Index:",
                "  #208 = Utf8                > To Index:",
                "  #211 = Utf8               batchRemove",
                "  #212 = Utf8               (Ljava/util/Collection;ZII)Z",
                "  #215 = Utf8               requireNonNull",
                "  #216 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;",
                "  #219 = Utf8               contains",
                "  #221 = Utf8               java/lang/Throwable",
                "  #225 = Utf8               java/io/ObjectOutputStream",
                "  #226 = Utf8               defaultWriteObject",
                "  #229 = Utf8               writeInt",
                "  #232 = Utf8               writeObject",
                "  #233 = Utf8               (Ljava/lang/Object;)V",
                "  #237 = Utf8               java/io/ObjectInputStream",
                "  #238 = Utf8               defaultReadObject",
                "  #241 = Utf8               readInt",
                "  #245 = Utf8               jdk/internal/access/SharedSecrets",
                "  #246 = Utf8               getJavaObjectInputStreamAccess",
                "  #247 = Utf8               ()Ljdk/internal/access/JavaObjectInputStreamAccess;",
                "  #251 = Utf8               jdk/internal/access/JavaObjectInputStreamAccess",
                "  #252 = Utf8               checkArray",
                "  #253 = Utf8               (Ljava/io/ObjectInputStream;Ljava/lang/Class;I)V",
                "  #256 = Utf8               readObject",
                "  #258 = Utf8               java/io/InvalidObjectException",
                "  #260 = Utf8               Invalid size:",
                "  #263 = Utf8               java/util/ArrayList$ListItr",
                "  #266 = Utf8               (Ljava/util/ArrayList;I)V",
                "  #268 = Utf8               java/util/ArrayList$Itr",
                "  #271 = Utf8               (Ljava/util/ArrayList;)V",
                "  #274 = Utf8               subListRangeCheck",
                "  #275 = Utf8               (III)V",
                "  #277 = Utf8               java/util/ArrayList$SubList",
                "  #280 = Utf8               (Ljava/util/ArrayList;II)V",
                "  #283 = Utf8               elementAt",
                "  #284 = Utf8               ([Ljava/lang/Object;I)Ljava/lang/Object;",
                "  #288 = Utf8               java/util/function/Consumer",
                "  #289 = Utf8               accept",
                "  #291 = Utf8               java/util/ArrayList$ArrayListSpliterator",
                "  #294 = Utf8               (Ljava/util/ArrayList;III)V",
                "  #297 = Utf8               removeIf",
                "  #298 = Utf8               (Ljava/util/function/Predicate;II)Z",
                "  #302 = Utf8               java/util/function/Predicate",
                "  #303 = Utf8               test",
                "  #306 = Utf8               nBits",
                "  #307 = Utf8               (I)[J",
                "  #310 = Utf8               setBit",
                "  #311 = Utf8               ([JI)V",
                "  #314 = Utf8               isClear",
                "  #315 = Utf8               ([JI)Z",
                "  #318 = Utf8               replaceAllRange",
                "  #319 = Utf8               (Ljava/util/function/UnaryOperator;II)V",
                "  #323 = Utf8               java/util/function/UnaryOperator",
                "  #324 = Utf8               apply",
                "  #327 = Utf8               sort",
                "  #328 = Utf8               ([Ljava/lang/Object;IILjava/util/Comparator;)V",
                "  #330 = Utf8               java/util/RandomAccess",
                "  #332 = Utf8               java/lang/Cloneable",
                "  #334 = Utf8               java/io/Serializable",
                "  #335 = Utf8               serialVersionUID",
                "  #336 = Utf8               J",
                "  #337 = Utf8               ConstantValue",
                "  #340 = Utf8               DEFAULT_CAPACITY",
                "  #342 = Utf8               Code",
                "  #343 = Utf8               LineNumberTable",
                "  #344 = Utf8               LocalVariableTable",
                "  #345 = Utf8               this",
                "  #346 = Utf8               Ljava/util/ArrayList;",
                "  #347 = Utf8               initialCapacity",
                "  #348 = Utf8               LocalVariableTypeTable",
                "  #349 = Utf8               Ljava/util/ArrayList<TE;>;",
                "  #350 = Utf8               StackMapTable",
                "  #351 = Utf8               (Ljava/util/Collection;)V",
                "  #352 = Utf8               c",
                "  #353 = Utf8               Ljava/util/Collection;",
                "  #354 = Utf8               a",
                "  #355 = Utf8               Ljava/util/Collection<+TE;>;",
                "  #356 = Utf8               Signature",
                "  #357 = Utf8               (Ljava/util/Collection<+TE;>;)V",
                "  #358 = Utf8               trimToSize",
                "  #359 = Utf8               ensureCapacity",
                "  #360 = Utf8               minCapacity",
                "  #361 = Utf8               newCapacity",
                "  #362 = Utf8               oldCapacity",
                "  #363 = Utf8               isEmpty",
                "  #364 = Utf8               o",
                "  #365 = Utf8               Ljava/lang/Object;",
                "  #366 = Utf8               i",
                "  #367 = Utf8               start",
                "  #368 = Utf8               end",
                "  #369 = Utf8               es",
                "  #370 = Utf8               lastIndexOf",
                "  #371 = Utf8               v",
                "  #372 = Utf8               e",
                "  #373 = Utf8               Ljava/lang/CloneNotSupportedException;",
                "  #374 = Utf8               Ljava/util/ArrayList<*>;",
                "  #375 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;",
                "  #376 = Utf8               [TT;",
                "  #377 = Utf8               <T:Ljava/lang/Object;>([TT;)[TT;",
                "  #378 = Utf8               index",
                "  #379 = Utf8               (I)TE;",
                "  #380 = Utf8               <E:Ljava/lang/Object;>([Ljava/lang/Object;I)TE;",
                "  #381 = Utf8               get",
                "  #382 = Utf8               getFirst",
                "  #383 = Utf8               ()TE;",
                "  #384 = Utf8               getLast",
                "  #385 = Utf8               last",
                "  #386 = Utf8               set",
                "  #387 = Utf8               (ILjava/lang/Object;)Ljava/lang/Object;",
                "  #388 = Utf8               element",
                "  #389 = Utf8               oldValue",
                "  #390 = Utf8               TE;",
                "  #391 = Utf8               (ITE;)TE;",
                "  #392 = Utf8               s",
                "  #393 = Utf8               (TE;[Ljava/lang/Object;I)V",
                "  #394 = Utf8               (TE;)Z",
                "  #395 = Utf8               (ITE;)V",
                "  #396 = Utf8               addFirst",
                "  #397 = Utf8               (TE;)V",
                "  #398 = Utf8               addLast",
                "  #399 = Utf8               remove",
                "  #400 = Utf8               removeFirst",
                "  #401 = Utf8               removeLast",
                "  #402 = Utf8               expectedModCount",
                "  #403 = Utf8               equal",
                "  #404 = Utf8               Z",
                "  #405 = Utf8               other",
                "  #406 = Utf8               Ljava/util/List;",
                "  #407 = Utf8               from",
                "  #408 = Utf8               to",
                "  #409 = Utf8               oit",
                "  #410 = Utf8               Ljava/util/Iterator;",
                "  #411 = Utf8               Ljava/util/List<*>;",
                "  #412 = Utf8               Ljava/util/Iterator<*>;",
                "  #413 = Utf8               (Ljava/util/List<*>;II)Z",
                "  #414 = Utf8               otherEs",
                "  #415 = Utf8               otherModCount",
                "  #416 = Utf8               (Ljava/util/ArrayList<*>;)Z",
                "  #417 = Utf8               hash",
                "  #418 = Utf8               newSize",
                "  #419 = Utf8               clear",
                "  #420 = Utf8               addAll",
                "  #421 = Utf8               (Ljava/util/Collection;)Z",
                "  #422 = Utf8               numNew",
                "  #423 = Utf8               (Ljava/util/Collection<+TE;>;)Z",
                "  #424 = Utf8               (ILjava/util/Collection;)Z",
                "  #425 = Utf8               numMoved",
                "  #426 = Utf8               (ILjava/util/Collection<+TE;>;)Z",
                "  #427 = Utf8               removeRange",
                "  #428 = Utf8               (II)V",
                "  #429 = Utf8               fromIndex",
                "  #430 = Utf8               toIndex",
                "  #431 = Utf8               lo",
                "  #432 = Utf8               hi",
                "  #433 = Utf8               removeAll",
                "  #434 = Utf8               Ljava/util/Collection<*>;",
                "  #435 = Utf8               (Ljava/util/Collection<*>;)Z",
                "  #436 = Utf8               retainAll",
                "  #437 = Utf8               ex",
                "  #438 = Utf8               Ljava/lang/Throwable;",
                "  #439 = Utf8               complement",
                "  #440 = Utf8               r",
                "  #441 = Utf8               w",
                "  #442 = Utf8               (Ljava/util/Collection<*>;ZII)Z",
                "  #443 = Utf8               (Ljava/io/ObjectOutputStream;)V",
                "  #444 = Utf8               Ljava/io/ObjectOutputStream;",
                "  #445 = Utf8               Exceptions",
                "  #447 = Utf8               java/io/IOException",
                "  #448 = Utf8               (Ljava/io/ObjectInputStream;)V",
                "  #449 = Utf8               elements",
                "  #450 = Utf8               Ljava/io/ObjectInputStream;",
                "  #452 = Utf8               java/lang/ClassNotFoundException",
                "  #453 = Utf8               listIterator",
                "  #454 = Utf8               (I)Ljava/util/ListIterator;",
                "  #455 = Utf8               (I)Ljava/util/ListIterator<TE;>;",
                "  #456 = Utf8               ()Ljava/util/ListIterator;",
                "  #457 = Utf8               ()Ljava/util/ListIterator<TE;>;",
                "  #458 = Utf8               ()Ljava/util/Iterator<TE;>;",
                "  #459 = Utf8               subList",
                "  #460 = Utf8               (II)Ljava/util/List;",
                "  #461 = Utf8               (II)Ljava/util/List<TE;>;",
                "  #462 = Utf8               forEach",
                "  #463 = Utf8               (Ljava/util/function/Consumer;)V",
                "  #464 = Utf8               action",
                "  #465 = Utf8               Ljava/util/function/Consumer;",
                "  #466 = Utf8               Ljava/util/function/Consumer<-TE;>;",
                "  #467 = Utf8               (Ljava/util/function/Consumer<-TE;>;)V",
                "  #468 = Utf8               spliterator",
                "  #469 = Utf8               ()Ljava/util/Spliterator;",
                "  #470 = Utf8               ()Ljava/util/Spliterator<TE;>;",
                "  #471 = Utf8               n",
                "  #472 = Utf8               bits",
                "  #473 = Utf8               [J",
                "  #474 = Utf8               (Ljava/util/function/Predicate;)Z",
                "  #475 = Utf8               filter",
                "  #476 = Utf8               Ljava/util/function/Predicate;",
                "  #477 = Utf8               Ljava/util/function/Predicate<-TE;>;",
                "  #478 = Utf8               (Ljava/util/function/Predicate<-TE;>;)Z",
                "  #479 = Utf8               beg",
                "  #480 = Utf8               deathRow",
                "  #482 = Utf8               (Ljava/util/function/Predicate<-TE;>;II)Z",
                "  #483 = Utf8               replaceAll",
                "  #484 = Utf8               (Ljava/util/function/UnaryOperator;)V",
                "  #485 = Utf8               operator",
                "  #486 = Utf8               Ljava/util/function/UnaryOperator;",
                "  #487 = Utf8               Ljava/util/function/UnaryOperator<TE;>;",
                "  #488 = Utf8               (Ljava/util/function/UnaryOperator<TE;>;)V",
                "  #489 = Utf8               (Ljava/util/function/UnaryOperator<TE;>;II)V",
                "  #490 = Utf8               (Ljava/util/Comparator;)V",
                "  #491 = Utf8               Ljava/util/Comparator;",
                "  #492 = Utf8               Ljava/util/Comparator<-TE;>;",
                "  #493 = Utf8               (Ljava/util/Comparator<-TE;>;)V",
                "  #494 = Utf8               checkInvariants",
                "  #495 = Utf8               <clinit>",
                "  #496 = Utf8               <E:Ljava/lang/Object;>Ljava/util/AbstractList<TE;>;Ljava/util/List<TE;>;Ljava/util/RandomAccess;Ljava/lang/Cloneable;Ljava/io/Serializable;",
                "  #497 = Utf8               SourceFile",
                "  #498 = Utf8               ArrayList.java",
                "  #499 = Utf8               NestMembers",
                "  #501 = Utf8               java/util/ArrayList$SubList$2",
                "  #503 = Utf8               java/util/ArrayList$SubList$1",
                "  #504 = Utf8               InnerClasses",
                "  #505 = Utf8               ListItr",
                "  #506 = Utf8               Itr",
                "  #507 = Utf8               SubList",
                "  #508 = Utf8               ArrayListSpliterator"
        );
    }
}
