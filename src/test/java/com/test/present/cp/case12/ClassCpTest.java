package com.test.present.cp.case12;

import com.test.present.cp.ConstantPoolPresenterTestBase;
import org.junit.Before;
import org.junit.Test;

import java.io.IOException;
import java.util.List;

public class ClassCpTest extends ConstantPoolPresenterTestBase {

    @Before
    public void prepare() throws IOException, ClassNotFoundException {
        buildRealLines(Class.forName("java.lang.Class"));
    }

    @Test
    public void test() {
        expectedLines = List.of(
                "     #3 = NameAndType        #5:#6        // \"<init>\":()V",
                "     #9 = NameAndType        #11:#12      // classLoader:Ljava/lang/ClassLoader;",
                "    #14 = NameAndType        #15:#16      // componentType:Ljava/lang/Class;",
                "    #18 = NameAndType        #19:#20      // isInterface:()Z",
                "    #24 = NameAndType        #25:#20      // isPrimitive:()Z",
                "    #31 = NameAndType        #32:#33      // getName:()Ljava/lang/String;",
                "    #36 = NameAndType        #38:#39      // concat:(Ljava/lang/String;)Ljava/lang/String;",
                "    #41 = NameAndType        #42:#33      // toString:()Ljava/lang/String;",
                "    #47 = NameAndType        #48:#20      // isArray:()Z",
                "    #50 = NameAndType        #51:#52      // getComponentType:()Ljava/lang/Class;",
                "    #54 = NameAndType        #55:#56      // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;",
                "    #58 = NameAndType        #59:#60      // getModifiers:()I",
                "    #63 = NameAndType        #65:#60      // classModifiers:()I",
                "    #67 = NameAndType        #42:#68      // toString:(I)Ljava/lang/String;",
                "    #70 = NameAndType        #55:#71      // append:(C)Ljava/lang/StringBuilder;",
                "    #73 = NameAndType        #74:#20      // isAnnotation:()Z",
                "    #78 = NameAndType        #79:#20      // isEnum:()Z",
                "    #83 = NameAndType        #84:#20      // isRecord:()Z",
                "    #90 = NameAndType        #91:#92      // getTypeParameters:()[Ljava/lang/reflect/TypeVariable;",
                "    #95 = NameAndType        #97:#98      // stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;",
                "   #100 = NameAndType        #101:#102    // apply:()Ljava/util/function/Function;",
                "   #105 = NameAndType        #107:#108    // map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;",
                "   #117 = NameAndType        #119:#120    // joining:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;",
                "   #122 = NameAndType        #123:#124    // collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;",
                "   #128 = NameAndType        #129:#68     // repeat:(I)Ljava/lang/String;",
                "   #133 = NameAndType        #135:#136    // getBounds:()[Ljava/lang/reflect/Type;",
                "   #139 = NameAndType        #141:#142    // equals:(Ljava/lang/Object;)Z",
                "   #150 = NameAndType        #119:#151    // joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;",
                "   #154 = NameAndType        #156:#52     // getCallerClass:()Ljava/lang/Class;",
                "   #158 = NameAndType        #159:#160    // forName:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;",
                "   #163 = NameAndType        #165:#166    // getSystemClassLoader:()Ljava/lang/ClassLoader;",
                "   #168 = NameAndType        #169:#170    // getClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;",
                "   #172 = NameAndType        #173:#174    // forName0:(Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;",
                "   #177 = NameAndType        #179:#180    // getSecurityManager:()Ljava/lang/SecurityManager;",
                "   #182 = NameAndType        #159:#174    // forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;",
                "   #185 = NameAndType        #187:#188    // GET_CLASSLOADER_PERMISSION:Ljava/lang/RuntimePermission;",
                "   #191 = NameAndType        #193:#194    // checkPermission:(Ljava/security/Permission;)V",
                "   #196 = NameAndType        #159:#197    // forName:(Ljava/lang/Module;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;",
                "   #200 = NameAndType        #202:#203    // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;",
                "   #205 = NameAndType        #206:#207    // getModule:()Ljava/lang/Module;",
                "   #209 = NameAndType        #210:#211    // run:(Ljava/lang/Module;)Ljava/security/PrivilegedAction;",
                "   #214 = NameAndType        #216:#217    // doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;",
                "   #220 = NameAndType        #169:#166    // getClassLoader:()Ljava/lang/ClassLoader;",
                "   #223 = NameAndType        #224:#225    // loadClass:(Ljava/lang/Module;Ljava/lang/String;)Ljava/lang/Class;",
                "   #232 = NameAndType        #233:#234    // checkMemberAccess:(Ljava/lang/SecurityManager;ILjava/lang/Class;Z)V",
                "   #236 = NameAndType        #237:#238    // cachedConstructor:Ljava/lang/reflect/Constructor;",
                "   #244 = NameAndType        #5:#245      // \"<init>\":(Ljava/lang/String;)V",
                "   #247 = NameAndType        #248:#249    // getReflectionFactory:()Ljdk/internal/reflect/ReflectionFactory;",
                "   #251 = NameAndType        #252:#253    // getConstructor0:([Ljava/lang/Class;I)Ljava/lang/reflect/Constructor;",
                "   #256 = NameAndType        #258:#259    // copyConstructor:(Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;",
                "   #263 = NameAndType        #5:#264      // \"<init>\":(Ljava/lang/Class;Ljava/lang/reflect/Constructor;)V",
                "   #271 = NameAndType        #272:#273    // initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;",
                "   #275 = NameAndType        #276:#277    // newInstance:(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;",
                "   #282 = NameAndType        #284:#285    // getUnsafe:()Ljdk/internal/misc/Unsafe;",
                "   #287 = NameAndType        #288:#289    // getTargetException:()Ljava/lang/Throwable;",
                "   #291 = NameAndType        #292:#293    // throwException:(Ljava/lang/Throwable;)V",
                "   #295 = NameAndType        #296:#297    // name:Ljava/lang/String;",
                "   #299 = NameAndType        #300:#33     // initClassName:()Ljava/lang/String;",
                "   #302 = NameAndType        #303:#304    // checkClassLoaderPermission:(Ljava/lang/ClassLoader;Ljava/lang/Class;)V",
                "   #306 = NameAndType        #307:#308    // module:Ljava/lang/Module;",
                "   #310 = NameAndType        #311:#312    // classData:Ljava/lang/Object;",
                "   #314 = NameAndType        #315:#316    // getGenericInfo:()Lsun/reflect/generics/repository/ClassRepository;",
                "   #321 = NameAndType        #322:#52     // getSuperclass:()Ljava/lang/Class;",
                "   #324 = NameAndType        #322:#325    // getSuperclass:()Ljava/lang/reflect/Type;",
                "   #327 = NameAndType        #328:#329    // definePackage:(Ljava/lang/Class;)Ljava/lang/Package;",
                "   #332 = NameAndType        #333:#297    // packageName:Ljava/lang/String;",
                "   #335 = NameAndType        #336:#52     // elementType:()Ljava/lang/Class;",
                "   #340 = NameAndType        #341:#342    // lastIndexOf:(I)I",
                "   #344 = NameAndType        #345:#346    // substring:(II)Ljava/lang/String;",
                "   #348 = NameAndType        #349:#33     // intern:()Ljava/lang/String;",
                "   #351 = NameAndType        #352:#353    // getInterfaces:(Z)[Ljava/lang/Class;",
                "   #355 = NameAndType        #356:#357    // reflectionData:()Ljava/lang/Class$ReflectionData;",
                "   #359 = NameAndType        #360:#361    // getInterfaces0:()[Ljava/lang/Class;",
                "   #364 = NameAndType        #366:#367    // interfaces:[Ljava/lang/Class;",
                "   #370 = NameAndType        #371:#372    // clone:()Ljava/lang/Object;",
                "   #374 = NameAndType        #352:#361    // getInterfaces:()[Ljava/lang/Class;",
                "   #376 = NameAndType        #377:#136    // getSuperInterfaces:()[Ljava/lang/reflect/Type;",
                "   #379 = NameAndType        #380:#20     // isMemberClass:()Z",
                "   #382 = NameAndType        #383:#20     // isLocalClass:()Z",
                "   #385 = NameAndType        #386:#20     // isAnonymousClass:()Z",
                "   #389 = NameAndType        #391:#392    // INNER_CLASS:Ljava/lang/reflect/AccessFlag$Location;",
                "   #394 = NameAndType        #395:#392    // CLASS:Ljava/lang/reflect/AccessFlag$Location;",
                "   #397 = NameAndType        #398:#60     // getClassAccessFlagsRaw:()I",
                "   #401 = NameAndType        #403:#404    // maskToAccessFlags:(ILjava/lang/reflect/AccessFlag$Location;)Ljava/util/Set;",
                "   #406 = NameAndType        #407:#408    // getEnclosingMethodInfo:()Ljava/lang/Class$EnclosingMethodInfo;",
                "   #411 = NameAndType        #413:#20     // isMethod:()Z",
                "   #415 = NameAndType        #416:#33     // getDescriptor:()Ljava/lang/String;",
                "   #418 = NameAndType        #419:#420    // getFactory:()Lsun/reflect/generics/factory/GenericsFactory;",
                "   #423 = NameAndType        #425:#426    // make:(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/repository/MethodRepository;",
                "   #428 = NameAndType        #429:#325    // getReturnType:()Ljava/lang/reflect/Type;",
                "   #431 = NameAndType        #432:#433    // toClass:(Ljava/lang/reflect/Type;)Ljava/lang/Class;",
                "   #435 = NameAndType        #436:#136    // getParameterTypes:()[Ljava/lang/reflect/Type;",
                "   #438 = NameAndType        #439:#52     // getEnclosingClass:()Ljava/lang/Class;",
                "   #441 = NameAndType        #442:#443    // privateGetDeclaredMethods:(Z)[Ljava/lang/reflect/Method;",
                "   #450 = NameAndType        #451:#452    // getExecutableSharedParameterTypes:(Ljava/lang/reflect/Executable;)[Ljava/lang/Class;",
                "   #454 = NameAndType        #455:#456    // arrayContentsEq:([Ljava/lang/Object;[Ljava/lang/Object;)Z",
                "   #458 = NameAndType        #429:#52     // getReturnType:()Ljava/lang/Class;",
                "   #461 = NameAndType        #462:#463    // copyMethod:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;",
                "   #470 = NameAndType        #471:#472    // getEnclosingMethod0:()[Ljava/lang/Object;",
                "   #474 = NameAndType        #5:#475      // \"<init>\":([Ljava/lang/Object;)V",
                "   #479 = NameAndType        #480:#325    // getGenericComponentType:()Ljava/lang/reflect/Type;",
                "   #483 = NameAndType        #276:#485    // newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;",
                "   #487 = NameAndType        #488:#52     // getClass:()Ljava/lang/Class;",
                "   #490 = NameAndType        #491:#20     // isConstructor:()Z",
                "   #494 = NameAndType        #425:#496    // make:(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/repository/ConstructorRepository;",
                "   #499 = NameAndType        #500:#501    // privateGetDeclaredConstructors:(Z)[Ljava/lang/reflect/Constructor;",
                "   #505 = NameAndType        #506:#52     // getDeclaringClass0:()Ljava/lang/Class;",
                "   #508 = NameAndType        #509:#510    // checkPackageAccess:(Ljava/lang/SecurityManager;Ljava/lang/ClassLoader;Z)V",
                "   #514 = NameAndType        #515:#20     // isUnnamedClass:()Z",
                "   #517 = NameAndType        #518:#297    // simpleName:Ljava/lang/String;",
                "   #520 = NameAndType        #521:#33     // getSimpleName0:()Ljava/lang/String;",
                "   #523 = NameAndType        #524:#33     // getSimpleName:()Ljava/lang/String;",
                "   #526 = NameAndType        #527:#33     // getSimpleBinaryName:()Ljava/lang/String;",
                "   #529 = NameAndType        #345:#68     // substring:(I)Ljava/lang/String;",
                "   #533 = NameAndType        #534:#297    // canonicalName:Ljava/lang/String;",
                "   #536 = NameAndType        #537:#33     // getCanonicalName0:()Ljava/lang/String;",
                "   #539 = NameAndType        #540:#297    // NULL_SENTINEL:Ljava/lang/String;",
                "   #542 = NameAndType        #543:#33     // getCanonicalName:()Ljava/lang/String;",
                "   #545 = NameAndType        #546:#20     // isHidden:()Z",
                "   #548 = NameAndType        #549:#20     // isLocalOrAnonymousClass:()Z",
                "   #552 = NameAndType        #553:#60     // length:()I",
                "   #555 = NameAndType        #5:#556      // \"<init>\":(I)V",
                "   #559 = NameAndType        #561:#20     // isEnabled:()Z",
                "   #563 = NameAndType        #564:#20     // isSynthetic:()Z",
                "   #566 = NameAndType        #567:#20     // isTopLevelClass:()Z",
                "   #569 = NameAndType        #570:#571    // isFinal:(I)Z",
                "   #573 = NameAndType        #574:#33     // getSimpleBinaryName0:()Ljava/lang/String;",
                "   #576 = NameAndType        #577:#20     // hasEnclosingMethodInfo:()Z",
                "   #579 = NameAndType        #580:#475    // validate:([Ljava/lang/Object;)V",
                "   #584 = NameAndType        #5:#585      // \"<init>\":(Ljava/lang/Class;)V",
                "   #587 = NameAndType        #588:#589    // privateGetPublicFields:()[Ljava/lang/reflect/Field;",
                "   #591 = NameAndType        #592:#593    // copyFields:([Ljava/lang/reflect/Field;)[Ljava/lang/reflect/Field;",
                "   #595 = NameAndType        #596:#597    // privateGetPublicMethods:()[Ljava/lang/reflect/Method;",
                "   #599 = NameAndType        #600:#601    // copyMethods:([Ljava/lang/reflect/Method;)[Ljava/lang/reflect/Method;",
                "   #603 = NameAndType        #604:#605    // copyConstructors:([Ljava/lang/reflect/Constructor;)[Ljava/lang/reflect/Constructor;",
                "   #607 = NameAndType        #608:#609    // getField0:(Ljava/lang/String;)Ljava/lang/reflect/Field;",
                "   #614 = NameAndType        #615:#616    // copyField:(Ljava/lang/reflect/Field;)Ljava/lang/reflect/Field;",
                "   #618 = NameAndType        #619:#620    // getMethod0:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;",
                "   #622 = NameAndType        #623:#624    // methodToString:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/String;",
                "   #627 = NameAndType        #628:#361    // getDeclaredClasses0:()[Ljava/lang/Class;",
                "   #630 = NameAndType        #631:#632    // privateGetDeclaredFields:(Z)[Ljava/lang/reflect/Field;",
                "   #634 = NameAndType        #635:#636    // getRecordComponents0:()[Ljava/lang/reflect/RecordComponent;",
                "   #638 = NameAndType        #639:#640    // searchFields:([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;",
                "   #642 = NameAndType        #643:#644    // searchMethods:([Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;",
                "   #649 = NameAndType        #141:#456    // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z",
                "   #652 = NameAndType        #654:#142    // add:(Ljava/lang/Object;)Z",
                "   #656 = NameAndType        #657:#39     // resolveName:(Ljava/lang/String;)Ljava/lang/String;",
                "   #659 = NameAndType        #660:#20     // isNamed:()Z",
                "   #663 = NameAndType        #665:#666    // canEncapsulate:(Ljava/lang/String;)Z",
                "   #668 = NameAndType        #669:#670    // isOpenToCaller:(Ljava/lang/String;Ljava/lang/Class;)Z",
                "   #673 = NameAndType        #674:#675    // findResourceAsStream:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;",
                "   #680 = NameAndType        #681:#682    // findResource:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;",
                "   #685 = NameAndType        #687:#688    // openStream:()Ljava/io/InputStream;",
                "   #694 = NameAndType        #695:#696    // getSystemResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;",
                "   #698 = NameAndType        #699:#696    // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;",
                "   #702 = NameAndType        #703:#704    // getSystemResource:(Ljava/lang/String;)Ljava/net/URL;",
                "   #706 = NameAndType        #707:#704    // getResource:(Ljava/lang/String;)Ljava/net/URL;",
                "   #709 = NameAndType        #710:#39     // toPackageName:(Ljava/lang/String;)Ljava/lang/String;",
                "   #712 = NameAndType        #416:#713    // getDescriptor:()Ljava/lang/module/ModuleDescriptor;",
                "   #716 = NameAndType        #718:#719    // packages:()Ljava/util/Set;",
                "   #722 = NameAndType        #724:#142    // contains:(Ljava/lang/Object;)Z",
                "   #726 = NameAndType        #727:#666    // isOpen:(Ljava/lang/String;)Z",
                "   #729 = NameAndType        #727:#730    // isOpen:(Ljava/lang/String;Ljava/lang/Module;)Z",
                "   #732 = NameAndType        #733:#188    // GET_PD_PERMISSION:Ljava/lang/RuntimePermission;",
                "   #735 = NameAndType        #736:#737    // protectionDomain:()Ljava/security/ProtectionDomain;",
                "   #739 = NameAndType        #740:#737    // getProtectionDomain0:()Ljava/security/ProtectionDomain;",
                "   #742 = NameAndType        #743:#744    // allPermDomain:Ljava/security/ProtectionDomain;",
                "   #749 = NameAndType        #750:#751    // ALL_PERMISSION:Ljava/security/AllPermission;",
                "   #753 = NameAndType        #654:#194    // add:(Ljava/security/Permission;)V",
                "   #757 = NameAndType        #5:#758      // \"<init>\":(Ljava/security/CodeSource;Ljava/security/PermissionCollection;)V",
                "   #760 = NameAndType        #761:#188    // CHECK_MEMBER_ACCESS_PERMISSION:Ljava/lang/RuntimePermission;",
                "   #764 = NameAndType        #766:#767    // needsPackageAccessCheck:(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z",
                "   #769 = NameAndType        #770:#33     // getPackageName:()Ljava/lang/String;",
                "   #772 = NameAndType        #773:#20     // isEmpty:()Z",
                "   #776 = NameAndType        #778:#779    // isProxyClass:(Ljava/lang/Class;)Z",
                "   #781 = NameAndType        #782:#779    // isNonPublicProxyClass:(Ljava/lang/Class;)Z",
                "   #784 = NameAndType        #509:#245    // checkPackageAccess:(Ljava/lang/String;)V",
                "   #786 = NameAndType        #787:#788    // checkProxyPackageAccess:(Ljava/lang/ClassLoader;[Ljava/lang/Class;)V",
                "   #795 = NameAndType        #55:#796     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;",
                "   #799 = NameAndType        #800:#801    // iterator:()Ljava/util/Iterator;",
                "   #804 = NameAndType        #806:#20     // hasNext:()Z",
                "   #808 = NameAndType        #809:#372    // next:()Ljava/lang/Object;",
                "   #813 = NameAndType        #814:#666    // startsWith:(Ljava/lang/String;)Z",
                "   #816 = NameAndType        #817:#818    // replace:(CC)Ljava/lang/String;",
                "   #820 = NameAndType        #356:#821    // reflectionData:Ljava/lang/ref/SoftReference;",
                "   #823 = NameAndType        #824:#825    // classRedefinedCount:I",
                "   #828 = NameAndType        #830:#372    // get:()Ljava/lang/Object;",
                "   #832 = NameAndType        #833:#825    // redefinedCount:I",
                "   #835 = NameAndType        #836:#837    // newReflectionData:(Ljava/lang/ref/SoftReference;I)Ljava/lang/Class$ReflectionData;",
                "   #840 = NameAndType        #5:#841      // \"<init>\":(Ljava/lang/Object;)V",
                "   #844 = NameAndType        #846:#847    // casReflectionData:(Ljava/lang/Class;Ljava/lang/ref/SoftReference;Ljava/lang/ref/SoftReference;)Z",
                "   #850 = NameAndType        #425:#852    // make:(Ljava/lang/Class;)Lsun/reflect/generics/scope/ClassScope;",
                "   #855 = NameAndType        #425:#857    // make:(Ljava/lang/reflect/GenericDeclaration;Lsun/reflect/generics/scope/Scope;)Lsun/reflect/generics/factory/CoreReflectionFactory;",
                "   #859 = NameAndType        #860:#861    // genericInfo:Lsun/reflect/generics/repository/ClassRepository;",
                "   #863 = NameAndType        #864:#33     // getGenericSignature0:()Ljava/lang/String;",
                "   #866 = NameAndType        #867:#861    // NONE:Lsun/reflect/generics/repository/ClassRepository;",
                "   #869 = NameAndType        #425:#870    // make:(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/repository/ClassRepository;",
                "   #872 = NameAndType        #873:#874    // getExecutableTypeAnnotationBytes:(Ljava/lang/reflect/Executable;)[B",
                "   #876 = NameAndType        #877:#878    // declaredPublicFields:[Ljava/lang/reflect/Field;",
                "   #880 = NameAndType        #881:#878    // declaredFields:[Ljava/lang/reflect/Field;",
                "   #883 = NameAndType        #884:#632    // getDeclaredFields0:(Z)[Ljava/lang/reflect/Field;",
                "   #886 = NameAndType        #887:#888    // filterFields:(Ljava/lang/Class;[Ljava/lang/reflect/Field;)[Ljava/lang/reflect/Field;",
                "   #890 = NameAndType        #891:#878    // publicFields:[Ljava/lang/reflect/Field;",
                "   #896 = NameAndType        #897:#898    // addAll:(Ljava/util/Collection;[Ljava/lang/reflect/Field;)V",
                "   #902 = NameAndType        #903:#904    // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;",
                "   #910 = NameAndType        #911:#912    // publicConstructors:[Ljava/lang/reflect/Constructor;",
                "   #914 = NameAndType        #915:#912    // declaredConstructors:[Ljava/lang/reflect/Constructor;",
                "   #919 = NameAndType        #920:#501    // getDeclaredConstructors0:(Z)[Ljava/lang/reflect/Constructor;",
                "   #922 = NameAndType        #923:#924    // declaredPublicMethods:[Ljava/lang/reflect/Method;",
                "   #926 = NameAndType        #927:#924    // declaredMethods:[Ljava/lang/reflect/Method;",
                "   #929 = NameAndType        #930:#443    // getDeclaredMethods0:(Z)[Ljava/lang/reflect/Method;",
                "   #932 = NameAndType        #933:#934    // filterMethods:(Ljava/lang/Class;[Ljava/lang/reflect/Method;)[Ljava/lang/reflect/Method;",
                "   #936 = NameAndType        #937:#924    // publicMethods:[Ljava/lang/reflect/Method;",
                "   #942 = NameAndType        #943:#944    // merge:(Ljava/lang/reflect/Method;)V",
                "   #947 = NameAndType        #948:#571    // isStatic:(I)Z",
                "   #950 = NameAndType        #903:#597    // toArray:()[Ljava/lang/reflect/Method;",
                "   #953 = NameAndType        #954:#779    // isAssignableFrom:(Ljava/lang/Class;)Z",
                "   #956 = NameAndType        #957:#367    // EMPTY_CLASS_ARRAY:[Ljava/lang/Class;",
                "   #959 = NameAndType        #960:#961    // getMethodsRecursive:(Ljava/lang/String;[Ljava/lang/Class;Z)Ljava/lang/PublicMethods$MethodList;",
                "   #964 = NameAndType        #966:#967    // getMostSpecific:()Ljava/lang/reflect/Method;",
                "   #969 = NameAndType        #970:#971    // filter:([Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Class;Z)Ljava/lang/PublicMethods$MethodList;",
                "   #973 = NameAndType        #943:#974    // merge:(Ljava/lang/PublicMethods$MethodList;Ljava/lang/PublicMethods$MethodList;)Ljava/lang/PublicMethods$MethodList;",
                "   #986 = NameAndType        #987:#779    // desiredAssertionStatus0:(Ljava/lang/Class;)Z",
                "   #989 = NameAndType        #990:#312    // assertionLock:Ljava/lang/Object;",
                "   #992 = NameAndType        #993:#994    // classAssertionStatus:Ljava/util/Map;",
                "   #996 = NameAndType        #997:#666    // desiredAssertionStatus:(Ljava/lang/String;)Z",
                "  #1003 = NameAndType        #1004:#20    // isRecord0:()Z",
                "  #1006 = NameAndType        #1007:#1008  // reflectionFactory:Ljdk/internal/reflect/ReflectionFactory;",
                "  #1013 = NameAndType        #1014:#472   // getEnumConstantsShared:()[Ljava/lang/Object;",
                "  #1019 = NameAndType        #1020:#1017  // enumConstants:[Ljava/lang/Object;",
                "  #1024 = NameAndType        #1025:#620   // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;",
                "  #1029 = NameAndType        #5:#1030     // \"<init>\":(Ljava/lang/Class;Ljava/lang/reflect/Method;)V",
                "  #1032 = NameAndType        #1033:#1034  // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;",
                "  #1040 = NameAndType        #1041:#994   // enumConstantDirectory:Ljava/util/Map;",
                "  #1049 = NameAndType        #1051:#1052  // newHashMap:(I)Ljava/util/HashMap;",
                "  #1054 = NameAndType        #296:#33     // name:()Ljava/lang/String;",
                "  #1057 = NameAndType        #1059:#1060  // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;",
                "  #1062 = NameAndType        #1063:#142   // isInstance:(Ljava/lang/Object;)Z",
                "  #1065 = NameAndType        #1066:#1067  // cannotCastMsg:(Ljava/lang/Object;)Ljava/lang/String;",
                "  #1074 = NameAndType        #1075:#1076  // annotationData:()Ljava/lang/Class$AnnotationData;",
                "  #1079 = NameAndType        #1081:#994   // annotations:Ljava/util/Map;",
                "  #1083 = NameAndType        #830:#203    // get:(Ljava/lang/Object;)Ljava/lang/Object;",
                "  #1088 = NameAndType        #1090:#779   // isAnnotationPresent:(Ljava/lang/Class;)Z",
                "  #1092 = NameAndType        #1093:#994   // declaredAnnotations:Ljava/util/Map;",
                "  #1096 = NameAndType        #1098:#1099  // getAssociatedAnnotations:(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;",
                "  #1102 = NameAndType        #903:#1104   // toArray:(Ljava/util/Map;)[Ljava/lang/annotation/Annotation;",
                "  #1106 = NameAndType        #1107:#1108  // getDirectlyAndIndirectlyPresent:(Ljava/util/Map;Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;",
                "  #1110 = NameAndType        #1075:#1111  // annotationData:Ljava/lang/Class$AnnotationData;",
                "  #1114 = NameAndType        #1115:#1116  // createAnnotationData:(I)Ljava/lang/Class$AnnotationData;",
                "  #1118 = NameAndType        #1119:#1120  // casAnnotationData:(Ljava/lang/Class;Ljava/lang/Class$AnnotationData;Ljava/lang/Class$AnnotationData;)Z",
                "  #1122 = NameAndType        #1123:#1124  // getRawAnnotations:()[B",
                "  #1126 = NameAndType        #1127:#1128  // getConstantPool:()Ljdk/internal/reflect/ConstantPool;",
                "  #1130 = NameAndType        #1131:#1132  // parseAnnotations:([BLjdk/internal/reflect/ConstantPool;Ljava/lang/Class;)Ljava/util/Map;",
                "  #1134 = NameAndType        #1135:#719   // entrySet:()Ljava/util/Set;",
                "  #1139 = NameAndType        #1140:#372   // getKey:()Ljava/lang/Object;",
                "  #1143 = NameAndType        #1145:#1146  // getInstance:(Ljava/lang/Class;)Lsun/reflect/annotation/AnnotationType;",
                "  #1148 = NameAndType        #1149:#20    // isInherited:()Z",
                "  #1151 = NameAndType        #1152:#60    // size:()I",
                "  #1155 = NameAndType        #1157:#1158  // min:(II)I",
                "  #1160 = NameAndType        #1161:#1158  // max:(II)I",
                "  #1164 = NameAndType        #1166:#1167  // newLinkedHashMap:(I)Ljava/util/LinkedHashMap;",
                "  #1169 = NameAndType        #1170:#372   // getValue:()Ljava/lang/Object;",
                "  #1172 = NameAndType        #1173:#1174  // putAll:(Ljava/util/Map;)V",
                "  #1176 = NameAndType        #5:#1177     // \"<init>\":(Ljava/util/Map;Ljava/util/Map;I)V",
                "  #1179 = NameAndType        #1180:#1181  // casAnnotationType:(Ljava/lang/Class;Lsun/reflect/annotation/AnnotationType;Lsun/reflect/annotation/AnnotationType;)Z",
                "  #1183 = NameAndType        #1184:#1185  // annotationType:Lsun/reflect/annotation/AnnotationType;",
                "  #1188 = NameAndType        #1190:#16    // TYPE:Ljava/lang/Class;",
                "  #1192 = NameAndType        #1193:#1124  // getRawTypeAnnotations:()[B",
                "  #1196 = NameAndType        #1198:#1199  // buildAnnotatedSuperclass:([BLjdk/internal/reflect/ConstantPool;Ljava/lang/Class;)Ljava/lang/reflect/AnnotatedType;",
                "  #1201 = NameAndType        #1202:#1203  // buildAnnotatedInterfaces:([BLjdk/internal/reflect/ConstantPool;Ljava/lang/Class;)[Ljava/lang/reflect/AnnotatedType;",
                "  #1205 = NameAndType        #1206:#52    // getNestHost0:()Ljava/lang/Class;",
                "  #1208 = NameAndType        #1209:#52    // getNestHost:()Ljava/lang/Class;",
                "  #1211 = NameAndType        #1212:#361   // getNestMembers0:()[Ljava/lang/Class;",
                "  #1215 = NameAndType        #1217:#1218  // forPrimitiveType:(Ljava/lang/Class;)Lsun/invoke/util/Wrapper;",
                "  #1220 = NameAndType        #1221:#33    // basicTypeString:()Ljava/lang/String;",
                "  #1225 = NameAndType        #1226:#33    // descriptorString:()Ljava/lang/String;",
                "  #1228 = NameAndType        #1229:#342   // indexOf:(I)I",
                "  #1231 = NameAndType        #55:#1232    // append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;",
                "  #1236 = NameAndType        #5:#293      // \"<init>\":(Ljava/lang/Throwable;)V",
                "  #1239 = NameAndType        #1241:#1242  // empty:()Ljava/util/Optional;",
                "  #1245 = NameAndType        #1247:#1248  // ofDescriptor:(Ljava/lang/String;)Ljava/lang/constant/ClassDesc;",
                "  #1250 = NameAndType        #1251:#1252  // of:(Ljava/lang/Object;)Ljava/util/Optional;",
                "  #1254 = NameAndType        #1255:#361   // getPermittedSubclasses0:()[Ljava/lang/Class;",
                "  #1257 = NameAndType        #1258:#1259  // test:(Ljava/lang/Class;)Ljava/util/function/Predicate;",
                "  #1261 = NameAndType        #1262:#1263  // anyMatch:(Ljava/util/function/Predicate;)Z",
                "  #1266 = NameAndType        #970:#1267   // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;",
                "  #1269 = NameAndType        #101:#1270   // apply:()Ljava/util/function/IntFunction;",
                "  #1272 = NameAndType        #903:#1273   // toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;",
                "  #1275 = NameAndType        #1276:#1277  // checkPackageAccessForPermittedSubclasses:(Ljava/lang/SecurityManager;Ljava/lang/ClassLoader;[Ljava/lang/Class;)V",
                "  #1279 = NameAndType        #1280:#361   // getPermittedSubclasses:()[Ljava/lang/Class;",
                "  #1282 = NameAndType        #1283:#60    // getClassFileVersion0:()I",
                "  #1285 = NameAndType        #1286:#60    // getClassAccessFlagsRaw0:()I",
                "  #1288 = NameAndType        #1289:#52    // arrayType:()Ljava/lang/Class;",
                "  #1291 = NameAndType        #15:#52      // componentType:()Ljava/lang/Class;",
                "  #1293 = NameAndType        #1294:#779   // isDirectSubType:(Ljava/lang/Class;)Z",
                "  #1298 = NameAndType        #1299:#6     // registerNatives:()V",
                "  #1303 = NameAndType        #1304:#1305  // serialPersistentFields:[Ljava/io/ObjectStreamField;",
                "  #1638 = NameAndType        #1355:#1356  // typeVarBounds:(Ljava/lang/reflect/TypeVariable;)Ljava/lang/String;",
                "  #1642 = NameAndType        #1456:#33    // getTypeName:()Ljava/lang/String;",
                "  #1650 = NameAndType        #1627:#1628  // lambda$methodToString$0:(Ljava/lang/Class;)Ljava/lang/String;",
                "  #1655 = NameAndType        #1626:#779   // lambda$getPermittedSubclasses$1:(Ljava/lang/Class;)Z",
                "  #1662 = NameAndType        #1623:#1624  // lambda$getPermittedSubclasses$2:(I)[Ljava/lang/Class;",
                "  #1667 = NameAndType        #1669:#1670  // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
        );
    }
}
