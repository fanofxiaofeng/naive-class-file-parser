#!/bin/bash

# Please run this script in the root directory of this project (you should see a pom.xml in this directory)

# usage:
# ./scripts/constantPool.sh ${THE RELATIVE PATH TO THE CLASS FILE}

# examples:
# ./scripts/constantPool.sh 'com.study.parser.ParseResult'


#set -x
#set -v

mvn compile

RESULT_DIR="./scripts/result/"
if [[ -d "${RESULT_DIR}" ]]; then
   echo "directory: ${RESULT_DIR} will be re-created!"
   rm -rf ${RESULT_DIR}
fi
mkdir ${RESULT_DIR}


STANDARD_FILE='scripts/result/standard.txt'
OUTPUT_FILE='scripts/result/output.txt'
TEMP_FILE='scripts/result/temp.txt'


printf '%-20s -> %s\n' '$1' $1
printf '%-20s -> %s\n' '${STANDARD_FILE}' ${STANDARD_FILE}
printf '%-20s -> %s\n' '${OUTPUT_FILE}' ${OUTPUT_FILE}
printf '%-20s -> %s\n' '${TEMP_FILE}' ${TEMP_FILE}


# Save constant pool info generated by the `javap` command to `${STANDARD_FILE}`
# 1. the beginning line of Constant pool has text "Constant pool:"
# 2. the line after Constant pool has text "{"
# use `sed` command to find these two lines
# use grep to extract all lines between these two lines
FILENAME=$(echo $1 | sed 's|\.|/|g')
javap -v -p "target/classes/${FILENAME}.class" | sed -n '/^Constant pool:$/,/^{$/p' | grep '^ *#' > ${STANDARD_FILE}

mvn compile exec:java -DthePath=$1

touch ${TEMP_FILE}
sed -n '/^Constant pool:$/,/^{$/p' ${OUTPUT_FILE} | grep '^ *#' > ${TEMP_FILE}
mv ${TEMP_FILE} ${OUTPUT_FILE}

echo "Line count for ${STANDARD_FILE} (i.e. the number of items in constant pool parsed by javap): " "$(awk 'END{print NR}' ${STANDARD_FILE})"
echo "Line count for ${OUTPUT_FILE} (i.e. the number of items in constant pool parsed by this application): " "$(awk 'END{print NR}' ${OUTPUT_FILE})"
echo 'The result of executing diff command'
diff ${STANDARD_FILE} ${OUTPUT_FILE}
